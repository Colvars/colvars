colvars: Creating proxy instance
colvars: ----------------------------------------------------------------------
colvars: Please cite Fiorin et al, Mol Phys 2013:
colvars:  http://dx.doi.org/10.1080/00268976.2013.813594
colvars: in any publication based on this calculation.
colvars: Using LAMMPS interface, version 2017-01-09.
colvars: ----------------------------------------------------------------------
colvars: Reading new configuration from file "test.in":
colvars: # indexFile = "index.ndx"
colvars: The following index groups were read from the index file "index.ndx":
colvars:   Protein (104 atoms).
colvars:   Protein_noH (51 atoms).
colvars:   Protein_Backbone (40 atoms).
colvars:   Protein_C-alpha (10 atoms).
colvars:   RMSD_atoms (10 atoms).
colvars:   Protein_C-alpha_1_2 (2 atoms).
colvars:   Protein_C-alpha_9_10 (2 atoms).
colvars:   Protein_C-alpha_1 (1 atoms).
colvars:   group1 (4 atoms).
colvars:   Protein_C-alpha_2 (1 atoms).
colvars:   group2 (4 atoms).
colvars:   Protein_C-alpha_3 (1 atoms).
colvars:   group3 (4 atoms).
colvars:   Protein_C-alpha_4 (1 atoms).
colvars:   group4 (4 atoms).
colvars:   Protein_C-alpha_5 (1 atoms).
colvars:   group5 (4 atoms).
colvars:   Protein_C-alpha_6 (1 atoms).
colvars:   group6 (4 atoms).
colvars:   Protein_C-alpha_7 (1 atoms).
colvars:   group7 (4 atoms).
colvars:   Protein_C-alpha_8 (1 atoms).
colvars:   group8 (4 atoms).
colvars:   Protein_C-alpha_9 (1 atoms).
colvars:   group9 (4 atoms).
colvars:   Protein_C-alpha_10 (1 atoms).
colvars:   group10 (4 atoms).
colvars:   heavy_atoms (51 atoms).
colvars: # smp = on [default]
colvars: # analysis = off [default]
colvars: # colvarsTrajFrequency = 1
colvars: # colvarsRestartFrequency = 10
colvars: # colvarsTrajAppend = off [default]
colvars: # scriptedColvarForces = off [default]
colvars: # scriptingAfterBiases = on [default]
colvars: ----------------------------------------------------------------------
colvars:   Initializing a new collective variable.
colvars:   # name = "one"
colvars:   Initializing a new "rmsd" component.
colvars:     # componentCoeff = 1 [default]
colvars:     # componentExp = 1 [default]
colvars:     # period = 0 [default]
colvars:     # wrapAround = 0 [default]
colvars:     # scalable = on [default]
colvars:       Initializing atom group "atoms".
colvars:       # indexGroup = "RMSD_atoms"
colvars:       # psfSegID =  [default]
colvars:       # atomsFile = "" [default]
colvars:       # dummyAtom = ( 0 , 0 , 0 ) [default]
colvars:       # enableForces = on [default]
colvars:       # centerReference = on
colvars:       # rotateReference = on
colvars:       # enableFitGradients = on [default]
colvars:       Within atom group "atoms":
colvars:       Defining atom group "fittingGroup".
colvars:         Initializing atom group "fittingGroup".
colvars:         # indexGroup = "heavy_atoms"
colvars:         # psfSegID =  [default]
colvars:         # atomsFile = "" [default]
colvars:         # dummyAtom = ( 0 , 0 , 0 ) [default]
colvars:         # enableForces = on [default]
colvars:         # centerReference = off [default]
colvars:         # rotateReference = off [default]
colvars:         # enableFitGradients = on [default]
colvars:         Atom group "fittingGroup" defined, 51 atoms initialized: total mass = 51, total charge = 0.
colvars:       # refPositions =  [default]
colvars:       # refPositionsFile = "heavy_atoms_refpos.xyz"
colvars:       # refPositionsCol = "" [default]
colvars:       Warning: atom group "atoms" will be aligned to a fixed orientation given by the reference positions provided.  If the internal structure of the group changes too much (i.e. its RMSD is comparable to its radius of gyration), the optimal rotation and its gradients may become discontinuous.  If that happens, use fittingGroup (or a different definition for it if already defined) to align the coordinates.
colvars:       Atom group "atoms" defined, 10 atoms initialized: total mass = 10, total charge = 0.
colvars:     The option "refPositionsGroup" (alternative group for fitting) was enabled: Jacobian derivatives of the RMSD will not be calculated.
colvars:     # refPositions =  [default]
colvars:     # refPositionsFile = "rmsd_atoms_refpos.xyz"
colvars:     # refPositionsCol = "" [default]
colvars:     WARNING: explicit fitting parameters were provided for atom group "atoms".
colvars:   All components initialized.
colvars:   # width = 0.5
colvars:   # lowerBoundary = 0 [default]
colvars:   # upperBoundary = 0 [default]
colvars:   # expandBoundaries = off [default]
colvars:   # timeStepFactor = 1 [default]
colvars:   # extendedLagrangian = off [default]
colvars:   # outputValue = on [default]
colvars:   # outputVelocity = off [default]
colvars:   # outputTotalForce = off [default]
colvars:   # outputAppliedForce = on
colvars:   # subtractAppliedForce = off [default]
colvars: ----------------------------------------------------------------------
colvars: Collective variables initialized, 1 in total.
colvars: ----------------------------------------------------------------------
colvars:   Initializing a new "harmonic" instance.
colvars:   # name = "harmonic1" [default]
colvars:   # colvars = { one }
colvars:   # outputEnergy = off [default]
colvars:   # centers = { 0.1 }
colvars:   # targetCenters = { 0.1 } [default]
colvars:   # forceConstant = 0.001
colvars:   # targetForceConstant = 0 [default]
colvars:   The force constant for colvar "one" will be rescaled to 0.004 according to the specified width.
colvars: ----------------------------------------------------------------------
colvars: Collective variables biases initialized, 1 in total.
colvars: ----------------------------------------------------------------------
colvars: Collective variables module (re)initialized.
colvars: ----------------------------------------------------------------------
colvars: Re-initialized atom group one:0/0. 10 atoms: total mass = 10.
colvars: ----------------------------------------------------------------------
colvars: Restarting from file "test.colvars.state".
colvars:   Restarting collective variable "one" from value: 0.652252
colvars: ----------------------------------------------------------------------
colvars: The restart output state file will be "rest.colvars.state".
colvars: The final output state file will be "test.restart.colvars.state".
colvars: Writing to colvar trajectory file "test.restart.colvars.traj".
colvars: Re-initialized atom group one:0/0. 10 atoms: total mass = 120.11.
colvars: Synchronizing (emptying the buffer of) trajectory file "test.restart.colvars.traj".
colvars: Writing the state file "rest.colvars.state".
colvars: Synchronizing (emptying the buffer of) trajectory file "test.restart.colvars.traj".
colvars: Writing the state file "rest.colvars.state".
colvars: Saving collective variables state to "test.restart.colvars.state".
colvars: Resetting the Collective Variables Module.
