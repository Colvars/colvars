name: "Build tests and code analysis"

on:
  push:
    branches: [ master ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ master ]
  # schedule:
  #   - cron: '40 14 * * 4'

jobs:
  analyze:
    name: Build tests and CodeQL analysis
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        language: [ 'cpp' ] #, 'python' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Test build recipes
      run: bash devel-tools/check_build_recipes

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: ${{ matrix.language }}

    - name: Install build dependencies
      run: |
        sudo apt-get install tcl8.6-dev
        git clone --depth=1 https://github.com/openmm/openmm

    - name: Build with CMake
      if: ${{ matrix.language == 'cpp' }}
      shell: bash
      run: |
        cmake -E make_directory ${{github.workspace}}/build
        cmake $GITHUB_WORKSPACE/cmake -D COLVARS_TCL=ON -D LEPTON_DIR=${{github.workspace}}/openmm/libraries/lepton -S ${{github.workspace}}/cmake -B ${{github.workspace}}/build
        cmake --build ${{github.workspace}}/build --parallel

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1

    - name: Build with CMake (pre-C++11 code for VMD)
      if: ${{ matrix.language == 'cpp' }}
      shell: bash
      run: |
        cmake -E make_directory ${{github.workspace}}/build-legacy
        cmake -DCMAKE_CXX_STANDARD=98 -D COLVARS_TCL=ON -S ${{github.workspace}}/cmake -B ${{github.workspace}}/build-legacy
        cmake --build ${{github.workspace}}/build-legacy --parallel
