name: "Build and CodeQL analysis"

on: [push, pull_request_target]

jobs:

  basic-checks:
    name: Perform basic checks
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Test build recipes
        run: bash devel-tools/check_build_recipes

      - name: Convert BibTeX references to code
        shell: bash
        working-directory: doc
        run: |
          make update-code-refs
          if [ -n "$(git status --porcelain ../src/colvarmodule_refs.h)" ] ; then
              echo "Code citations out of date; please run make update-code-refs in the doc folder" >& 2
              exit 1
          fi


  build:
    name: Build Colvars & CodeQL Analysis
    runs-on: ubuntu-latest
    needs: basic-checks

    steps:
      - uses: actions/checkout@v2

      - name: Install build dependencies for library
        run: |
          sudo apt-get -y install tcl8.6-dev
          # OpenMM contains the latest Lepton
          git clone --single-branch --depth=1 https://github.com/openmm/openmm openmm-source

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: cpp

      - name: Build Colvars library with CMake
        shell: bash
        run: |
          cmake -D CMAKE_CXX_STANDARD=11 -D WARNINGS_ARE_ERRORS=ON -D CMAKE_VERBOSE_MAKEFILE=ON -D COLVARS_TCL=ON -D LEPTON_DIR=${{github.workspace}}/openmm-source/libraries/lepton -S ${{github.workspace}}/cmake -B ${{github.workspace}}/build
          cmake --build ${{github.workspace}}/build --parallel $(nproc --all)

      - name: Update documentation of command-line interface
        shell: bash
        working-directory: doc
        run: |
          make update-cvscript-cmdline-doc
          if [ -n "$(git status --porcelain cvscript-tcl.tex)" ] ; then
              echo "Command-line scripting doc out of date; please run make update-cvscript-cmdline-doc and commit changes" >& 2
              exit 1
          fi

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1


  build-legacy:
    name: Build Colvars with pre-C++11 code for VMD
    runs-on: ubuntu-latest
    needs: basic-checks

    steps:
      - uses: actions/checkout@v2

      - name: Install tcl
        run: sudo apt-get -y install tcl8.6-dev

      - name: Build Colvars
        shell: bash
        run: |
          cmake -D CMAKE_CXX_STANDARD=98 -D WARNINGS_ARE_ERRORS=ON -D CMAKE_VERBOSE_MAKEFILE=ON -D COLVARS_TCL=ON -S ${{github.workspace}}/cmake -B ${{github.workspace}}/build-legacy
          cmake --build ${{github.workspace}}/build-legacy --parallel $(nproc --all)


  build-sunpro:
    name: Build colvars with Sun compiler
    runs-on: ubuntu-latest
    needs: basic-checks

    strategy:
      fail-fast: false
      matrix:
        language: [ 'cpp' ]

    steps:
      - uses: actions/checkout@v2

      - name: Checkout Sun compiler (Oracle Developer Studio)
        uses: actions/checkout@v2
        with:
          repository: 'Colvars/oracle'
          ssh-key: ${{ secrets.PULL_ORACLE_DEVELOPER_STUDIO }}
          ref: 'master'
          path: ${{github.workspace}}/oracle

      - name: Install CentOS 7 container (needed by Sun compiler)
        shell: bash
        working-directory: devel-tools
        run: |
          sudo apt-get -y install squashfs-tools containernetworking-plugins
          curl -O http://http.us.debian.org/debian/pool/main/s/singularity-container/singularity-container_3.5.2+ds1-1_amd64.deb
          sudo dpkg -i singularity-container_3.5.2+ds1-1_amd64.deb
          singularity pull CentOS7-devel.sif library://giacomofiorin/default/colvars_development:centos7

      - name: Build library with Sun compiler (Oracle Developer Studio)
        shell: bash
        env:
          CC: ${{github.workspace}}/oracle/developerstudio12.6/bin/cc
          CXX: ${{github.workspace}}/oracle/developerstudio12.6/bin/CC
        run: |
          singularity exec ${{github.workspace}}/devel-tools/CentOS7-devel.sif \
          cmake3 -E make_directory ${{github.workspace}}/build-sunpro
          singularity exec ${{github.workspace}}/devel-tools/CentOS7-devel.sif \
          cmake3 -D CMAKE_CXX_STANDARD=11 -D WARNINGS_ARE_ERRORS=ON -D CMAKE_VERBOSE_MAKEFILE=ON -S ${{github.workspace}}/cmake -B ${{github.workspace}}/build-sunpro
          singularity exec ${{github.workspace}}/devel-tools/CentOS7-devel.sif \
          cmake3 --build ${{github.workspace}}/build-sunpro --parallel $(nproc --all)
