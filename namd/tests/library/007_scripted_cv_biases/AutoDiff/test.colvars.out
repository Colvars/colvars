colvars: ----------------------------------------------------------------------
colvars: Please cite Fiorin et al, Mol Phys 2013:
colvars:   https://doi.org/10.1080/00268976.2013.813594
colvars: as well as all other papers listed below for individual features used.
colvars: SMP parallelism is enabled; if needed, use "smp off" to override this.
colvars: This version was built with the C++11 standard or higher.
colvars: Redefining the Tcl "cv" command to the new script interface.
colvars: ----------------------------------------------------------------------
colvars: Reading new configuration from file "unscripted.in":
colvars: # units = "" [default]
colvars: # smp = on [default]
colvars: # colvarsTrajFrequency = 2
colvars: # colvarsRestartFrequency = 0 [default]
colvars: # scriptedColvarForces = on
colvars: # scriptingAfterBiases = off [default]
colvars: # sourceTclFile = "" [default]
colvars: ----------------------------------------------------------------------
colvars:   Initializing a new collective variable.
colvars:   # name = "d"
colvars:   Initializing a new "distance" component.
colvars:     # name = "" [default]
colvars:     # componentCoeff = 1 [default]
colvars:     # componentExp = 1 [default]
colvars:     # period = 0 [default]
colvars:     # wrapAround = 0 [default]
colvars:     # forceNoPBC = off [default]
colvars:     # scalable = on [default]
colvars:       Initializing atom group "group1".
colvars:       # name = "" [default]
colvars:       # centerToOrigin = off [default]
colvars:       # centerToReference = off [default]
colvars:       # rotateToReference = off [default]
colvars:       # atomsOfGroup = "" [default]
colvars:       # indexGroup = "" [default]
colvars:       # psfSegID =  [default]
colvars:       # atomsFile = "" [default]
colvars:       # dummyAtom = ( 0 , 0 , 0 ) [default]
colvars:       # enableFitGradients = on [default]
colvars:       Enabling scalable calculation for group "group1".
colvars:       # printAtomIDs = off [default]
colvars:       Atom group "group1" defined with 1 atoms requested: total mass = 12.011, total charge = -0.1.
colvars:       Initializing atom group "group2".
colvars:       # name = "" [default]
colvars:       # centerToOrigin = off [default]
colvars:       # centerToReference = off [default]
colvars:       # rotateToReference = off [default]
colvars:       # atomsOfGroup = "" [default]
colvars:       # indexGroup = "" [default]
colvars:       # psfSegID =  [default]
colvars:       # atomsFile = "" [default]
colvars:       # dummyAtom = ( 0 , 0 , 0 ) [default]
colvars:       # enableFitGradients = on [default]
colvars:       Enabling scalable calculation for group "group2".
colvars:       # printAtomIDs = off [default]
colvars:       Atom group "group2" defined with 1 atoms requested: total mass = 12.011, total charge = 0.07.
colvars:     # oneSiteSystemForce = off [default]
colvars:     # oneSiteTotalForce = off [default]
colvars:   All components initialized.
colvars:   # timeStepFactor = 1 [default]
colvars:   # width = 1 [default]
colvars:   # lowerBoundary = 0 [default]
colvars:   # upperBoundary = 1000
colvars:   Reading legacy options upperWall and upperWallConstant: consider using a harmonicWalls restraint (caution: force constant would then be scaled by width^2).
colvars:   # upperWall = 1000
colvars:   Generating a new harmonicWalls bias for compatibility purposes.
colvars:   # hardLowerBoundary = on [default]
colvars:   # hardUpperBoundary = off [default]
colvars:   # expandBoundaries = off [default]
colvars:   # extendedLagrangian = off [default]
colvars:   # outputValue = on [default]
colvars:   # outputVelocity = off [default]
colvars:   # outputTotalForce = off [default]
colvars:   # outputAppliedForce = on
colvars:   # subtractAppliedForce = off [default]
colvars:   # runAve = off [default]
colvars:   # corrFunc = off [default]
colvars: ----------------------------------------------------------------------
colvars:   Initializing a new collective variable.
colvars:   # name = "o"
colvars:   Initializing a new "orientation" component.
colvars:     # name = "" [default]
colvars:     # componentCoeff = 1 [default]
colvars:     # componentExp = 1 [default]
colvars:     # period = 0 [default]
colvars:     # wrapAround = 0 [default]
colvars:     # forceNoPBC = off [default]
colvars:     # scalable = on [default]
colvars:       Initializing atom group "atoms".
colvars:       # name = "" [default]
colvars:       # centerToOrigin = off [default]
colvars:       # centerToReference = off [default]
colvars:       # rotateToReference = off [default]
colvars:       # atomsOfGroup = "" [default]
colvars:       # indexGroup = "" [default]
colvars:       # psfSegID =  [default]
colvars:       # atomsFile = "" [default]
colvars:       # dummyAtom = ( 0 , 0 , 0 ) [default]
colvars:       # enableFitGradients = on [default]
colvars:       # printAtomIDs = off [default]
colvars:       Atom group "atoms" defined with 104 atoms requested: total mass = 727.821, total charge = 6.70552e-08.
colvars:     # refPositions =  [default]
colvars:     # refPositionsFile = "../Common/da.xyz"
colvars:     # refPositionsCol = "" [default]
colvars:     Warning: beginning from 2019-11-26 the XYZ file reader assumes Angstrom units.
colvars:     Centering the reference coordinates on the origin by subtracting the center of geometry at ( -1.09169 , -2.08869 , -2.98243 ); it is assumed that each atom is the closest periodic image to the center of geometry.
colvars:     # closestToQuaternion = ( 1 , 0 , 0 , 0 ) [default]
colvars:   All components initialized.
colvars:   # timeStepFactor = 1 [default]
colvars:   # width = 1 [default]
colvars:   # hardLowerBoundary = off [default]
colvars:   # hardUpperBoundary = off [default]
colvars:   # expandBoundaries = off [default]
colvars:   # extendedLagrangian = off [default]
colvars:   # outputValue = on [default]
colvars:   # outputVelocity = off [default]
colvars:   # outputTotalForce = off [default]
colvars:   # outputAppliedForce = off [default]
colvars:   # subtractAppliedForce = off [default]
colvars:   # runAve = off [default]
colvars:   # corrFunc = off [default]
colvars: ----------------------------------------------------------------------
colvars: Collective variables initialized, 2 in total.
colvars: ----------------------------------------------------------------------
colvars:   Initializing a new "harmonic" instance.
colvars:   # name = "harmonic1" [default]
colvars:   # colvars = { d }
colvars:   # stepZeroData = off [default]
colvars:   # outputEnergy = off [default]
colvars:   # outputFreq = 0 [default]
colvars:   # timeStepFactor = 1 [default]
colvars:   # writeTISamples = off [default]
colvars:   # writeTIPMF = off [default]
colvars:   # centers = { 18 }
colvars:   # targetCenters = { 18 } [default]
colvars:   # outputCenters = off [default]
colvars:   # forceConstant = 500
colvars:   # decoupling = off [default]
colvars:   # targetForceConstant = -1 [default]
colvars:   The force constant for colvar "d" will be rescaled to 500 according to the specified width (1).
colvars: ----------------------------------------------------------------------
colvars:   User forces script will be run at each bias update.
colvars: ----------------------------------------------------------------------
colvars: Collective variables biases initialized, 1 in total.
colvars: # units = "" [default]
colvars: # smp = on [default]
colvars: # colvarsTrajFrequency = 2 [default]
colvars: # colvarsRestartFrequency = 0 [default]
colvars: # scriptedColvarForces = on [default]
colvars: # scriptingAfterBiases = off [default]
colvars: # sourceTclFile = "" [default]
colvars: ----------------------------------------------------------------------
colvars: Collective variables initialized, 2 in total.
colvars: ----------------------------------------------------------------------
colvars:   Initializing a new "harmonicwalls" instance.
colvars:   # name = "dw"
colvars:   # colvars = { d }
colvars:   # stepZeroData = off [default]
colvars:   # outputEnergy = off [default]
colvars:   # outputFreq = 0 [default]
colvars:   # timeStepFactor = 1
colvars:   # writeTISamples = off [default]
colvars:   # writeTIPMF = off [default]
colvars:   # forceConstant = 1 [default]
colvars:   # decoupling = off [default]
colvars:   # targetForceConstant = -1 [default]
colvars:   # lowerWalls = { 0 } [default]
colvars:   Lower walls were not provided.
colvars:   # upperWalls = { 1000 }
colvars:   # upperWallConstant = 1
colvars:   The upper wall force constant for colvar "d" will be rescaled to 1 according to the specified width (1).
colvars: ----------------------------------------------------------------------
colvars:   User forces script will be run at each bias update.
colvars: ----------------------------------------------------------------------
colvars: Collective variables biases initialized, 2 in total.
colvars: ----------------------------------------------------------------------
colvars: Collective variables module (re)initialized.
colvars: ----------------------------------------------------------------------
colvars: Updating NAMD interface:
colvars: updating atomic data (104 atoms).
colvars: updating group data (2 scalable groups, 2 atoms in total).
colvars: updating grid object data (0 grid objects in total).
colvars: 
colvars: SUMMARY OF COLVARS FEATURES USED SO FAR AND THEIR CITATIONS:
colvars: 
colvars: - Colvars module:
colvars: - Colvars-NAMD interface:
colvars: - Harmonic colvar bias implementation:
colvars: - Optimal rotation via flexible fitting:
colvars: - distance colvar component:
colvars: - harmonicWalls colvar bias implementation:
colvars: - orientation colvar component:
colvars:   Fiorin2013 https://doi.org/10.1080/00268976.2013.813594
colvars: 
colvars: - NAMD engine:
colvars: - Scalable center-of-mass computation (NAMD):
colvars:   Phillips2020 https://doi.org/10.1063/5.0014475
colvars: 
colvars: updating target temperature (T = 0 K).
colvars: Re-initialized atom group for variable "d":0/0. 1 atoms: total mass = 12.011, total charge = -0.1.
colvars: Re-initialized atom group for variable "d":0/1. 1 atoms: total mass = 12.011, total charge = 0.07.
colvars: Re-initialized atom group for variable "o":0/0. 104 atoms: total mass = 727.821, total charge = 6.70552e-08.
colvars: The final output state file will be "test.colvars.state".
colvars: Updating NAMD interface:
colvars: updating atomic data (104 atoms).
colvars: updating group data (2 scalable groups, 2 atoms in total).
colvars: updating grid object data (0 grid objects in total).
colvars: updating target temperature (T = 0 K).
colvars: Re-initialized atom group for variable "d":0/0. 1 atoms: total mass = 12.011, total charge = -0.1.
colvars: Re-initialized atom group for variable "d":0/1. 1 atoms: total mass = 12.011, total charge = 0.07.
colvars: Re-initialized atom group for variable "o":0/0. 104 atoms: total mass = 727.821, total charge = 6.70552e-08.
colvars: The final output state file will be "test.colvars.state".
colvars: Saving collective variables state to "test.colvars.state".
colvars: Resetting the Collective Variables module.
colvars: ----------------------------------------------------------------------
colvars: Reading new configuration from file "scripted.in":
colvars: # units = "" [default]
colvars: # smp = on [default]
colvars: # colvarsTrajFrequency = 2
colvars: # colvarsRestartFrequency = 0 [default]
colvars: # scriptedColvarForces = on
colvars: # scriptingAfterBiases = off [default]
colvars: # sourceTclFile = "" [default]
colvars: ----------------------------------------------------------------------
colvars:   Initializing a new collective variable.
colvars:   # name = "ds"
colvars:   Initializing a new "distance" component.
colvars:     # name = "" [default]
colvars:     # componentCoeff = 1 [default]
colvars:     # componentExp = 1 [default]
colvars:     # period = 0 [default]
colvars:     # wrapAround = 0 [default]
colvars:     # forceNoPBC = off [default]
colvars:     # scalable = on [default]
colvars:       Initializing atom group "group1".
colvars:       # name = "" [default]
colvars:       # centerToOrigin = off [default]
colvars:       # centerToReference = off [default]
colvars:       # rotateToReference = off [default]
colvars:       # atomsOfGroup = "" [default]
colvars:       # indexGroup = "" [default]
colvars:       # psfSegID =  [default]
colvars:       # atomsFile = "" [default]
colvars:       # dummyAtom = ( 0 , 0 , 0 ) [default]
colvars:       # enableFitGradients = on [default]
colvars:       Enabling scalable calculation for group "group1".
colvars:       # printAtomIDs = off [default]
colvars:       Atom group "group1" defined with 1 atoms requested.
colvars:       Initializing atom group "group2".
colvars:       # name = "" [default]
colvars:       # centerToOrigin = off [default]
colvars:       # centerToReference = off [default]
colvars:       # rotateToReference = off [default]
colvars:       # atomsOfGroup = "" [default]
colvars:       # indexGroup = "" [default]
colvars:       # psfSegID =  [default]
colvars:       # atomsFile = "" [default]
colvars:       # dummyAtom = ( 0 , 0 , 0 ) [default]
colvars:       # enableFitGradients = on [default]
colvars:       Enabling scalable calculation for group "group2".
colvars:       # printAtomIDs = off [default]
colvars:       Atom group "group2" defined with 1 atoms requested.
colvars:     # oneSiteSystemForce = off [default]
colvars:     # oneSiteTotalForce = off [default]
colvars:   All components initialized.
colvars:   This colvar uses scripted function "Id".
colvars:   # scriptedFunctionType = "scalar" [default]
colvars:   Expecting colvar value of type scalar number
colvars:   # period = 0 [default]
colvars:   # timeStepFactor = 1 [default]
colvars:   # width = 1 [default]
colvars:   # lowerBoundary = 0 [default]
colvars:   # upperBoundary = 1000
colvars:   Reading legacy options upperWall and upperWallConstant: consider using a harmonicWalls restraint (caution: force constant would then be scaled by width^2).
colvars:   # upperWall = 1000
colvars:   Generating a new harmonicWalls bias for compatibility purposes.
colvars:   # hardLowerBoundary = off [default]
colvars:   # hardUpperBoundary = off [default]
colvars:   # expandBoundaries = off [default]
colvars:   # extendedLagrangian = off [default]
colvars:   # outputValue = on [default]
colvars:   # outputVelocity = off [default]
colvars:   # outputTotalForce = off [default]
colvars:   # outputAppliedForce = on
colvars:   # subtractAppliedForce = off [default]
colvars:   # runAve = off [default]
colvars:   # corrFunc = off [default]
colvars: ----------------------------------------------------------------------
colvars:   Initializing a new collective variable.
colvars:   # name = "vec"
colvars:   Initializing a new "cartesian" component.
colvars:     # name = "cvc2"
colvars:     # componentCoeff = 1 [default]
colvars:     # componentExp = 1 [default]
colvars:     # period = 0 [default]
colvars:     # wrapAround = 0 [default]
colvars:     # forceNoPBC = off [default]
colvars:     # scalable = on [default]
colvars:       Initializing atom group "atoms".
colvars:       # name = "" [default]
colvars:       # centerToOrigin = off [default]
colvars:       # centerToReference = off [default]
colvars:       # rotateToReference = off [default]
colvars:       # atomsOfGroup = "" [default]
colvars:       # indexGroup = "" [default]
colvars:       # psfSegID =  [default]
colvars:       # atomsFile = "" [default]
colvars:       # dummyAtom = ( 0 , 0 , 0 ) [default]
colvars:       # enableFitGradients = on [default]
colvars:       # printAtomIDs = off [default]
colvars:       Atom group "atoms" defined with 2 atoms requested.
colvars:     # useX = on [default]
colvars:     # useY = on [default]
colvars:     # useZ = on [default]
colvars:   Initializing a new "orientation" component.
colvars:     # name = "cvc1"
colvars:     # componentCoeff = 1 [default]
colvars:     # componentExp = 1 [default]
colvars:     # period = 0 [default]
colvars:     # wrapAround = 0 [default]
colvars:     # forceNoPBC = off [default]
colvars:     # scalable = on [default]
colvars:       Initializing atom group "atoms".
colvars:       # name = "" [default]
colvars:       # centerToOrigin = off [default]
colvars:       # centerToReference = off [default]
colvars:       # rotateToReference = off [default]
colvars:       # atomsOfGroup = "" [default]
colvars:       # indexGroup = "" [default]
colvars:       # psfSegID =  [default]
colvars:       # atomsFile = "" [default]
colvars:       # dummyAtom = ( 0 , 0 , 0 ) [default]
colvars:       # enableFitGradients = on [default]
colvars:       # printAtomIDs = off [default]
colvars:       Atom group "atoms" defined with 104 atoms requested.
colvars:     # refPositions =  [default]
colvars:     # refPositionsFile = "../Common/da.xyz"
colvars:     # refPositionsCol = "" [default]
colvars:     Centering the reference coordinates on the origin by subtracting the center of geometry at ( -1.09169 , -2.08869 , -2.98243 ); it is assumed that each atom is the closest periodic image to the center of geometry.
colvars:     # closestToQuaternion = ( 1 , 0 , 0 , 0 ) [default]
colvars:   All components initialized.
colvars:   This colvar uses scripted function "vector".
colvars:   # scriptedFunctionType = "vector"
colvars:   Expecting colvar value of type n-dimensional vector
colvars:   # scriptedFunctionVectorSize = 5
colvars:   Sorted list of components for this scripted colvar:
colvars:   1 cvc1
colvars:   2 cvc2
colvars:   # timeStepFactor = 1 [default]
colvars:   # width = 1 [default]
colvars:   # hardLowerBoundary = off [default]
colvars:   # hardUpperBoundary = off [default]
colvars:   # expandBoundaries = off [default]
colvars:   # extendedLagrangian = off [default]
colvars:   # outputValue = on [default]
colvars:   # outputVelocity = off [default]
colvars:   # outputTotalForce = off [default]
colvars:   # outputAppliedForce = on
colvars:   # subtractAppliedForce = off [default]
colvars:   # runAve = off [default]
colvars:   # corrFunc = off [default]
colvars: ----------------------------------------------------------------------
colvars: Collective variables initialized, 2 in total.
colvars: ----------------------------------------------------------------------
colvars:   User forces script will be run at each bias update.
colvars: ----------------------------------------------------------------------
colvars: Collective variables biases initialized, 0 in total.
colvars: # units = "" [default]
colvars: # smp = on [default]
colvars: # colvarsTrajFrequency = 2 [default]
colvars: # colvarsRestartFrequency = 0 [default]
colvars: # scriptedColvarForces = on [default]
colvars: # scriptingAfterBiases = off [default]
colvars: # sourceTclFile = "" [default]
colvars: ----------------------------------------------------------------------
colvars: Collective variables initialized, 2 in total.
colvars: ----------------------------------------------------------------------
colvars:   Initializing a new "harmonicwalls" instance.
colvars:   # name = "dsw"
colvars:   # colvars = { ds }
colvars:   # stepZeroData = off [default]
colvars:   # outputEnergy = off [default]
colvars:   # outputFreq = 0 [default]
colvars:   # timeStepFactor = 1
colvars:   # writeTISamples = off [default]
colvars:   # writeTIPMF = off [default]
colvars:   # forceConstant = 1 [default]
colvars:   # decoupling = off [default]
colvars:   # targetForceConstant = -1 [default]
colvars:   # lowerWalls = { 0 } [default]
colvars:   Lower walls were not provided.
colvars:   # upperWalls = { 1000 }
colvars:   # upperWallConstant = 1
colvars:   The upper wall force constant for colvar "ds" will be rescaled to 1 according to the specified width (1).
colvars: ----------------------------------------------------------------------
colvars:   User forces script will be run at each bias update.
colvars: ----------------------------------------------------------------------
colvars: Collective variables biases initialized, 1 in total.
colvars: ----------------------------------------------------------------------
colvars: Collective variables module (re)initialized.
colvars: ----------------------------------------------------------------------
colvars: Updating NAMD interface:
colvars: updating atomic data (104 atoms).
colvars: updating group data (2 scalable groups, 2 atoms in total).
colvars: updating grid object data (0 grid objects in total).
colvars: 
colvars: SUMMARY OF COLVARS FEATURES USED SO FAR AND THEIR CITATIONS:
colvars: 
colvars: - Colvars module:
colvars: - Colvars-NAMD interface:
colvars: - Harmonic colvar bias implementation:
colvars: - Optimal rotation via flexible fitting:
colvars: - cartesian colvar component:
colvars: - distance colvar component:
colvars: - harmonicWalls colvar bias implementation:
colvars: - orientation colvar component:
colvars:   Fiorin2013 https://doi.org/10.1080/00268976.2013.813594
colvars: 
colvars: - NAMD engine:
colvars: - Scalable center-of-mass computation (NAMD):
colvars:   Phillips2020 https://doi.org/10.1063/5.0014475
colvars: 
colvars: - Scripted functions (Tcl):
colvars:   n/a 
colvars: 
colvars: updating target temperature (T = 0 K).
colvars: Saving collective variables state to "test.colvars.state".
