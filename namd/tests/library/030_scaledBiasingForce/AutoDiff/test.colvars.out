colvars: ----------------------------------------------------------------------
colvars: Please cite Fiorin et al, Mol Phys 2013:
colvars:   https://doi.org/10.1080/00268976.2013.813594
colvars: as well as all other papers listed below for individual features used.
colvars: SMP parallelism is enabled; if needed, use "smp off" to override this.
colvars: This version was built with the C++11 standard or higher.
colvars: Redefining the Tcl "cv" command to the new script interface.
colvars: ----------------------------------------------------------------------
colvars: Reading new configuration from file "test.in":
colvars: # units = "" [default]
colvars: # smp = on [default]
colvars: # colvarsTrajFrequency = 1
colvars: # colvarsRestartFrequency = 10
colvars: # scriptedColvarForces = off [default]
colvars: # scriptingAfterBiases = off [default]
colvars: # sourceTclFile = "" [default]
colvars: ----------------------------------------------------------------------
colvars:   Initializing a new collective variable.
colvars:   # name = "end_to_end_distance"
colvars:   Initializing a new "distance" component.
colvars:     # name = "" [default]
colvars:     # componentCoeff = 1 [default]
colvars:     # componentExp = 1 [default]
colvars:     # period = 0 [default]
colvars:     # wrapAround = 0 [default]
colvars:     # forceNoPBC = off [default]
colvars:     # scalable = on [default]
colvars:       Initializing atom group "group1".
colvars:       # name = "" [default]
colvars:       # centerToOrigin = off [default]
colvars:       # centerToReference = off [default]
colvars:       # rotateToReference = off [default]
colvars:       # atomsOfGroup = "" [default]
colvars:       # indexGroup = "" [default]
colvars:       # psfSegID =  [default]
colvars:       # atomsFile = "" [default]
colvars:       # dummyAtom = ( 0 , 0 , 0 ) [default]
colvars:       # enableFitGradients = on [default]
colvars:       Enabling scalable calculation for group "group1".
colvars:       # printAtomIDs = off [default]
colvars:       Atom group "group1" defined with 1 atoms requested: total mass = 12.01, total charge = -0.3662.
colvars:       Initializing atom group "group2".
colvars:       # name = "" [default]
colvars:       # centerToOrigin = off [default]
colvars:       # centerToReference = off [default]
colvars:       # rotateToReference = off [default]
colvars:       # atomsOfGroup = "" [default]
colvars:       # indexGroup = "" [default]
colvars:       # psfSegID =  [default]
colvars:       # atomsFile = "" [default]
colvars:       # dummyAtom = ( 0 , 0 , 0 ) [default]
colvars:       # enableFitGradients = on [default]
colvars:       Enabling scalable calculation for group "group2".
colvars:       # printAtomIDs = off [default]
colvars:       Atom group "group2" defined with 1 atoms requested: total mass = 12.01, total charge = -0.149.
colvars:     # oneSiteSystemForce = off [default]
colvars:     # oneSiteTotalForce = off [default]
colvars:   All components initialized.
colvars:   # timeStepFactor = 1 [default]
colvars:   # width = 0.01
colvars:   # lowerBoundary = 13
colvars:   # upperBoundary = 15
colvars:   Reading legacy options lowerWall and lowerWallConstant: consider using a harmonicWalls restraint (caution: force constant would then be scaled by width^2).
colvars:   # lowerWall = 13
colvars:   Reading legacy options upperWall and upperWallConstant: consider using a harmonicWalls restraint (caution: force constant would then be scaled by width^2).
colvars:   # upperWall = 15
colvars:   Generating a new harmonicWalls bias for compatibility purposes.
colvars:   # hardLowerBoundary = off [default]
colvars:   # hardUpperBoundary = off [default]
colvars:   # expandBoundaries = on
colvars:   # extendedLagrangian = off [default]
colvars:   # outputValue = on [default]
colvars:   # outputVelocity = off [default]
colvars:   # outputTotalForce = off [default]
colvars:   # outputAppliedForce = on
colvars:   # subtractAppliedForce = on
colvars:   # runAve = off [default]
colvars:   # corrFunc = off [default]
colvars: ----------------------------------------------------------------------
colvars: Collective variables initialized, 1 in total.
colvars: ----------------------------------------------------------------------
colvars:   Initializing a new "abf" instance.
colvars:   # name = "production_abf"
colvars:   # colvars = { end_to_end_distance }
colvars:   # stepZeroData = off [default]
colvars:   # outputEnergy = off [default]
colvars:   # outputFreq = 10 [default]
colvars:   # timeStepFactor = 1 [default]
colvars:   # scaledBiasingForce = on
colvars:   # scaledBiasingForceFactorsGrid = "factors.grid"
colvars:   # applyBias = on [default]
colvars:   # updateBias = on [default]
colvars:   # hideJacobian = off [default]
colvars:   Jacobian (geometric) forces will be included in reported free energy gradients.
colvars:   # fullSamples = 1000
colvars:   # inputPrefix =  [default]
colvars:   # historyFreq = 10
colvars:   # shared = off [default]
colvars:   # maxForce =  [default]
colvars:   # integrate = on [default]
colvars:   Finished ABF setup.
colvars: ----------------------------------------------------------------------
colvars:   Initializing a new "metadynamics" instance.
colvars:   # name = "production_mtd"
colvars:   # colvars = { end_to_end_distance }
colvars:   # stepZeroData = off [default]
colvars:   # outputEnergy = off [default]
colvars:   # outputFreq = 10 [default]
colvars:   # timeStepFactor = 1 [default]
colvars:   # scaledBiasingForce = on
colvars:   # scaledBiasingForceFactorsGrid = "factors.grid"
colvars:   # writeTISamples = off [default]
colvars:   # writeTIPMF = off [default]
colvars:   # hillWeight = 2
colvars:   # newHillFrequency = 2
colvars:   # gaussianSigmas =  [default]
colvars:   # hillWidth = 5
colvars:   Half-widths of the Gaussian hills (sigma's):
colvars:   end_to_end_distance: 0.025
colvars:   # multipleReplicas = off [default]
colvars:   # useGrids = on [default]
colvars:   # gridsUpdateFrequency = 2 [default]
colvars:   # rebinGrids = off [default]
colvars:   Metadynamics bias "production_mtd": Will expand grids when the colvar "end_to_end_distance" approaches its boundaries.
colvars:   # writeFreeEnergyFile = on [default]
colvars:   # keepHills = off [default]
colvars:   # keepFreeEnergyFiles = off
colvars:   # writeHillsTrajectory = on
colvars:   # wellTempered = on
colvars:   # biasTemperature = 3000
colvars:   Well-tempered metadynamics is used.
colvars:   The bias temperature is 3000.
colvars:   # ebMeta = off [default]
colvars: WARNING: there are 2 time-dependent biases with non-zero force parameters:
colvars: { production_abf, production_mtd }
colvars: Please ensure that their forces do not counteract each other.
colvars: ----------------------------------------------------------------------
colvars: Collective variables biases initialized, 2 in total.
colvars: # units = "" [default]
colvars: # smp = on [default]
colvars: # colvarsTrajFrequency = 1 [default]
colvars: # colvarsRestartFrequency = 10 [default]
colvars: # scriptedColvarForces = off [default]
colvars: # scriptingAfterBiases = off [default]
colvars: # sourceTclFile = "" [default]
colvars: ----------------------------------------------------------------------
colvars: Collective variables initialized, 1 in total.
colvars: ----------------------------------------------------------------------
colvars:   Initializing a new "harmonicwalls" instance.
colvars:   # name = "end_to_end_distancew"
colvars:   # colvars = { end_to_end_distance }
colvars:   # stepZeroData = off [default]
colvars:   # outputEnergy = off [default]
colvars:   # outputFreq = 10 [default]
colvars:   # timeStepFactor = 1
colvars:   # writeTISamples = off [default]
colvars:   # writeTIPMF = off [default]
colvars:   # forceConstant = 1 [default]
colvars:   # decoupling = off [default]
colvars:   # targetForceConstant = -1 [default]
colvars:   # lowerWalls = { 13 }
colvars:   # upperWalls = { 15 }
colvars:   # lowerWallConstant = 0.001
colvars:   # upperWallConstant = 0.001
colvars:   The lower wall force constant for colvar "end_to_end_distance" will be rescaled to 10 according to the specified width (0.01).
colvars:   The upper wall force constant for colvar "end_to_end_distance" will be rescaled to 10 according to the specified width (0.01).
colvars: WARNING: there are 2 time-dependent biases with non-zero force parameters:
colvars: { production_abf, production_mtd }
colvars: Please ensure that their forces do not counteract each other.
colvars: ----------------------------------------------------------------------
colvars: Collective variables biases initialized, 3 in total.
colvars: ----------------------------------------------------------------------
colvars: Collective variables module (re)initialized.
colvars: ----------------------------------------------------------------------
colvars: Updating NAMD interface:
colvars: Warning: enabling wrapAll can lead to inconsistent results for Colvars calculations: please disable wrapAll, as is the default option in NAMD.
colvars: updating atomic data (0 atoms).
colvars: updating group data (2 scalable groups, 2 atoms in total).
colvars: updating grid object data (0 grid objects in total).
colvars: 
colvars: SUMMARY OF COLVARS FEATURES USED SO FAR AND THEIR CITATIONS:
colvars: 
colvars: - Colvars module:
colvars: - Colvars-NAMD interface:
colvars: - Metadynamics colvar bias implementation:
colvars: - Optimal rotation via flexible fitting:
colvars: - distance colvar component:
colvars: - harmonicWalls colvar bias implementation:
colvars:   Fiorin2013 https://doi.org/10.1080/00268976.2013.813594
colvars: 
colvars: - ABF colvar bias implementation:
colvars: - Internal-forces free energy estimator:
colvars:   Henin2010 https://doi.org/10.1021/ct9004432
colvars: 
colvars: - NAMD engine:
colvars: - Scalable center-of-mass computation (NAMD):
colvars:   Phillips2020 https://doi.org/10.1063/5.0014475
colvars: 
colvars: updating target temperature (T = 300 K).
colvars: Re-initialized atom group for variable "end_to_end_distance":0/0. 1 atoms: total mass = 12.01, total charge = -0.3662.
colvars: Re-initialized atom group for variable "end_to_end_distance":0/1. 1 atoms: total mass = 12.01, total charge = -0.149.
colvars: The restart output state file will be "test.colvars.state".
colvars: The final output state file will be "test.colvars.state".
colvars: Updating NAMD interface:
colvars: Warning: enabling wrapAll can lead to inconsistent results for Colvars calculations: please disable wrapAll, as is the default option in NAMD.
colvars: updating atomic data (0 atoms).
colvars: updating group data (2 scalable groups, 2 atoms in total).
colvars: updating grid object data (0 grid objects in total).
colvars: updating target temperature (T = 300 K).
colvars: Re-initialized atom group for variable "end_to_end_distance":0/0. 1 atoms: total mass = 12.01, total charge = -0.3662.
colvars: Re-initialized atom group for variable "end_to_end_distance":0/1. 1 atoms: total mass = 12.01, total charge = -0.149.
colvars: The restart output state file will be "test.colvars.state".
colvars: The final output state file will be "test.colvars.state".
colvars:   Prepared sample and gradient buffers at step 0.
colvars: Synchronizing (emptying the buffer of) trajectory file "test.colvars.traj".
colvars: Synchronizing (emptying the buffer of) trajectory file "test.colvars.traj".
colvars: Saving collective variables state to "test.colvars.state".
colvars: Synchronizing (emptying the buffer of) trajectory file "test.colvars.traj".
colvars: Saving collective variables state to "test.colvars.state".
colvars: Saving collective variables state to "test.colvars.state".
