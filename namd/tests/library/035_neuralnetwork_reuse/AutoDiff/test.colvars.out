colvars: ----------------------------------------------------------------------
colvars: Please cite Fiorin et al, Mol Phys 2013:
colvars:   https://doi.org/10.1080/00268976.2013.813594
colvars: as well as all other papers listed below for individual features used.
colvars: This version was built with the C++11 standard or higher.
colvars: Summary of compile-time features available in this build:
colvars:   - SMP parallelism: enabled (num. threads = 4)
colvars:   - Lepton custom functions: available
colvars:   - Tcl interpreter: available
colvars: Called colvarcript::init_commands()
colvars: Defined command "cv_addenergy", with help string:
colvars: Add an energy to the MD engine (no effect in VMD)
colvars: 
colvars: Parameters
colvars: ----------
colvars: 
colvars: E : float - Amount of energy to add
colvars: Defined command "cv_bias", with help string:
colvars: Prefix for bias-specific commands
colvars: Defined command "cv_colvar", with help string:
colvars: Prefix for colvar-specific commands
colvars: Defined command "cv_config", with help string:
colvars: Read configuration from the given string
colvars: 
colvars: Parameters
colvars: ----------
colvars: 
colvars: conf : string - Configuration string
colvars: Defined command "cv_configfile", with help string:
colvars: Read configuration from a file
colvars: 
colvars: Parameters
colvars: ----------
colvars: 
colvars: conf_file : string - Path to configuration file
colvars: Defined command "cv_delete", with help string:
colvars: Delete this Colvars module instance (VMD only)
colvars: Defined command "cv_featurereport", with help string:
colvars: Return a summary of Colvars features used so far and their citations
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: report : string - Feature report and citations
colvars: 
colvars: Defined command "cv_frame", with help string:
colvars: Get or set current frame number (VMD only)
colvars: 
colvars: Parameters
colvars: ----------
colvars: 
colvars: frame : integer - Frame number (optional)
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: frame : integer - Frame number
colvars: 
colvars: Defined command "cv_getatomappliedforces", with help string:
colvars: Get the list of forces applied by Colvars to atoms
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: forces : array of arrays of floats - Atomic forces
colvars: 
colvars: Defined command "cv_getatomappliedforcesmax", with help string:
colvars: Get the maximum norm of forces applied by Colvars to atoms
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: force : float - Maximum atomic force
colvars: 
colvars: Defined command "cv_getatomappliedforcesmaxid", with help string:
colvars: Get the atom ID with the largest applied force
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: id : int - ID of the atom with the maximum atomic force
colvars: 
colvars: Defined command "cv_getatomappliedforcesrms", with help string:
colvars: Get the root-mean-square norm of forces applied by Colvars to atoms
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: force : float - RMS atomic force
colvars: 
colvars: Defined command "cv_resetatomappliedforces", with help string:
colvars: Reset forces applied by Colvars to atoms
colvars: Defined command "cv_getatomids", with help string:
colvars: Get the list of indices of atoms used in Colvars
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: indices : array of ints - Atom indices
colvars: 
colvars: Defined command "cv_getatomcharges", with help string:
colvars: Get the list of charges of atoms used in Colvars
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: charges : array of floats - Atomic charges
colvars: 
colvars: Defined command "cv_getatommasses", with help string:
colvars: Get the list of masses of atoms used in Colvars
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: masses : array of floats - Atomic masses
colvars: 
colvars: Defined command "cv_getatompositions", with help string:
colvars: Get the list of cached positions of atoms used in Colvars
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: positions : array of arrays of floats - Atomic positions
colvars: 
colvars: Defined command "cv_getatomtotalforces", with help string:
colvars: Get the list of cached total forces of atoms used in Colvars
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: forces : array of arrays of floats - Atomic total foces
colvars: 
colvars: Defined command "cv_getconfig", with help string:
colvars: Get the module's configuration string read so far
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: conf : string - Current configuration string
colvars: 
colvars: Defined command "cv_getenergy", with help string:
colvars: Get the current Colvars energy
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: E : float - Amount of energy (internal units)
colvars: 
colvars: Defined command "cv_getnumactiveatomgroups", with help string:
colvars: Get the number of atom groups that currently have positive ref counts
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: count : integer - Total number of atom groups
colvars: 
colvars: Defined command "cv_getnumactiveatoms", with help string:
colvars: Get the number of atoms that currently have positive ref counts
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: count : integer - Total number of atoms
colvars: 
colvars: Defined command "cv_getnumatoms", with help string:
colvars: Get the number of requested atoms, including those not in use now
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: count : integer - Total number of atoms
colvars: 
colvars: Defined command "cv_getstepabsolute", with help string:
colvars: Get the current step number of the simulation (including restarts)
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: step : int - Absolute step number
colvars: 
colvars: Defined command "cv_getsteprelative", with help string:
colvars: Get the current step number from the start of this job
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: step : int - Relative step number
colvars: 
colvars: Defined command "cv_help", with help string:
colvars: Get the help string of the Colvars scripting interface
colvars: 
colvars: Parameters
colvars: ----------
colvars: 
colvars: command : string - Get the help string of this specific command (optional)
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: help : string - Help string
colvars: 
colvars: Defined command "cv_languageversion", with help string:
colvars: Get the C++ language version number
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: version : string - C++ language version
colvars: 
colvars: Defined command "cv_list", with help string:
colvars: Return a list of all variables or biases
colvars: 
colvars: Parameters
colvars: ----------
colvars: 
colvars: param : string - "colvars" or "biases"; default is "colvars" (optional)
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: list : sequence of strings - List of elements
colvars: 
colvars: Defined command "cv_listcommands", with help string:
colvars: Get the list of script functions, prefixed with "cv_", "colvar_" or "bias_"
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: list : sequence of strings - List of commands
colvars: 
colvars: Defined command "cv_listindexfiles", with help string:
colvars: Get a list of the index files loaded in this session
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: list : sequence of strings - List of index file names
colvars: 
colvars: Defined command "cv_listinputfiles", with help string:
colvars: Get a list of all input/configuration files loaded in this session
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: list : sequence of strings - List of file names
colvars: 
colvars: Defined command "cv_load", with help string:
colvars: Load data from a state file into all matching colvars and biases
colvars: 
colvars: Parameters
colvars: ----------
colvars: 
colvars: prefix : string - Path to existing state file or input prefix
colvars: Defined command "cv_loadfromstring", with help string:
colvars: Load state data from a string into all matching colvars and biases
colvars: 
colvars: Parameters
colvars: ----------
colvars: 
colvars: buffer : string - String buffer containing the state information
colvars: Defined command "cv_molid", with help string:
colvars: Get or set the molecule ID on which Colvars is defined (VMD only)
colvars: 
colvars: Parameters
colvars: ----------
colvars: 
colvars: molid : integer - New molecule ID; -1 means undefined (optional)
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: molid : integer - Current molecule ID
colvars: 
colvars: Defined command "cv_printframe", with help string:
colvars: Return the values that would be written to colvars.traj
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: values : string - The values
colvars: 
colvars: Defined command "cv_printframelabels", with help string:
colvars: Return the labels that would be written to colvars.traj
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: Labels : string - The labels
colvars: 
colvars: Defined command "cv_reset", with help string:
colvars: Delete all internal configuration
colvars: Defined command "cv_resetindexgroups", with help string:
colvars: Clear the index groups loaded so far, allowing to replace them
colvars: Defined command "cv_save", with help string:
colvars: Change the prefix of all output files and save them
colvars: 
colvars: Parameters
colvars: ----------
colvars: 
colvars: prefix : string - Output prefix with trailing ".colvars.state" gets removed)
colvars: Defined command "cv_savetostring", with help string:
colvars: Write the Colvars state to a string and return it
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: state : string - The saved state
colvars: 
colvars: Defined command "cv_targettemperature", with help string:
colvars: Get/set target temperature, overriding internally what the MD engine reports
colvars: 
colvars: Parameters
colvars: ----------
colvars: 
colvars: T : float - New target temperature in K (internal use) (optional)
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: T : float - Current target temperature in K
colvars: 
colvars: Defined command "cv_timestep", with help string:
colvars: Get/set integration timestep, overriding internally what the MD engine reports
colvars: 
colvars: Parameters
colvars: ----------
colvars: 
colvars: dt : float - New integration timestep in MD engine units (optional)
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: dt : float - Current integration timestep in MD engine units
colvars: 
colvars: Defined command "cv_units", with help string:
colvars: Get or set the current Colvars unit system
colvars: 
colvars: Parameters
colvars: ----------
colvars: 
colvars: units : string - The new unit system (optional)
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: units : string - The current unit system
colvars: 
colvars: Defined command "cv_update", with help string:
colvars: Recalculate colvars and biases
colvars: Defined command "cv_version", with help string:
colvars: Get the Colvars Module version string
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: version : string - Colvars version
colvars: 
colvars: Defined command "colvar_addforce", with help string:
colvars: Apply the given force onto this colvar (no effects outside run)
colvars: 
colvars: Parameters
colvars: ----------
colvars: 
colvars: force : float or array - Applied force; must match colvar dimensionality
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: force : float or array - Applied force; matches colvar dimensionality
colvars: 
colvars: Defined command "colvar_communicateforces", with help string:
colvars: Communicate bias forces from this colvar to atoms
colvars: Defined command "colvar_cvcflags", with help string:
colvars: Enable or disable individual components by setting their active flags
colvars: 
colvars: Parameters
colvars: ----------
colvars: 
colvars: flags : integer array - Zero/nonzero value disables/enables the CVC
colvars: Defined command "colvar_delete", with help string:
colvars: Delete this colvar, along with all biases that depend on it
colvars: Defined command "colvar_get", with help string:
colvars: Get the value of the given feature for this colvar
colvars: 
colvars: Parameters
colvars: ----------
colvars: 
colvars: feature : string - Name of the feature
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: state : 1/0 - State of the given feature
colvars: 
colvars: Defined command "colvar_getappliedforce", with help string:
colvars: Return the total of the forces applied to this colvar
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: force : float - Applied force; matches the colvar dimensionality
colvars: 
colvars: Defined command "colvar_resetbiasforce", with help string:
colvars: Return the total of the forces applied to this colvar
colvars: Defined command "colvar_getatomgroups", with help string:
colvars: Return the atom indices used by this colvar as a list of lists
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: groups : array of arrays of ints - Atom indices
colvars: 
colvars: Defined command "colvar_getatomids", with help string:
colvars: Return the list of atom indices used by this colvar
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: indices : array of ints - Atom indices
colvars: 
colvars: Defined command "colvar_getconfig", with help string:
colvars: Return the configuration string of this colvar
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: conf : string - Current configuration string
colvars: 
colvars: Defined command "colvar_getgradients", with help string:
colvars: Return the atomic gradients of this colvar
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: gradients : array of arrays of floats - Atomic gradients
colvars: 
colvars: Defined command "colvar_gettotalforce", with help string:
colvars: Return the sum of internal and external forces to this colvar
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: force : float - Total force; matches the colvar dimensionality
colvars: 
colvars: Defined command "colvar_getvolmapids", with help string:
colvars: Return the list of volumetric map indices used by this colvar
colvars: Defined command "colvar_help", with help string:
colvars: Get a help summary or the help string of one colvar subcommand
colvars: 
colvars: Parameters
colvars: ----------
colvars: 
colvars: command : string - Get the help string of this specific command (optional)
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: help : string - Help string
colvars: 
colvars: Defined command "colvar_modifycvcs", with help string:
colvars: Modify configuration of individual components by passing string arguments
colvars: 
colvars: Parameters
colvars: ----------
colvars: 
colvars: confs : sequence of strings - New configurations; empty strings are skipped
colvars: Defined command "colvar_run_ave", with help string:
colvars: Get the current running average of the value of this colvar
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: value : float or array - Averaged value; matches the colvar dimensionality
colvars: 
colvars: Defined command "colvar_set", with help string:
colvars: Set the given feature of this colvar to a new value
colvars: 
colvars: Parameters
colvars: ----------
colvars: 
colvars: feature : string - Name of the feature
colvars: value : string - String representation of the new feature value
colvars: Defined command "colvar_state", with help string:
colvars: Print a string representation of the feature state of this colvar
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: state : string - The feature state
colvars: 
colvars: Defined command "colvar_type", with help string:
colvars: Get the type description of this colvar
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: type : string - Type description
colvars: 
colvars: Defined command "colvar_update", with help string:
colvars: Recompute this colvar and return its up-to-date value
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: value : float or array - Current value; matches the colvar dimensionality
colvars: 
colvars: Defined command "colvar_value", with help string:
colvars: Get the current value of this colvar
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: value : float or array - Current value; matches the colvar dimensionality
colvars: 
colvars: Defined command "colvar_width", with help string:
colvars: Get the width of this colvar
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: width : float - Value of the width
colvars: 
colvars: Defined command "bias_bin", with help string:
colvars: Get the current grid bin index (flattened if more than 1d)
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: bin : integer - Bin index
colvars: 
colvars: Defined command "bias_bincount", with help string:
colvars: Get the number of samples at the given grid bin (1D ABF only for now)
colvars: 
colvars: Parameters
colvars: ----------
colvars: 
colvars: index : integer - Grid index; defaults to current bin (optional)
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: samples : integer - Number of samples
colvars: 
colvars: Defined command "bias_local_sample_count", with help string:
colvars: Get the number of samples around the current binsamples : integer - Number of samples
colvars: 
colvars: Parameters
colvars: ----------
colvars: 
colvars: radius : integer - Sum over radius bins around current bin (optional)
colvars: Defined command "bias_binnum", with help string:
colvars: Get the total number of grid points of this bias (1D ABF only for now)
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: Bins : integer - Number of grid points
colvars: 
colvars: Defined command "bias_delete", with help string:
colvars: Delete this bias
colvars: Defined command "bias_energy", with help string:
colvars: Get the current energy of this bias
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: E : float - Energy value
colvars: 
colvars: Defined command "bias_get", with help string:
colvars: Get the value of the given feature for this bias
colvars: 
colvars: Parameters
colvars: ----------
colvars: 
colvars: feature : string - Name of the feature
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: state : 1/0 - State of the given feature
colvars: 
colvars: Defined command "bias_getconfig", with help string:
colvars: Return the configuration string of this bias
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: conf : string - Current configuration string
colvars: 
colvars: Defined command "bias_help", with help string:
colvars: Get a help summary or the help string of one bias subcommand
colvars: 
colvars: Parameters
colvars: ----------
colvars: 
colvars: command : string - Get the help string of this specific command (optional)
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: help : string - Help string
colvars: 
colvars: Defined command "bias_load", with help string:
colvars: Load data into this bias
colvars: 
colvars: Parameters
colvars: ----------
colvars: 
colvars: prefix : string - Read from a file with this name or prefix
colvars: Defined command "bias_loadfromstring", with help string:
colvars: Load state data into this bias from a string
colvars: 
colvars: Parameters
colvars: ----------
colvars: 
colvars: buffer : string - String buffer containing the state information
colvars: Defined command "bias_save", with help string:
colvars: Save data from this bias into a file with the given prefix
colvars: 
colvars: Parameters
colvars: ----------
colvars: 
colvars: prefix : string - Prefix for the state file of this bias
colvars: Defined command "bias_savetostring", with help string:
colvars: Save data from this bias into a string and return it
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: state : string - The bias state
colvars: 
colvars: Defined command "bias_set", with help string:
colvars: Set the given feature of this bias to a new value
colvars: 
colvars: Parameters
colvars: ----------
colvars: 
colvars: feature : string - Name of the feature
colvars: value : string - String representation of the new feature value
colvars: Defined command "bias_share", with help string:
colvars: Share bias information with other replicas (multiple-walker scheme)
colvars: Defined command "bias_state", with help string:
colvars: Print a string representation of the feature state of this bias
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: state : string - String representation of the bias features
colvars: 
colvars: Defined command "bias_type", with help string:
colvars: Print the type of this bias object
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: type : string - Type of this bias object (e.g. metadynamics)
colvars: 
colvars: Defined command "bias_update", with help string:
colvars: Recompute this bias and return its up-to-date energy
colvars: 
colvars: Returns
colvars: -------
colvars: 
colvars: E : float - Energy value
colvars: 
colvars: Redefining the Tcl "cv" command to the new script interface.
colvars: ----------------------------------------------------------------------
colvars: Reading new configuration from file "test.in":
colvars: Looking for the keyword "logLevel" and its value.
colvars: Keyword "logLevel" not found.
colvars: Looking for the keyword "units" and its value.
colvars: Keyword "units" not found.
colvars: # units = "" [default]
colvars: Looking for the keyword "indexFile" and its value.
colvars: Keyword "indexFile" not found.
colvars: Looking for the keyword "smp" and its value.
colvars: Keyword "smp" not found.
colvars: # smp = on [default]
colvars: Looking for the keyword "analysis" and its value.
colvars: Keyword "analysis" not found.
colvars: Looking for the keyword "debugGradientsStepSize" and its value.
colvars: Keyword "debugGradientsStepSize" not found.
colvars: Looking for the keyword "monitorEigenvalueCrossing" and its value.
colvars: Keyword "monitorEigenvalueCrossing" not found.
colvars: Looking for the keyword "eigenvalueCrossingThreshold" and its value.
colvars: Keyword "eigenvalueCrossingThreshold" not found.
colvars: Looking for the keyword "colvarsTrajFrequency" and its value.
colvars: Keyword value = "1".
colvars: Looking for the keyword "colvarsTrajFrequency" and its value.
colvars: Keyword "colvarsTrajFrequency" not found.
colvars: # colvarsTrajFrequency = 1
colvars: Looking for the keyword "colvarsRestartFrequency" and its value.
colvars: Keyword value = "10".
colvars: Looking for the keyword "colvarsRestartFrequency" and its value.
colvars: Keyword "colvarsRestartFrequency" not found.
colvars: # colvarsRestartFrequency = 10
colvars: Looking for the keyword "scriptedColvarForces" and its value.
colvars: Keyword "scriptedColvarForces" not found.
colvars: # scriptedColvarForces = off [default]
colvars: Looking for the keyword "scriptingAfterBiases" and its value.
colvars: Keyword "scriptingAfterBiases" not found.
colvars: # scriptingAfterBiases = off [default]
colvars: Looking for the keyword "sourceTclFile" and its value.
colvars: Keyword "sourceTclFile" not found.
colvars: # sourceTclFile = "" [default]
colvars: Initializing the collective variables.
colvars: Looking for the keyword "colvar" and its value.
colvars: Keyword value = "
colvars:     name re1
colvars:     dihedral {
colvars:         name phi_1
colvars:         group1 {atomNumbers {10}}
colvars:         group2 {atomNumbers {12}}
colvars:         group3 {atomNumbers {14}}
colvars:         group4 {atomNumbers {20}}
colvars:         scalable off
colvars:     }
colvars: ".
colvars: ----------------------------------------------------------------------
colvars:   Initializing a new collective variable.
colvars:   Looking for the keyword "name" and its value.
colvars:   Keyword value = "re1".
colvars:   Looking for the keyword "name" and its value.
colvars:   Keyword "name" not found.
colvars:   # name = "re1"
colvars:   Looking for the keyword "alchFLambda" and its value.
colvars:   Keyword "alchFLambda" not found.
colvars:   Looking for the keyword "alchLambda" and its value.
colvars:   Keyword "alchLambda" not found.
colvars:   Looking for the keyword "alpha" and its value.
colvars:   Keyword "alpha" not found.
colvars:   Looking for the keyword "angle" and its value.
colvars:   Keyword "angle" not found.
colvars:   Looking for the keyword "aspath" and its value.
colvars:   Keyword "aspath" not found.
colvars:   Looking for the keyword "aspathCV" and its value.
colvars:   Keyword "aspathCV" not found.
colvars:   Looking for the keyword "azpath" and its value.
colvars:   Keyword "azpath" not found.
colvars:   Looking for the keyword "azpathCV" and its value.
colvars:   Keyword "azpathCV" not found.
colvars:   Looking for the keyword "cartesian" and its value.
colvars:   Keyword "cartesian" not found.
colvars:   Looking for the keyword "coordNum" and its value.
colvars:   Keyword "coordNum" not found.
colvars:   Looking for the keyword "customColvar" and its value.
colvars:   Keyword "customColvar" not found.
colvars:   Looking for the keyword "dihedral" and its value.
colvars:   Keyword value = "
colvars:         name phi_1
colvars:         group1 {atomNumbers {10}}
colvars:         group2 {atomNumbers {12}}
colvars:         group3 {atomNumbers {14}}
colvars:         group4 {atomNumbers {20}}
colvars:         scalable off
colvars: ".
colvars:   Initializing a new "dihedral" component, with configuration:
colvars: 
colvars:         name phi_1
colvars:         group1 {atomNumbers {10}}
colvars:         group2 {atomNumbers {12}}
colvars:         group3 {atomNumbers {14}}
colvars:         group4 {atomNumbers {20}}
colvars:         scalable off
colvars:   DEPS: uninitialized colvar component enabling "active"
colvars:   DEPS: feature "active" in uninitialized colvar component enabled, ref_count = 1.
colvars:   DEPS: uninitialized colvar component enabling "explicit_gradient"
colvars:   explicit_gradient requires exclude scalable_calculation
colvars:   explicit_gradient requires exclude scalable_calculation_of_centers_of_mass
colvars:   DEPS: feature "explicit_gradient" in uninitialized colvar component enabled, ref_count = 1.
colvars:   DEPS: uninitialized colvar component enabling "use_minimum-image_with_PBCs"
colvars:   DEPS: feature "use_minimum-image_with_PBCs" in uninitialized colvar component enabled, ref_count = 1.
colvars:   DEPS: unnamed cvc of type "dihedral" enabling "periodic"
colvars:   DEPS: feature "periodic" in unnamed cvc of type "dihedral" enabled, ref_count = 1.
colvars:   DEPS: unnamed cvc of type "dihedral" enabling "defined_lower_boundary"
colvars:   DEPS: feature "defined_lower_boundary" in unnamed cvc of type "dihedral" enabled, ref_count = 1.
colvars:   DEPS: unnamed cvc of type "dihedral" enabling "defined_upper_boundary"
colvars:   DEPS: feature "defined_upper_boundary" in unnamed cvc of type "dihedral" enabled, ref_count = 1.
colvars:   DEPS: unnamed cvc of type "dihedral" enabling "function_of_centers_of_mass"
colvars:   DEPS: feature "function_of_centers_of_mass" in unnamed cvc of type "dihedral" enabled, ref_count = 1.
colvars:     Initializing cvc base object.
colvars:     Updating configuration for component "dihedral0001"
colvars:     Looking for the keyword "name" and its value.
colvars:     Keyword value = "phi_1".
colvars:     Looking for the keyword "name" and its value.
colvars:     Keyword "name" not found.
colvars:     # name = "phi_1"
colvars:     Looking for the keyword "componentCoeff" and its value.
colvars:     Keyword "componentCoeff" not found.
colvars:     # componentCoeff = 1 [default]
colvars:     Looking for the keyword "componentExp" and its value.
colvars:     Keyword "componentExp" not found.
colvars:     # componentExp = 1 [default]
colvars:     Looking for the keyword "period" and its value.
colvars:     Keyword "period" not found.
colvars:     # period = 360 [default]
colvars:     Looking for the keyword "wrapAround" and its value.
colvars:     Keyword "wrapAround" not found.
colvars:     # wrapAround = 0 [default]
colvars:     DEPS: cvc "phi_1" of type "dihedral" enabling "periodic"
colvars:     Looking for the keyword "debugGradients" and its value.
colvars:     Keyword "debugGradients" not found.
colvars:     DEPS: disabling feature "debug_gradient" in cvc "phi_1" of type "dihedral"
colvars:     Looking for the keyword "forceNoPBC" and its value.
colvars:     Keyword "forceNoPBC" not found.
colvars:     # forceNoPBC = off [default]
colvars:     DEPS: cvc "phi_1" of type "dihedral" enabling "use_minimum-image_with_PBCs"
colvars:     Looking for the keyword "scalable" and its value.
colvars:     Keyword value = "off".
colvars:     Looking for the keyword "scalable" and its value.
colvars:     Keyword "scalable" not found.
colvars:     # scalable = off
colvars:     Done initializing cvc base object.
colvars:     Looking for the keyword "group1" and its value.
colvars:     Keyword value = "atomNumbers {10}".
colvars:       Initializing atom group "group1".
colvars:       Looking for the keyword "name" and its value.
colvars:       Keyword "name" not found.
colvars:       # name = "" [default]
colvars:       Looking for the keyword "centerToOrigin" and its value.
colvars:       Keyword "centerToOrigin" not found.
colvars:       # centerToOrigin = off [default]
colvars:       DEPS: disabling feature "center_to_origin" in atom group group1
colvars:       Looking for the keyword "centerReference" and its value.
colvars:       Keyword "centerReference" not found.
colvars:       DEPS: disabling feature "center_to_reference" in atom group group1
colvars:       Looking for the keyword "centerToReference" and its value.
colvars:       Keyword "centerToReference" not found.
colvars:       # centerToReference = off [default]
colvars:       DEPS: disabling feature "center_to_reference" in atom group group1
colvars:       Looking for the keyword "rotateReference" and its value.
colvars:       Keyword "rotateReference" not found.
colvars:       DEPS: disabling feature "rotate_to_origin" in atom group group1
colvars:       Looking for the keyword "rotateToReference" and its value.
colvars:       Keyword "rotateToReference" not found.
colvars:       # rotateToReference = off [default]
colvars:       DEPS: disabling feature "rotate_to_origin" in atom group group1
colvars:       Looking for the keyword "atomsOfGroup" and its value.
colvars:       Keyword "atomsOfGroup" not found.
colvars:       # atomsOfGroup = "" [default]
colvars:       Looking for the keyword "atomNumbers" and its value.
colvars:       Keyword value = "10".
colvars:       Adding atom 10 for collective variables calculation.
colvars:       Looking for the keyword "atomNumbers" and its value.
colvars:       Keyword "atomNumbers" not found.
colvars:       Looking for the keyword "indexGroup" and its value.
colvars:       Keyword "indexGroup" not found.
colvars:       # indexGroup = "" [default]
colvars:       Looking for the keyword "atomNumbersRange" and its value.
colvars:       Keyword "atomNumbersRange" not found.
colvars:       Looking for the keyword "psfSegID" and its value.
colvars:       Keyword "psfSegID" not found.
colvars:       # psfSegID =  [default]
colvars:       Looking for the keyword "atomNameResidueRange" and its value.
colvars:       Keyword "atomNameResidueRange" not found.
colvars:       Looking for the keyword "atomsFile" and its value.
colvars:       Keyword "atomsFile" not found.
colvars:       # atomsFile = "" [default]
colvars:       Looking for the keyword "dummyAtom" and its value.
colvars:       Keyword "dummyAtom" not found.
colvars:       # dummyAtom = ( 0 , 0 , 0 ) [default]
colvars:       Looking for the keyword "enableForces" and its value.
colvars:       Keyword "enableForces" not found.
colvars:       Looking for the keyword "enableFitGradients" and its value.
colvars:       Keyword "enableFitGradients" not found.
colvars:       # enableFitGradients = on [default]
colvars:       Looking for the keyword "printAtomIDs" and its value.
colvars:       Keyword "printAtomIDs" not found.
colvars:       # printAtomIDs = off [default]
colvars:       Done initializing atom group "group1".
colvars:       Atom group "group1" defined with 1 atoms requested: total mass = 12.011, total charge = 0.51.
colvars:         DEPS: re-enabling children's explicit_atom_gradient
colvars:         DEPS: atom group group1 enabling "explicit_atom_gradient"
colvars:         DEPS: feature "explicit_atom_gradient" in atom group group1 enabled, ref_count = 1.
colvars:       DEPS: cvc "phi_1" of type "dihedral" enabling "explicit_atom_groups"
colvars:       DEPS: feature "explicit_atom_groups" in cvc "phi_1" of type "dihedral" enabled, ref_count = 1.
colvars:       Configuration string for "group1": "
colvars: atomNumbers {10}".
colvars:     Looking for the keyword "group2" and its value.
colvars:     Keyword value = "atomNumbers {12}".
colvars:       Initializing atom group "group2".
colvars:       Looking for the keyword "name" and its value.
colvars:       Keyword "name" not found.
colvars:       # name = "" [default]
colvars:       Looking for the keyword "centerToOrigin" and its value.
colvars:       Keyword "centerToOrigin" not found.
colvars:       # centerToOrigin = off [default]
colvars:       DEPS: disabling feature "center_to_origin" in atom group group2
colvars:       Looking for the keyword "centerReference" and its value.
colvars:       Keyword "centerReference" not found.
colvars:       DEPS: disabling feature "center_to_reference" in atom group group2
colvars:       Looking for the keyword "centerToReference" and its value.
colvars:       Keyword "centerToReference" not found.
colvars:       # centerToReference = off [default]
colvars:       DEPS: disabling feature "center_to_reference" in atom group group2
colvars:       Looking for the keyword "rotateReference" and its value.
colvars:       Keyword "rotateReference" not found.
colvars:       DEPS: disabling feature "rotate_to_origin" in atom group group2
colvars:       Looking for the keyword "rotateToReference" and its value.
colvars:       Keyword "rotateToReference" not found.
colvars:       # rotateToReference = off [default]
colvars:       DEPS: disabling feature "rotate_to_origin" in atom group group2
colvars:       Looking for the keyword "atomsOfGroup" and its value.
colvars:       Keyword "atomsOfGroup" not found.
colvars:       # atomsOfGroup = "" [default]
colvars:       Looking for the keyword "atomNumbers" and its value.
colvars:       Keyword value = "12".
colvars:       Adding atom 12 for collective variables calculation.
colvars:       Looking for the keyword "atomNumbers" and its value.
colvars:       Keyword "atomNumbers" not found.
colvars:       Looking for the keyword "indexGroup" and its value.
colvars:       Keyword "indexGroup" not found.
colvars:       # indexGroup = "" [default]
colvars:       Looking for the keyword "atomNumbersRange" and its value.
colvars:       Keyword "atomNumbersRange" not found.
colvars:       Looking for the keyword "psfSegID" and its value.
colvars:       Keyword "psfSegID" not found.
colvars:       # psfSegID =  [default]
colvars:       Looking for the keyword "atomNameResidueRange" and its value.
colvars:       Keyword "atomNameResidueRange" not found.
colvars:       Looking for the keyword "atomsFile" and its value.
colvars:       Keyword "atomsFile" not found.
colvars:       # atomsFile = "" [default]
colvars:       Looking for the keyword "dummyAtom" and its value.
colvars:       Keyword "dummyAtom" not found.
colvars:       # dummyAtom = ( 0 , 0 , 0 ) [default]
colvars:       Looking for the keyword "enableForces" and its value.
colvars:       Keyword "enableForces" not found.
colvars:       Looking for the keyword "enableFitGradients" and its value.
colvars:       Keyword "enableFitGradients" not found.
colvars:       # enableFitGradients = on [default]
colvars:       Looking for the keyword "printAtomIDs" and its value.
colvars:       Keyword "printAtomIDs" not found.
colvars:       # printAtomIDs = off [default]
colvars:       Done initializing atom group "group2".
colvars:       Atom group "group2" defined with 1 atoms requested: total mass = 14.007, total charge = -0.47.
colvars:         DEPS: re-enabling children's explicit_atom_gradient
colvars:         DEPS: atom group group2 enabling "explicit_atom_gradient"
colvars:         DEPS: feature "explicit_atom_gradient" in atom group group2 enabled, ref_count = 1.
colvars:       DEPS: cvc "phi_1" of type "dihedral" enabling "explicit_atom_groups"
colvars:       Configuration string for "group2": "
colvars: atomNumbers {12}".
colvars:     Looking for the keyword "group3" and its value.
colvars:     Keyword value = "atomNumbers {14}".
colvars:       Initializing atom group "group3".
colvars:       Looking for the keyword "name" and its value.
colvars:       Keyword "name" not found.
colvars:       # name = "" [default]
colvars:       Looking for the keyword "centerToOrigin" and its value.
colvars:       Keyword "centerToOrigin" not found.
colvars:       # centerToOrigin = off [default]
colvars:       DEPS: disabling feature "center_to_origin" in atom group group3
colvars:       Looking for the keyword "centerReference" and its value.
colvars:       Keyword "centerReference" not found.
colvars:       DEPS: disabling feature "center_to_reference" in atom group group3
colvars:       Looking for the keyword "centerToReference" and its value.
colvars:       Keyword "centerToReference" not found.
colvars:       # centerToReference = off [default]
colvars:       DEPS: disabling feature "center_to_reference" in atom group group3
colvars:       Looking for the keyword "rotateReference" and its value.
colvars:       Keyword "rotateReference" not found.
colvars:       DEPS: disabling feature "rotate_to_origin" in atom group group3
colvars:       Looking for the keyword "rotateToReference" and its value.
colvars:       Keyword "rotateToReference" not found.
colvars:       # rotateToReference = off [default]
colvars:       DEPS: disabling feature "rotate_to_origin" in atom group group3
colvars:       Looking for the keyword "atomsOfGroup" and its value.
colvars:       Keyword "atomsOfGroup" not found.
colvars:       # atomsOfGroup = "" [default]
colvars:       Looking for the keyword "atomNumbers" and its value.
colvars:       Keyword value = "14".
colvars:       Adding atom 14 for collective variables calculation.
colvars:       Looking for the keyword "atomNumbers" and its value.
colvars:       Keyword "atomNumbers" not found.
colvars:       Looking for the keyword "indexGroup" and its value.
colvars:       Keyword "indexGroup" not found.
colvars:       # indexGroup = "" [default]
colvars:       Looking for the keyword "atomNumbersRange" and its value.
colvars:       Keyword "atomNumbersRange" not found.
colvars:       Looking for the keyword "psfSegID" and its value.
colvars:       Keyword "psfSegID" not found.
colvars:       # psfSegID =  [default]
colvars:       Looking for the keyword "atomNameResidueRange" and its value.
colvars:       Keyword "atomNameResidueRange" not found.
colvars:       Looking for the keyword "atomsFile" and its value.
colvars:       Keyword "atomsFile" not found.
colvars:       # atomsFile = "" [default]
colvars:       Looking for the keyword "dummyAtom" and its value.
colvars:       Keyword "dummyAtom" not found.
colvars:       # dummyAtom = ( 0 , 0 , 0 ) [default]
colvars:       Looking for the keyword "enableForces" and its value.
colvars:       Keyword "enableForces" not found.
colvars:       Looking for the keyword "enableFitGradients" and its value.
colvars:       Keyword "enableFitGradients" not found.
colvars:       # enableFitGradients = on [default]
colvars:       Looking for the keyword "printAtomIDs" and its value.
colvars:       Keyword "printAtomIDs" not found.
colvars:       # printAtomIDs = off [default]
colvars:       Done initializing atom group "group3".
colvars:       Atom group "group3" defined with 1 atoms requested: total mass = 12.011, total charge = 0.07.
colvars:         DEPS: re-enabling children's explicit_atom_gradient
colvars:         DEPS: atom group group3 enabling "explicit_atom_gradient"
colvars:         DEPS: feature "explicit_atom_gradient" in atom group group3 enabled, ref_count = 1.
colvars:       DEPS: cvc "phi_1" of type "dihedral" enabling "explicit_atom_groups"
colvars:       Configuration string for "group3": "
colvars: atomNumbers {14}".
colvars:     Looking for the keyword "group4" and its value.
colvars:     Keyword value = "atomNumbers {20}".
colvars:       Initializing atom group "group4".
colvars:       Looking for the keyword "name" and its value.
colvars:       Keyword "name" not found.
colvars:       # name = "" [default]
colvars:       Looking for the keyword "centerToOrigin" and its value.
colvars:       Keyword "centerToOrigin" not found.
colvars:       # centerToOrigin = off [default]
colvars:       DEPS: disabling feature "center_to_origin" in atom group group4
colvars:       Looking for the keyword "centerReference" and its value.
colvars:       Keyword "centerReference" not found.
colvars:       DEPS: disabling feature "center_to_reference" in atom group group4
colvars:       Looking for the keyword "centerToReference" and its value.
colvars:       Keyword "centerToReference" not found.
colvars:       # centerToReference = off [default]
colvars:       DEPS: disabling feature "center_to_reference" in atom group group4
colvars:       Looking for the keyword "rotateReference" and its value.
colvars:       Keyword "rotateReference" not found.
colvars:       DEPS: disabling feature "rotate_to_origin" in atom group group4
colvars:       Looking for the keyword "rotateToReference" and its value.
colvars:       Keyword "rotateToReference" not found.
colvars:       # rotateToReference = off [default]
colvars:       DEPS: disabling feature "rotate_to_origin" in atom group group4
colvars:       Looking for the keyword "atomsOfGroup" and its value.
colvars:       Keyword "atomsOfGroup" not found.
colvars:       # atomsOfGroup = "" [default]
colvars:       Looking for the keyword "atomNumbers" and its value.
colvars:       Keyword value = "20".
colvars:       Adding atom 20 for collective variables calculation.
colvars:       Looking for the keyword "atomNumbers" and its value.
colvars:       Keyword "atomNumbers" not found.
colvars:       Looking for the keyword "indexGroup" and its value.
colvars:       Keyword "indexGroup" not found.
colvars:       # indexGroup = "" [default]
colvars:       Looking for the keyword "atomNumbersRange" and its value.
colvars:       Keyword "atomNumbersRange" not found.
colvars:       Looking for the keyword "psfSegID" and its value.
colvars:       Keyword "psfSegID" not found.
colvars:       # psfSegID =  [default]
colvars:       Looking for the keyword "atomNameResidueRange" and its value.
colvars:       Keyword "atomNameResidueRange" not found.
colvars:       Looking for the keyword "atomsFile" and its value.
colvars:       Keyword "atomsFile" not found.
colvars:       # atomsFile = "" [default]
colvars:       Looking for the keyword "dummyAtom" and its value.
colvars:       Keyword "dummyAtom" not found.
colvars:       # dummyAtom = ( 0 , 0 , 0 ) [default]
colvars:       Looking for the keyword "enableForces" and its value.
colvars:       Keyword "enableForces" not found.
colvars:       Looking for the keyword "enableFitGradients" and its value.
colvars:       Keyword "enableFitGradients" not found.
colvars:       # enableFitGradients = on [default]
colvars:       Looking for the keyword "printAtomIDs" and its value.
colvars:       Keyword "printAtomIDs" not found.
colvars:       # printAtomIDs = off [default]
colvars:       Done initializing atom group "group4".
colvars:       Atom group "group4" defined with 1 atoms requested: total mass = 12.011, total charge = 0.51.
colvars:         DEPS: re-enabling children's explicit_atom_gradient
colvars:         DEPS: atom group group4 enabling "explicit_atom_gradient"
colvars:         DEPS: feature "explicit_atom_gradient" in atom group group4 enabled, ref_count = 1.
colvars:       DEPS: cvc "phi_1" of type "dihedral" enabling "explicit_atom_groups"
colvars:       Configuration string for "group4": "
colvars: atomNumbers {20}".
colvars:     Looking for the keyword "oneSiteSystemForce" and its value.
colvars:     Keyword "oneSiteSystemForce" not found.
colvars:     # oneSiteSystemForce = off [default]
colvars:     DEPS: disabling feature "total_force_from_one_group" in cvc "phi_1" of type "dihedral"
colvars:     Looking for the keyword "oneSiteTotalForce" and its value.
colvars:     Keyword "oneSiteTotalForce" not found.
colvars:     # oneSiteTotalForce = off [default]
colvars:     DEPS: disabling feature "total_force_from_one_group" in cvc "phi_1" of type "dihedral"
colvars:     Configuration string for "dihedral": "
colvars: 
colvars:         name phi_1
colvars:         group1 {atomNumbers {10}}
colvars:         group2 {atomNumbers {12}}
colvars:         group3 {atomNumbers {14}}
colvars:         group4 {atomNumbers {20}}
colvars:         scalable off
colvars: ".
colvars:   Done initializing a "dihedral" component, named "phi_1".
colvars:   Parsed 1 components at this time.
colvars:   Looking for the keyword "dihedral" and its value.
colvars:   Keyword "dihedral" not found.
colvars:   Looking for the keyword "dihedralPC" and its value.
colvars:   Keyword "dihedralPC" not found.
colvars:   Looking for the keyword "dipoleAngle" and its value.
colvars:   Keyword "dipoleAngle" not found.
colvars:   Looking for the keyword "dipoleMagnitude" and its value.
colvars:   Keyword "dipoleMagnitude" not found.
colvars:   Looking for the keyword "distance" and its value.
colvars:   Keyword "distance" not found.
colvars:   Looking for the keyword "distanceDir" and its value.
colvars:   Keyword "distanceDir" not found.
colvars:   Looking for the keyword "distanceInv" and its value.
colvars:   Keyword "distanceInv" not found.
colvars:   Looking for the keyword "distancePairs" and its value.
colvars:   Keyword "distancePairs" not found.
colvars:   Looking for the keyword "distanceVec" and its value.
colvars:   Keyword "distanceVec" not found.
colvars:   Looking for the keyword "distanceXY" and its value.
colvars:   Keyword "distanceXY" not found.
colvars:   Looking for the keyword "distanceZ" and its value.
colvars:   Keyword "distanceZ" not found.
colvars:   Looking for the keyword "eigenvector" and its value.
colvars:   Keyword "eigenvector" not found.
colvars:   Looking for the keyword "eulerPhi" and its value.
colvars:   Keyword "eulerPhi" not found.
colvars:   Looking for the keyword "eulerPsi" and its value.
colvars:   Keyword "eulerPsi" not found.
colvars:   Looking for the keyword "eulerTheta" and its value.
colvars:   Keyword "eulerTheta" not found.
colvars:   Looking for the keyword "groupCoord" and its value.
colvars:   Keyword "groupCoord" not found.
colvars:   Looking for the keyword "gspath" and its value.
colvars:   Keyword "gspath" not found.
colvars:   Looking for the keyword "gspathCV" and its value.
colvars:   Keyword "gspathCV" not found.
colvars:   Looking for the keyword "gyration" and its value.
colvars:   Keyword "gyration" not found.
colvars:   Looking for the keyword "gzpath" and its value.
colvars:   Keyword "gzpath" not found.
colvars:   Looking for the keyword "gzpathCV" and its value.
colvars:   Keyword "gzpathCV" not found.
colvars:   Looking for the keyword "hBond" and its value.
colvars:   Keyword "hBond" not found.
colvars:   Looking for the keyword "inertia" and its value.
colvars:   Keyword "inertia" not found.
colvars:   Looking for the keyword "inertiaZ" and its value.
colvars:   Keyword "inertiaZ" not found.
colvars:   Looking for the keyword "linearCombination" and its value.
colvars:   Keyword "linearCombination" not found.
colvars:   Looking for the keyword "mapTotal" and its value.
colvars:   Keyword "mapTotal" not found.
colvars:   Looking for the keyword "neuralNetwork" and its value.
colvars:   Keyword "neuralNetwork" not found.
colvars:   Looking for the keyword "orientation" and its value.
colvars:   Keyword "orientation" not found.
colvars:   Looking for the keyword "orientationAngle" and its value.
colvars:   Keyword "orientationAngle" not found.
colvars:   Looking for the keyword "orientationProj" and its value.
colvars:   Keyword "orientationProj" not found.
colvars:   Looking for the keyword "polarPhi" and its value.
colvars:   Keyword "polarPhi" not found.
colvars:   Looking for the keyword "polarTheta" and its value.
colvars:   Keyword "polarTheta" not found.
colvars:   Looking for the keyword "rmsd" and its value.
colvars:   Keyword "rmsd" not found.
colvars:   Looking for the keyword "selfCoordNum" and its value.
colvars:   Keyword "selfCoordNum" not found.
colvars:   Looking for the keyword "spinAngle" and its value.
colvars:   Keyword "spinAngle" not found.
colvars:   Looking for the keyword "tilt" and its value.
colvars:   Keyword "tilt" not found.
colvars:   All components initialized.
colvars:   Looking for the keyword "customFunction" and its value.
colvars:   Keyword "customFunction" not found.
colvars:   Looking for the keyword "scriptedFunction" and its value.
colvars:   Keyword "scriptedFunction" not found.
colvars:   This collective variable is a scalar number.
colvars:   DEPS: colvar re1 enabling "scalar"
colvars:   DEPS: feature "scalar" in colvar re1 enabled, ref_count = 1.
colvars:   DEPS: colvar re1 enabling "linear"
colvars:   DEPS: feature "linear" in colvar re1 enabled, ref_count = 1.
colvars:   DEPS: colvar re1 enabling "homogeneous"
colvars:   DEPS: feature "homogeneous" in colvar re1 enabled, ref_count = 1.
colvars:   DEPS: colvar re1 enabling "single_component"
colvars:   DEPS: feature "single_component" in colvar re1 enabled, ref_count = 1.
colvars:   DEPS: colvar re1 enabling "periodic"
colvars:   periodic requires self scalar
colvars:   DEPS: colvar re1 enabling "scalar"
colvars:   DEPS: bumping ref_count to 1
colvars:   DEPS: feature "periodic" in colvar re1 enabled, ref_count = 1.
colvars:   Looking for the keyword "timeStepFactor" and its value.
colvars:   Keyword "timeStepFactor" not found.
colvars:   # timeStepFactor = 1 [default]
colvars:   Looking for the keyword "width" and its value.
colvars:   Keyword "width" not found.
colvars:   # width = 1 [default]
colvars:   DEPS: colvar re1 enabling "lower_boundary"
colvars:   lower_boundary requires self scalar
colvars:   DEPS: colvar re1 enabling "scalar"
colvars:   DEPS: bumping ref_count to 2
colvars:   DEPS: feature "lower_boundary" in colvar re1 enabled, ref_count = 1.
colvars:   DEPS: colvar re1 enabling "hard_lower_boundary"
colvars:   hard_lower_boundary requires self lower_boundary
colvars:   DEPS: colvar re1 enabling "lower_boundary"
colvars:   DEPS: bumping ref_count to 1
colvars:   DEPS: feature "hard_lower_boundary" in colvar re1 enabled, ref_count = 1.
colvars:   DEPS: colvar re1 enabling "upper_boundary"
colvars:   upper_boundary requires self scalar
colvars:   DEPS: colvar re1 enabling "scalar"
colvars:   DEPS: bumping ref_count to 3
colvars:   DEPS: feature "upper_boundary" in colvar re1 enabled, ref_count = 1.
colvars:   DEPS: colvar re1 enabling "hard_upper_boundary"
colvars:   hard_upper_boundary requires self upper_boundary
colvars:   DEPS: colvar re1 enabling "upper_boundary"
colvars:   DEPS: bumping ref_count to 1
colvars:   DEPS: feature "hard_upper_boundary" in colvar re1 enabled, ref_count = 1.
colvars:   Looking for the keyword "lowerBoundary" and its value.
colvars:   Keyword "lowerBoundary" not found.
colvars:   # lowerBoundary = -180 [default]
colvars:   Looking for the keyword "upperBoundary" and its value.
colvars:   Keyword "upperBoundary" not found.
colvars:   # upperBoundary = 180 [default]
colvars:   Looking for the keyword "lowerWallConstant" and its value.
colvars:   Keyword "lowerWallConstant" not found.
colvars:   Looking for the keyword "upperWallConstant" and its value.
colvars:   Keyword "upperWallConstant" not found.
colvars:   Looking for the keyword "hardLowerBoundary" and its value.
colvars:   Keyword "hardLowerBoundary" not found.
colvars:   # hardLowerBoundary = on [default]
colvars:   DEPS: colvar re1 enabling "hard_lower_boundary"
colvars:   Looking for the keyword "hardUpperBoundary" and its value.
colvars:   Keyword "hardUpperBoundary" not found.
colvars:   # hardUpperBoundary = on [default]
colvars:   DEPS: colvar re1 enabling "hard_upper_boundary"
colvars:   Looking for the keyword "expandBoundaries" and its value.
colvars:   Keyword "expandBoundaries" not found.
colvars:   # expandBoundaries = off [default]
colvars:   Looking for the keyword "extendedLagrangian" and its value.
colvars:   Keyword "extendedLagrangian" not found.
colvars:   # extendedLagrangian = off [default]
colvars:   DEPS: disabling feature "extended_Lagrangian" in colvar re1
colvars:   Looking for the keyword "outputValue" and its value.
colvars:   Keyword "outputValue" not found.
colvars:   # outputValue = on [default]
colvars:   DEPS: colvar re1 enabling "output_value"
colvars:   DEPS: feature "output_value" in colvar re1 enabled, ref_count = 1.
colvars:   Looking for the keyword "outputVelocity" and its value.
colvars:   Keyword "outputVelocity" not found.
colvars:   # outputVelocity = off [default]
colvars:   Looking for the keyword "outputSystemForce" and its value.
colvars:   Keyword "outputSystemForce" not found.
colvars:   Looking for the keyword "outputTotalForce" and its value.
colvars:   Keyword "outputTotalForce" not found.
colvars:   # outputTotalForce = off [default]
colvars:   DEPS: disabling feature "output_total_force" in colvar re1
colvars:   Looking for the keyword "outputAppliedForce" and its value.
colvars:   Keyword "outputAppliedForce" not found.
colvars:   # outputAppliedForce = off [default]
colvars:   DEPS: disabling feature "output_applied_force" in colvar re1
colvars:   Looking for the keyword "subtractAppliedForce" and its value.
colvars:   Keyword "subtractAppliedForce" not found.
colvars:   # subtractAppliedForce = off [default]
colvars:   DEPS: disabling feature "subtract_applied_force_from_total_force" in colvar re1
colvars:   DEPS: colvar re1 enabling "active"
colvars:   active requires alt scalar
colvars:   DEPS: colvar re1 testing "scalar"
colvars:   DEPS: colvar re1 enabling "scalar"
colvars:   DEPS: bumping ref_count to 4
colvars:   DEPS: feature "active" in colvar re1 enabled, ref_count = 1.
colvars:   Looking for the keyword "runAve" and its value.
colvars:   Keyword "runAve" not found.
colvars:   # runAve = off [default]
colvars:   Looking for the keyword "corrFunc" and its value.
colvars:   Keyword "corrFunc" not found.
colvars:   # corrFunc = off [default]
colvars:   Done initializing collective variable "re1".
colvars:   Configuration string for "colvar": "
colvars: 
colvars:     name re1
colvars:     dihedral {
colvars:         name phi_1
colvars:         group1 {atomNumbers {10}}
colvars:         group2 {atomNumbers {12}}
colvars:         group3 {atomNumbers {14}}
colvars:         group4 {atomNumbers {20}}
colvars:         scalable off
colvars:     }
colvars: ".
colvars: Looking for the keyword "colvar" and its value.
colvars: Keyword value = "
colvars:     name re2
colvars:     customColvar {
colvars:         name 002
colvars:         customFunction sin(phi_2/180.0*3.1415926535897)
colvars:         dihedral {
colvars:             name phi_2
colvars:             group1 {atomNumbers {20}}
colvars:             group2 {atomNumbers {22}}
colvars:             group3 {atomNumbers {24}}
colvars:             group4 {atomNumbers {30}}
colvars:             scalable off
colvars:         }
colvars:     }
colvars: ".
colvars: ----------------------------------------------------------------------
colvars:   Initializing a new collective variable.
colvars:   Looking for the keyword "name" and its value.
colvars:   Keyword value = "re2".
colvars:   Looking for the keyword "name" and its value.
colvars:   Keyword "name" not found.
colvars:   # name = "re2"
colvars:   Looking for the keyword "alchFLambda" and its value.
colvars:   Keyword "alchFLambda" not found.
colvars:   Looking for the keyword "alchLambda" and its value.
colvars:   Keyword "alchLambda" not found.
colvars:   Looking for the keyword "alpha" and its value.
colvars:   Keyword "alpha" not found.
colvars:   Looking for the keyword "angle" and its value.
colvars:   Keyword "angle" not found.
colvars:   Looking for the keyword "aspath" and its value.
colvars:   Keyword "aspath" not found.
colvars:   Looking for the keyword "aspathCV" and its value.
colvars:   Keyword "aspathCV" not found.
colvars:   Looking for the keyword "azpath" and its value.
colvars:   Keyword "azpath" not found.
colvars:   Looking for the keyword "azpathCV" and its value.
colvars:   Keyword "azpathCV" not found.
colvars:   Looking for the keyword "cartesian" and its value.
colvars:   Keyword "cartesian" not found.
colvars:   Looking for the keyword "coordNum" and its value.
colvars:   Keyword "coordNum" not found.
colvars:   Looking for the keyword "customColvar" and its value.
colvars:   Keyword value = "
colvars:         name 002
colvars:         customFunction sin(phi_2/180.0*3.1415926535897)
colvars:         dihedral {
colvars:             name phi_2
colvars:             group1 {atomNumbers {20}}
colvars:             group2 {atomNumbers {22}}
colvars:             group3 {atomNumbers {24}}
colvars:             group4 {atomNumbers {30}}
colvars:             scalable off
colvars:         }
colvars: ".
colvars:   Initializing a new "customColvar" component, with configuration:
colvars: 
colvars:         name 002
colvars:         customFunction sin(phi_2/180.0*3.1415926535897)
colvars:         dihedral {
colvars:             name phi_2
colvars:             group1 {atomNumbers {20}}
colvars:             group2 {atomNumbers {22}}
colvars:             group3 {atomNumbers {24}}
colvars:             group4 {atomNumbers {30}}
colvars:             scalable off
colvars:         }
colvars:   DEPS: uninitialized colvar component enabling "active"
colvars:   DEPS: feature "active" in uninitialized colvar component enabled, ref_count = 1.
colvars:   DEPS: uninitialized colvar component enabling "explicit_gradient"
colvars:   explicit_gradient requires exclude scalable_calculation
colvars:   explicit_gradient requires exclude scalable_calculation_of_centers_of_mass
colvars:   DEPS: feature "explicit_gradient" in uninitialized colvar component enabled, ref_count = 1.
colvars:   DEPS: uninitialized colvar component enabling "use_minimum-image_with_PBCs"
colvars:   DEPS: feature "use_minimum-image_with_PBCs" in uninitialized colvar component enabled, ref_count = 1.
colvars:   Warning: cannot cite unknown feature "customColvar colvar component (derived from linearCombination)"
colvars:     Initializing cvc base object.
colvars:     Updating configuration for component "customColvar0001"
colvars:     Looking for the keyword "name" and its value.
colvars:     Keyword value = "002".
colvars:     Looking for the keyword "name" and its value.
colvars:     Keyword "name" not found.
colvars:     # name = "002"
colvars:     Looking for the keyword "componentCoeff" and its value.
colvars:     Keyword "componentCoeff" not found.
colvars:     # componentCoeff = 1 [default]
colvars:     Looking for the keyword "componentExp" and its value.
colvars:     Keyword "componentExp" not found.
colvars:     # componentExp = 1 [default]
colvars:     Looking for the keyword "period" and its value.
colvars:     Keyword "period" not found.
colvars:     # period = 0 [default]
colvars:     Looking for the keyword "wrapAround" and its value.
colvars:     Keyword "wrapAround" not found.
colvars:     # wrapAround = 0 [default]
colvars:     Looking for the keyword "debugGradients" and its value.
colvars:     Keyword "debugGradients" not found.
colvars:     DEPS: disabling feature "debug_gradient" in cvc "002" of type "customColvar"
colvars:     Looking for the keyword "forceNoPBC" and its value.
colvars:     Keyword "forceNoPBC" not found.
colvars:     # forceNoPBC = off [default]
colvars:     DEPS: cvc "002" of type "customColvar" enabling "use_minimum-image_with_PBCs"
colvars:     Looking for the keyword "scalable" and its value.
colvars:     Keyword "scalable" not found.
colvars:     # scalable = on [default]
colvars:     Done initializing cvc base object.
colvars:     Looking for the keyword "reuseComponents" and its value.
colvars:     Keyword "reuseComponents" not found.
colvars:     # reuseComponents =  [default]
colvars:     Looking for the keyword "alchFLambda" and its value.
colvars:     Keyword "alchFLambda" not found.
colvars:     Looking for the keyword "alchLambda" and its value.
colvars:     Keyword "alchLambda" not found.
colvars:     Looking for the keyword "alpha" and its value.
colvars:     Keyword "alpha" not found.
colvars:     Looking for the keyword "angle" and its value.
colvars:     Keyword "angle" not found.
colvars:     Looking for the keyword "aspath" and its value.
colvars:     Keyword "aspath" not found.
colvars:     Looking for the keyword "aspathCV" and its value.
colvars:     Keyword "aspathCV" not found.
colvars:     Looking for the keyword "azpath" and its value.
colvars:     Keyword "azpath" not found.
colvars:     Looking for the keyword "azpathCV" and its value.
colvars:     Keyword "azpathCV" not found.
colvars:     Looking for the keyword "cartesian" and its value.
colvars:     Keyword "cartesian" not found.
colvars:     Looking for the keyword "coordNum" and its value.
colvars:     Keyword "coordNum" not found.
colvars:     Looking for the keyword "customColvar" and its value.
colvars:     Keyword "customColvar" not found.
colvars:     Looking for the keyword "dihedral" and its value.
colvars:     Looking for the keyword "dihedral" and its value.
colvars:     Keyword value = "
colvars:             name phi_2
colvars:             group1 {atomNumbers {20}}
colvars:             group2 {atomNumbers {22}}
colvars:             group3 {atomNumbers {24}}
colvars:             group4 {atomNumbers {30}}
colvars:             scalable off
colvars: ".
colvars:     Looking for the keyword "dihedral" and its value.
colvars:     Keyword "dihedral" not found.
colvars:     DEPS: uninitialized colvar component enabling "active"
colvars:     DEPS: feature "active" in uninitialized colvar component enabled, ref_count = 1.
colvars:     DEPS: uninitialized colvar component enabling "explicit_gradient"
colvars:     explicit_gradient requires exclude scalable_calculation
colvars:     explicit_gradient requires exclude scalable_calculation_of_centers_of_mass
colvars:     DEPS: feature "explicit_gradient" in uninitialized colvar component enabled, ref_count = 1.
colvars:     DEPS: uninitialized colvar component enabling "use_minimum-image_with_PBCs"
colvars:     DEPS: feature "use_minimum-image_with_PBCs" in uninitialized colvar component enabled, ref_count = 1.
colvars:     DEPS: unnamed cvc of type "dihedral" enabling "periodic"
colvars:     DEPS: feature "periodic" in unnamed cvc of type "dihedral" enabled, ref_count = 1.
colvars:     DEPS: unnamed cvc of type "dihedral" enabling "defined_lower_boundary"
colvars:     DEPS: feature "defined_lower_boundary" in unnamed cvc of type "dihedral" enabled, ref_count = 1.
colvars:     DEPS: unnamed cvc of type "dihedral" enabling "defined_upper_boundary"
colvars:     DEPS: feature "defined_upper_boundary" in unnamed cvc of type "dihedral" enabled, ref_count = 1.
colvars:     DEPS: unnamed cvc of type "dihedral" enabling "function_of_centers_of_mass"
colvars:     DEPS: feature "function_of_centers_of_mass" in unnamed cvc of type "dihedral" enabled, ref_count = 1.
colvars:     Initializing cvc base object.
colvars:     Looking for the keyword "name" and its value.
colvars:     Keyword value = "phi_2".
colvars:     Looking for the keyword "name" and its value.
colvars:     Keyword "name" not found.
colvars:     # name = "phi_2"
colvars:     Looking for the keyword "componentCoeff" and its value.
colvars:     Keyword "componentCoeff" not found.
colvars:     # componentCoeff = 1 [default]
colvars:     Looking for the keyword "componentExp" and its value.
colvars:     Keyword "componentExp" not found.
colvars:     # componentExp = 1 [default]
colvars:     Looking for the keyword "period" and its value.
colvars:     Keyword "period" not found.
colvars:     # period = 360 [default]
colvars:     Looking for the keyword "wrapAround" and its value.
colvars:     Keyword "wrapAround" not found.
colvars:     # wrapAround = 0 [default]
colvars:     DEPS: cvc "phi_2" of type "dihedral" enabling "periodic"
colvars:     Looking for the keyword "debugGradients" and its value.
colvars:     Keyword "debugGradients" not found.
colvars:     DEPS: disabling feature "debug_gradient" in cvc "phi_2" of type "dihedral"
colvars:     Looking for the keyword "forceNoPBC" and its value.
colvars:     Keyword "forceNoPBC" not found.
colvars:     # forceNoPBC = off [default]
colvars:     DEPS: cvc "phi_2" of type "dihedral" enabling "use_minimum-image_with_PBCs"
colvars:     Looking for the keyword "scalable" and its value.
colvars:     Keyword value = "off".
colvars:     Looking for the keyword "scalable" and its value.
colvars:     Keyword "scalable" not found.
colvars:     # scalable = off
colvars:     Done initializing cvc base object.
colvars:     Looking for the keyword "group1" and its value.
colvars:     Keyword value = "atomNumbers {20}".
colvars:       Initializing atom group "group1".
colvars:       Looking for the keyword "name" and its value.
colvars:       Keyword "name" not found.
colvars:       # name = "" [default]
colvars:       Looking for the keyword "centerToOrigin" and its value.
colvars:       Keyword "centerToOrigin" not found.
colvars:       # centerToOrigin = off [default]
colvars:       DEPS: disabling feature "center_to_origin" in atom group group1
colvars:       Looking for the keyword "centerReference" and its value.
colvars:       Keyword "centerReference" not found.
colvars:       DEPS: disabling feature "center_to_reference" in atom group group1
colvars:       Looking for the keyword "centerToReference" and its value.
colvars:       Keyword "centerToReference" not found.
colvars:       # centerToReference = off [default]
colvars:       DEPS: disabling feature "center_to_reference" in atom group group1
colvars:       Looking for the keyword "rotateReference" and its value.
colvars:       Keyword "rotateReference" not found.
colvars:       DEPS: disabling feature "rotate_to_origin" in atom group group1
colvars:       Looking for the keyword "rotateToReference" and its value.
colvars:       Keyword "rotateToReference" not found.
colvars:       # rotateToReference = off [default]
colvars:       DEPS: disabling feature "rotate_to_origin" in atom group group1
colvars:       Looking for the keyword "atomsOfGroup" and its value.
colvars:       Keyword "atomsOfGroup" not found.
colvars:       # atomsOfGroup = "" [default]
colvars:       Looking for the keyword "atomNumbers" and its value.
colvars:       Keyword value = "20".
colvars:       Looking for the keyword "atomNumbers" and its value.
colvars:       Keyword "atomNumbers" not found.
colvars:       Looking for the keyword "indexGroup" and its value.
colvars:       Keyword "indexGroup" not found.
colvars:       # indexGroup = "" [default]
colvars:       Looking for the keyword "atomNumbersRange" and its value.
colvars:       Keyword "atomNumbersRange" not found.
colvars:       Looking for the keyword "psfSegID" and its value.
colvars:       Keyword "psfSegID" not found.
colvars:       # psfSegID =  [default]
colvars:       Looking for the keyword "atomNameResidueRange" and its value.
colvars:       Keyword "atomNameResidueRange" not found.
colvars:       Looking for the keyword "atomsFile" and its value.
colvars:       Keyword "atomsFile" not found.
colvars:       # atomsFile = "" [default]
colvars:       Looking for the keyword "dummyAtom" and its value.
colvars:       Keyword "dummyAtom" not found.
colvars:       # dummyAtom = ( 0 , 0 , 0 ) [default]
colvars:       Looking for the keyword "enableForces" and its value.
colvars:       Keyword "enableForces" not found.
colvars:       Looking for the keyword "enableFitGradients" and its value.
colvars:       Keyword "enableFitGradients" not found.
colvars:       # enableFitGradients = on [default]
colvars:       Looking for the keyword "printAtomIDs" and its value.
colvars:       Keyword "printAtomIDs" not found.
colvars:       # printAtomIDs = off [default]
colvars:       Done initializing atom group "group1".
colvars:       Atom group "group1" defined with 1 atoms requested: total mass = 12.011, total charge = 0.51.
colvars:         DEPS: re-enabling children's explicit_atom_gradient
colvars:         DEPS: atom group group1 enabling "explicit_atom_gradient"
colvars:         DEPS: feature "explicit_atom_gradient" in atom group group1 enabled, ref_count = 1.
colvars:       DEPS: cvc "phi_2" of type "dihedral" enabling "explicit_atom_groups"
colvars:       DEPS: feature "explicit_atom_groups" in cvc "phi_2" of type "dihedral" enabled, ref_count = 1.
colvars:       Configuration string for "group1": "
colvars: atomNumbers {20}".
colvars:     Looking for the keyword "group2" and its value.
colvars:     Keyword value = "atomNumbers {22}".
colvars:       Initializing atom group "group2".
colvars:       Looking for the keyword "name" and its value.
colvars:       Keyword "name" not found.
colvars:       # name = "" [default]
colvars:       Looking for the keyword "centerToOrigin" and its value.
colvars:       Keyword "centerToOrigin" not found.
colvars:       # centerToOrigin = off [default]
colvars:       DEPS: disabling feature "center_to_origin" in atom group group2
colvars:       Looking for the keyword "centerReference" and its value.
colvars:       Keyword "centerReference" not found.
colvars:       DEPS: disabling feature "center_to_reference" in atom group group2
colvars:       Looking for the keyword "centerToReference" and its value.
colvars:       Keyword "centerToReference" not found.
colvars:       # centerToReference = off [default]
colvars:       DEPS: disabling feature "center_to_reference" in atom group group2
colvars:       Looking for the keyword "rotateReference" and its value.
colvars:       Keyword "rotateReference" not found.
colvars:       DEPS: disabling feature "rotate_to_origin" in atom group group2
colvars:       Looking for the keyword "rotateToReference" and its value.
colvars:       Keyword "rotateToReference" not found.
colvars:       # rotateToReference = off [default]
colvars:       DEPS: disabling feature "rotate_to_origin" in atom group group2
colvars:       Looking for the keyword "atomsOfGroup" and its value.
colvars:       Keyword "atomsOfGroup" not found.
colvars:       # atomsOfGroup = "" [default]
colvars:       Looking for the keyword "atomNumbers" and its value.
colvars:       Keyword value = "22".
colvars:       Adding atom 22 for collective variables calculation.
colvars:       Looking for the keyword "atomNumbers" and its value.
colvars:       Keyword "atomNumbers" not found.
colvars:       Looking for the keyword "indexGroup" and its value.
colvars:       Keyword "indexGroup" not found.
colvars:       # indexGroup = "" [default]
colvars:       Looking for the keyword "atomNumbersRange" and its value.
colvars:       Keyword "atomNumbersRange" not found.
colvars:       Looking for the keyword "psfSegID" and its value.
colvars:       Keyword "psfSegID" not found.
colvars:       # psfSegID =  [default]
colvars:       Looking for the keyword "atomNameResidueRange" and its value.
colvars:       Keyword "atomNameResidueRange" not found.
colvars:       Looking for the keyword "atomsFile" and its value.
colvars:       Keyword "atomsFile" not found.
colvars:       # atomsFile = "" [default]
colvars:       Looking for the keyword "dummyAtom" and its value.
colvars:       Keyword "dummyAtom" not found.
colvars:       # dummyAtom = ( 0 , 0 , 0 ) [default]
colvars:       Looking for the keyword "enableForces" and its value.
colvars:       Keyword "enableForces" not found.
colvars:       Looking for the keyword "enableFitGradients" and its value.
colvars:       Keyword "enableFitGradients" not found.
colvars:       # enableFitGradients = on [default]
colvars:       Looking for the keyword "printAtomIDs" and its value.
colvars:       Keyword "printAtomIDs" not found.
colvars:       # printAtomIDs = off [default]
colvars:       Done initializing atom group "group2".
colvars:       Atom group "group2" defined with 1 atoms requested: total mass = 14.007, total charge = -0.47.
colvars:         DEPS: re-enabling children's explicit_atom_gradient
colvars:         DEPS: atom group group2 enabling "explicit_atom_gradient"
colvars:         DEPS: feature "explicit_atom_gradient" in atom group group2 enabled, ref_count = 1.
colvars:       DEPS: cvc "phi_2" of type "dihedral" enabling "explicit_atom_groups"
colvars:       Configuration string for "group2": "
colvars: atomNumbers {22}".
colvars:     Looking for the keyword "group3" and its value.
colvars:     Keyword value = "atomNumbers {24}".
colvars:       Initializing atom group "group3".
colvars:       Looking for the keyword "name" and its value.
colvars:       Keyword "name" not found.
colvars:       # name = "" [default]
colvars:       Looking for the keyword "centerToOrigin" and its value.
colvars:       Keyword "centerToOrigin" not found.
colvars:       # centerToOrigin = off [default]
colvars:       DEPS: disabling feature "center_to_origin" in atom group group3
colvars:       Looking for the keyword "centerReference" and its value.
colvars:       Keyword "centerReference" not found.
colvars:       DEPS: disabling feature "center_to_reference" in atom group group3
colvars:       Looking for the keyword "centerToReference" and its value.
colvars:       Keyword "centerToReference" not found.
colvars:       # centerToReference = off [default]
colvars:       DEPS: disabling feature "center_to_reference" in atom group group3
colvars:       Looking for the keyword "rotateReference" and its value.
colvars:       Keyword "rotateReference" not found.
colvars:       DEPS: disabling feature "rotate_to_origin" in atom group group3
colvars:       Looking for the keyword "rotateToReference" and its value.
colvars:       Keyword "rotateToReference" not found.
colvars:       # rotateToReference = off [default]
colvars:       DEPS: disabling feature "rotate_to_origin" in atom group group3
colvars:       Looking for the keyword "atomsOfGroup" and its value.
colvars:       Keyword "atomsOfGroup" not found.
colvars:       # atomsOfGroup = "" [default]
colvars:       Looking for the keyword "atomNumbers" and its value.
colvars:       Keyword value = "24".
colvars:       Adding atom 24 for collective variables calculation.
colvars:       Looking for the keyword "atomNumbers" and its value.
colvars:       Keyword "atomNumbers" not found.
colvars:       Looking for the keyword "indexGroup" and its value.
colvars:       Keyword "indexGroup" not found.
colvars:       # indexGroup = "" [default]
colvars:       Looking for the keyword "atomNumbersRange" and its value.
colvars:       Keyword "atomNumbersRange" not found.
colvars:       Looking for the keyword "psfSegID" and its value.
colvars:       Keyword "psfSegID" not found.
colvars:       # psfSegID =  [default]
colvars:       Looking for the keyword "atomNameResidueRange" and its value.
colvars:       Keyword "atomNameResidueRange" not found.
colvars:       Looking for the keyword "atomsFile" and its value.
colvars:       Keyword "atomsFile" not found.
colvars:       # atomsFile = "" [default]
colvars:       Looking for the keyword "dummyAtom" and its value.
colvars:       Keyword "dummyAtom" not found.
colvars:       # dummyAtom = ( 0 , 0 , 0 ) [default]
colvars:       Looking for the keyword "enableForces" and its value.
colvars:       Keyword "enableForces" not found.
colvars:       Looking for the keyword "enableFitGradients" and its value.
colvars:       Keyword "enableFitGradients" not found.
colvars:       # enableFitGradients = on [default]
colvars:       Looking for the keyword "printAtomIDs" and its value.
colvars:       Keyword "printAtomIDs" not found.
colvars:       # printAtomIDs = off [default]
colvars:       Done initializing atom group "group3".
colvars:       Atom group "group3" defined with 1 atoms requested: total mass = 12.011, total charge = 0.07.
colvars:         DEPS: re-enabling children's explicit_atom_gradient
colvars:         DEPS: atom group group3 enabling "explicit_atom_gradient"
colvars:         DEPS: feature "explicit_atom_gradient" in atom group group3 enabled, ref_count = 1.
colvars:       DEPS: cvc "phi_2" of type "dihedral" enabling "explicit_atom_groups"
colvars:       Configuration string for "group3": "
colvars: atomNumbers {24}".
colvars:     Looking for the keyword "group4" and its value.
colvars:     Keyword value = "atomNumbers {30}".
colvars:       Initializing atom group "group4".
colvars:       Looking for the keyword "name" and its value.
colvars:       Keyword "name" not found.
colvars:       # name = "" [default]
colvars:       Looking for the keyword "centerToOrigin" and its value.
colvars:       Keyword "centerToOrigin" not found.
colvars:       # centerToOrigin = off [default]
colvars:       DEPS: disabling feature "center_to_origin" in atom group group4
colvars:       Looking for the keyword "centerReference" and its value.
colvars:       Keyword "centerReference" not found.
colvars:       DEPS: disabling feature "center_to_reference" in atom group group4
colvars:       Looking for the keyword "centerToReference" and its value.
colvars:       Keyword "centerToReference" not found.
colvars:       # centerToReference = off [default]
colvars:       DEPS: disabling feature "center_to_reference" in atom group group4
colvars:       Looking for the keyword "rotateReference" and its value.
colvars:       Keyword "rotateReference" not found.
colvars:       DEPS: disabling feature "rotate_to_origin" in atom group group4
colvars:       Looking for the keyword "rotateToReference" and its value.
colvars:       Keyword "rotateToReference" not found.
colvars:       # rotateToReference = off [default]
colvars:       DEPS: disabling feature "rotate_to_origin" in atom group group4
colvars:       Looking for the keyword "atomsOfGroup" and its value.
colvars:       Keyword "atomsOfGroup" not found.
colvars:       # atomsOfGroup = "" [default]
colvars:       Looking for the keyword "atomNumbers" and its value.
colvars:       Keyword value = "30".
colvars:       Adding atom 30 for collective variables calculation.
colvars:       Looking for the keyword "atomNumbers" and its value.
colvars:       Keyword "atomNumbers" not found.
colvars:       Looking for the keyword "indexGroup" and its value.
colvars:       Keyword "indexGroup" not found.
colvars:       # indexGroup = "" [default]
colvars:       Looking for the keyword "atomNumbersRange" and its value.
colvars:       Keyword "atomNumbersRange" not found.
colvars:       Looking for the keyword "psfSegID" and its value.
colvars:       Keyword "psfSegID" not found.
colvars:       # psfSegID =  [default]
colvars:       Looking for the keyword "atomNameResidueRange" and its value.
colvars:       Keyword "atomNameResidueRange" not found.
colvars:       Looking for the keyword "atomsFile" and its value.
colvars:       Keyword "atomsFile" not found.
colvars:       # atomsFile = "" [default]
colvars:       Looking for the keyword "dummyAtom" and its value.
colvars:       Keyword "dummyAtom" not found.
colvars:       # dummyAtom = ( 0 , 0 , 0 ) [default]
colvars:       Looking for the keyword "enableForces" and its value.
colvars:       Keyword "enableForces" not found.
colvars:       Looking for the keyword "enableFitGradients" and its value.
colvars:       Keyword "enableFitGradients" not found.
colvars:       # enableFitGradients = on [default]
colvars:       Looking for the keyword "printAtomIDs" and its value.
colvars:       Keyword "printAtomIDs" not found.
colvars:       # printAtomIDs = off [default]
colvars:       Done initializing atom group "group4".
colvars:       Atom group "group4" defined with 1 atoms requested: total mass = 12.011, total charge = 0.51.
colvars:         DEPS: re-enabling children's explicit_atom_gradient
colvars:         DEPS: atom group group4 enabling "explicit_atom_gradient"
colvars:         DEPS: feature "explicit_atom_gradient" in atom group group4 enabled, ref_count = 1.
colvars:       DEPS: cvc "phi_2" of type "dihedral" enabling "explicit_atom_groups"
colvars:       Configuration string for "group4": "
colvars: atomNumbers {30}".
colvars:     Looking for the keyword "oneSiteSystemForce" and its value.
colvars:     Keyword "oneSiteSystemForce" not found.
colvars:     # oneSiteSystemForce = off [default]
colvars:     DEPS: disabling feature "total_force_from_one_group" in cvc "phi_2" of type "dihedral"
colvars:     Looking for the keyword "oneSiteTotalForce" and its value.
colvars:     Keyword "oneSiteTotalForce" not found.
colvars:     # oneSiteTotalForce = off [default]
colvars:     DEPS: disabling feature "total_force_from_one_group" in cvc "phi_2" of type "dihedral"
colvars:     DEPS: cvc "phi_2" of type "dihedral" enabling "gradient"
colvars:     DEPS: feature "gradient" in cvc "phi_2" of type "dihedral" enabled, ref_count = 1.
colvars:     DEPS: cvc "phi_2" of type "dihedral" enabling "active"
colvars:     Looking for the keyword "dihedralPC" and its value.
colvars:     Keyword "dihedralPC" not found.
colvars:     Looking for the keyword "dipoleAngle" and its value.
colvars:     Keyword "dipoleAngle" not found.
colvars:     Looking for the keyword "dipoleMagnitude" and its value.
colvars:     Keyword "dipoleMagnitude" not found.
colvars:     Looking for the keyword "distance" and its value.
colvars:     Keyword "distance" not found.
colvars:     Looking for the keyword "distanceDir" and its value.
colvars:     Keyword "distanceDir" not found.
colvars:     Looking for the keyword "distanceInv" and its value.
colvars:     Keyword "distanceInv" not found.
colvars:     Looking for the keyword "distancePairs" and its value.
colvars:     Keyword "distancePairs" not found.
colvars:     Looking for the keyword "distanceVec" and its value.
colvars:     Keyword "distanceVec" not found.
colvars:     Looking for the keyword "distanceXY" and its value.
colvars:     Keyword "distanceXY" not found.
colvars:     Looking for the keyword "distanceZ" and its value.
colvars:     Keyword "distanceZ" not found.
colvars:     Looking for the keyword "eigenvector" and its value.
colvars:     Keyword "eigenvector" not found.
colvars:     Looking for the keyword "eulerPhi" and its value.
colvars:     Keyword "eulerPhi" not found.
colvars:     Looking for the keyword "eulerPsi" and its value.
colvars:     Keyword "eulerPsi" not found.
colvars:     Looking for the keyword "eulerTheta" and its value.
colvars:     Keyword "eulerTheta" not found.
colvars:     Looking for the keyword "groupCoord" and its value.
colvars:     Keyword "groupCoord" not found.
colvars:     Looking for the keyword "gspath" and its value.
colvars:     Keyword "gspath" not found.
colvars:     Looking for the keyword "gspathCV" and its value.
colvars:     Keyword "gspathCV" not found.
colvars:     Looking for the keyword "gyration" and its value.
colvars:     Keyword "gyration" not found.
colvars:     Looking for the keyword "gzpath" and its value.
colvars:     Keyword "gzpath" not found.
colvars:     Looking for the keyword "gzpathCV" and its value.
colvars:     Keyword "gzpathCV" not found.
colvars:     Looking for the keyword "hBond" and its value.
colvars:     Keyword "hBond" not found.
colvars:     Looking for the keyword "inertia" and its value.
colvars:     Keyword "inertia" not found.
colvars:     Looking for the keyword "inertiaZ" and its value.
colvars:     Keyword "inertiaZ" not found.
colvars:     Looking for the keyword "linearCombination" and its value.
colvars:     Keyword "linearCombination" not found.
colvars:     Looking for the keyword "mapTotal" and its value.
colvars:     Keyword "mapTotal" not found.
colvars:     Looking for the keyword "neuralNetwork" and its value.
colvars:     Keyword "neuralNetwork" not found.
colvars:     Looking for the keyword "orientation" and its value.
colvars:     Keyword "orientation" not found.
colvars:     Looking for the keyword "orientationAngle" and its value.
colvars:     Keyword "orientationAngle" not found.
colvars:     Looking for the keyword "orientationProj" and its value.
colvars:     Keyword "orientationProj" not found.
colvars:     Looking for the keyword "polarPhi" and its value.
colvars:     Keyword "polarPhi" not found.
colvars:     Looking for the keyword "polarTheta" and its value.
colvars:     Keyword "polarTheta" not found.
colvars:     Looking for the keyword "rmsd" and its value.
colvars:     Keyword "rmsd" not found.
colvars:     Looking for the keyword "selfCoordNum" and its value.
colvars:     Keyword "selfCoordNum" not found.
colvars:     Looking for the keyword "spinAngle" and its value.
colvars:     Keyword "spinAngle" not found.
colvars:     Looking for the keyword "tilt" and its value.
colvars:     Keyword "tilt" not found.
colvars:     Enable explicit gradient in 002
colvars:     Looking for the keyword "customFunction" and its value.
colvars:     Keyword value = "sin(phi_2/180.0*3.1415926535897)".
colvars:     This colvar uses a custom function.
colvars:     Parsing expression "sin(phi_2/180.0*3.1415926535897)".
colvars:     Looking for the keyword "customFunction" and its value.
colvars:     Keyword "customFunction" not found.
colvars:     Configuration string for "customColvar": "
colvars: 
colvars:         name 002
colvars:         customFunction sin(phi_2/180.0*3.1415926535897)
colvars:         dihedral {
colvars:             name phi_2
colvars:             group1 {atomNumbers {20}}
colvars:             group2 {atomNumbers {22}}
colvars:             group3 {atomNumbers {24}}
colvars:             group4 {atomNumbers {30}}
colvars:             scalable off
colvars:         }
colvars: ".
colvars:   Done initializing a "customColvar" component, named "002".
colvars:   Parsed 1 components at this time.
colvars:   Looking for the keyword "customColvar" and its value.
colvars:   Keyword "customColvar" not found.
colvars:   Looking for the keyword "dihedral" and its value.
colvars:   Keyword "dihedral" not found.
colvars:   Looking for the keyword "dihedralPC" and its value.
colvars:   Keyword "dihedralPC" not found.
colvars:   Looking for the keyword "dipoleAngle" and its value.
colvars:   Keyword "dipoleAngle" not found.
colvars:   Looking for the keyword "dipoleMagnitude" and its value.
colvars:   Keyword "dipoleMagnitude" not found.
colvars:   Looking for the keyword "distance" and its value.
colvars:   Keyword "distance" not found.
colvars:   Looking for the keyword "distanceDir" and its value.
colvars:   Keyword "distanceDir" not found.
colvars:   Looking for the keyword "distanceInv" and its value.
colvars:   Keyword "distanceInv" not found.
colvars:   Looking for the keyword "distancePairs" and its value.
colvars:   Keyword "distancePairs" not found.
colvars:   Looking for the keyword "distanceVec" and its value.
colvars:   Keyword "distanceVec" not found.
colvars:   Looking for the keyword "distanceXY" and its value.
colvars:   Keyword "distanceXY" not found.
colvars:   Looking for the keyword "distanceZ" and its value.
colvars:   Keyword "distanceZ" not found.
colvars:   Looking for the keyword "eigenvector" and its value.
colvars:   Keyword "eigenvector" not found.
colvars:   Looking for the keyword "eulerPhi" and its value.
colvars:   Keyword "eulerPhi" not found.
colvars:   Looking for the keyword "eulerPsi" and its value.
colvars:   Keyword "eulerPsi" not found.
colvars:   Looking for the keyword "eulerTheta" and its value.
colvars:   Keyword "eulerTheta" not found.
colvars:   Looking for the keyword "groupCoord" and its value.
colvars:   Keyword "groupCoord" not found.
colvars:   Looking for the keyword "gspath" and its value.
colvars:   Keyword "gspath" not found.
colvars:   Looking for the keyword "gspathCV" and its value.
colvars:   Keyword "gspathCV" not found.
colvars:   Looking for the keyword "gyration" and its value.
colvars:   Keyword "gyration" not found.
colvars:   Looking for the keyword "gzpath" and its value.
colvars:   Keyword "gzpath" not found.
colvars:   Looking for the keyword "gzpathCV" and its value.
colvars:   Keyword "gzpathCV" not found.
colvars:   Looking for the keyword "hBond" and its value.
colvars:   Keyword "hBond" not found.
colvars:   Looking for the keyword "inertia" and its value.
colvars:   Keyword "inertia" not found.
colvars:   Looking for the keyword "inertiaZ" and its value.
colvars:   Keyword "inertiaZ" not found.
colvars:   Looking for the keyword "linearCombination" and its value.
colvars:   Keyword "linearCombination" not found.
colvars:   Looking for the keyword "mapTotal" and its value.
colvars:   Keyword "mapTotal" not found.
colvars:   Looking for the keyword "neuralNetwork" and its value.
colvars:   Keyword "neuralNetwork" not found.
colvars:   Looking for the keyword "orientation" and its value.
colvars:   Keyword "orientation" not found.
colvars:   Looking for the keyword "orientationAngle" and its value.
colvars:   Keyword "orientationAngle" not found.
colvars:   Looking for the keyword "orientationProj" and its value.
colvars:   Keyword "orientationProj" not found.
colvars:   Looking for the keyword "polarPhi" and its value.
colvars:   Keyword "polarPhi" not found.
colvars:   Looking for the keyword "polarTheta" and its value.
colvars:   Keyword "polarTheta" not found.
colvars:   Looking for the keyword "rmsd" and its value.
colvars:   Keyword "rmsd" not found.
colvars:   Looking for the keyword "selfCoordNum" and its value.
colvars:   Keyword "selfCoordNum" not found.
colvars:   Looking for the keyword "spinAngle" and its value.
colvars:   Keyword "spinAngle" not found.
colvars:   Looking for the keyword "tilt" and its value.
colvars:   Keyword "tilt" not found.
colvars:   All components initialized.
colvars:   Looking for the keyword "customFunction" and its value.
colvars:   Keyword "customFunction" not found.
colvars:   Looking for the keyword "scriptedFunction" and its value.
colvars:   Keyword "scriptedFunction" not found.
colvars:   This collective variable is a scalar number.
colvars:   DEPS: colvar re2 enabling "scalar"
colvars:   DEPS: feature "scalar" in colvar re2 enabled, ref_count = 1.
colvars:   DEPS: colvar re2 enabling "linear"
colvars:   DEPS: feature "linear" in colvar re2 enabled, ref_count = 1.
colvars:   DEPS: colvar re2 enabling "homogeneous"
colvars:   DEPS: feature "homogeneous" in colvar re2 enabled, ref_count = 1.
colvars:   DEPS: colvar re2 enabling "single_component"
colvars:   DEPS: feature "single_component" in colvar re2 enabled, ref_count = 1.
colvars:   Looking for the keyword "timeStepFactor" and its value.
colvars:   Keyword "timeStepFactor" not found.
colvars:   # timeStepFactor = 1 [default]
colvars:   Looking for the keyword "width" and its value.
colvars:   Keyword "width" not found.
colvars:   # width = 1 [default]
colvars:   Looking for the keyword "lowerBoundary" and its value.
colvars:   Keyword "lowerBoundary" not found.
colvars:   # lowerBoundary = 0 [default]
colvars:   Looking for the keyword "upperBoundary" and its value.
colvars:   Keyword "upperBoundary" not found.
colvars:   # upperBoundary = 1 [default]
colvars:   Looking for the keyword "lowerWallConstant" and its value.
colvars:   Keyword "lowerWallConstant" not found.
colvars:   Looking for the keyword "upperWallConstant" and its value.
colvars:   Keyword "upperWallConstant" not found.
colvars:   Looking for the keyword "hardLowerBoundary" and its value.
colvars:   Keyword "hardLowerBoundary" not found.
colvars:   # hardLowerBoundary = off [default]
colvars:   DEPS: disabling feature "hard_lower_boundary" in colvar re2
colvars:   Looking for the keyword "hardUpperBoundary" and its value.
colvars:   Keyword "hardUpperBoundary" not found.
colvars:   # hardUpperBoundary = off [default]
colvars:   DEPS: disabling feature "hard_upper_boundary" in colvar re2
colvars:   Looking for the keyword "expandBoundaries" and its value.
colvars:   Keyword "expandBoundaries" not found.
colvars:   # expandBoundaries = off [default]
colvars:   Looking for the keyword "extendedLagrangian" and its value.
colvars:   Keyword "extendedLagrangian" not found.
colvars:   # extendedLagrangian = off [default]
colvars:   DEPS: disabling feature "extended_Lagrangian" in colvar re2
colvars:   Looking for the keyword "outputValue" and its value.
colvars:   Keyword "outputValue" not found.
colvars:   # outputValue = on [default]
colvars:   DEPS: colvar re2 enabling "output_value"
colvars:   DEPS: feature "output_value" in colvar re2 enabled, ref_count = 1.
colvars:   Looking for the keyword "outputVelocity" and its value.
colvars:   Keyword "outputVelocity" not found.
colvars:   # outputVelocity = off [default]
colvars:   Looking for the keyword "outputSystemForce" and its value.
colvars:   Keyword "outputSystemForce" not found.
colvars:   Looking for the keyword "outputTotalForce" and its value.
colvars:   Keyword "outputTotalForce" not found.
colvars:   # outputTotalForce = off [default]
colvars:   DEPS: disabling feature "output_total_force" in colvar re2
colvars:   Looking for the keyword "outputAppliedForce" and its value.
colvars:   Keyword "outputAppliedForce" not found.
colvars:   # outputAppliedForce = off [default]
colvars:   DEPS: disabling feature "output_applied_force" in colvar re2
colvars:   Looking for the keyword "subtractAppliedForce" and its value.
colvars:   Keyword "subtractAppliedForce" not found.
colvars:   # subtractAppliedForce = off [default]
colvars:   DEPS: disabling feature "subtract_applied_force_from_total_force" in colvar re2
colvars:   DEPS: colvar re2 enabling "active"
colvars:   active requires alt scalar
colvars:   DEPS: colvar re2 testing "scalar"
colvars:   DEPS: colvar re2 enabling "scalar"
colvars:   DEPS: bumping ref_count to 1
colvars:   DEPS: feature "active" in colvar re2 enabled, ref_count = 1.
colvars:   Looking for the keyword "runAve" and its value.
colvars:   Keyword "runAve" not found.
colvars:   # runAve = off [default]
colvars:   Looking for the keyword "corrFunc" and its value.
colvars:   Keyword "corrFunc" not found.
colvars:   # corrFunc = off [default]
colvars:   Done initializing collective variable "re2".
colvars:   Configuration string for "colvar": "
colvars: 
colvars:     name re2
colvars:     customColvar {
colvars:         name 002
colvars:         customFunction sin(phi_2/180.0*3.1415926535897)
colvars:         dihedral {
colvars:             name phi_2
colvars:             group1 {atomNumbers {20}}
colvars:             group2 {atomNumbers {22}}
colvars:             group3 {atomNumbers {24}}
colvars:             group4 {atomNumbers {30}}
colvars:             scalable off
colvars:         }
colvars:     }
colvars: ".
colvars: Looking for the keyword "colvar" and its value.
colvars: Keyword value = "
colvars:     name                    nn_output_1
colvars:     width 0.01
colvars:     lowerboundary           -1
colvars:     upperboundary           1
colvars:     extendedlagrangian      on
colvars:     extendedFluctuation     0.01
colvars:     extendedTimeConstant    200
colvars:     subtractappliedforce    on
colvars:     NeuralNetwork {
colvars:         output_component        0
colvars:         layer1_WeightsFile      dense_weights.txt
colvars:         layer1_BiasesFile       dense_biases.txt
colvars:         layer1_activation       tanh
colvars:         layer2_WeightsFile      dense_1_weights.txt
colvars:         layer2_BiasesFile       dense_1_biases.txt
colvars:         layer2_activation       tanh
colvars:         reuseComponents re2/002
colvars:         customColvar {
colvars:             name 001
colvars:             customFunction sin(phi_1/180.0*3.1415926535897)
colvars:             reuseComponents re1/phi_1
colvars:         }
colvars:         customColvar {
colvars:             name 003
colvars:             customFunction sin(phi_3/180.0*3.1415926535897)
colvars:             dihedral {
colvars:                 name phi_3
colvars:                 group1 {atomNumbers {30}}
colvars:                 group2 {atomNumbers {32}}
colvars:                 group3 {atomNumbers {34}}
colvars:                 group4 {atomNumbers {40}}
colvars:                 scalable off
colvars:             }
colvars:         }
colvars:         customColvar {
colvars:             name 004
colvars:             customFunction sin(psi_1/180.0*3.1415926535897)
colvars:             dihedral {
colvars:                 name psi_1
colvars:                 group1 {atomNumbers {12}}
colvars:                 group2 {atomNumbers {14}}
colvars:                 group3 {atomNumbers {20}}
colvars:                 group4 {atomNumbers {22}}
colvars:                 scalable off
colvars:             }
colvars:         }
colvars:         customColvar {
colvars:             name 005
colvars:             customFunction sin(psi_2/180.0*3.1415926535897)
colvars:             dihedral {
colvars:                 name psi_2
colvars:                 group1 {atomNumbers {22}}
colvars:                 group2 {atomNumbers {24}}
colvars:                 group3 {atomNumbers {30}}
colvars:                 group4 {atomNumbers {32}}
colvars:                 scalable off
colvars:             }
colvars:         }
colvars:         customColvar {
colvars:             name 006
colvars:             customFunction sin(psi_3/180.0*3.1415926535897)
colvars:             dihedral {
colvars:                 name psi_3
colvars:                 group1 {atomNumbers {32}}
colvars:                 group2 {atomNumbers {34}}
colvars:                 group3 {atomNumbers {40}}
colvars:                 group4 {atomNumbers {42}}
colvars:                 scalable off
colvars:             }
colvars:         }
colvars:     }
colvars: ".
colvars: ----------------------------------------------------------------------
colvars:   Initializing a new collective variable.
colvars:   Looking for the keyword "name" and its value.
colvars:   Keyword value = "nn_output_1".
colvars:   Looking for the keyword "name" and its value.
colvars:   Keyword "name" not found.
colvars:   # name = "nn_output_1"
colvars:   Looking for the keyword "alchFLambda" and its value.
colvars:   Keyword "alchFLambda" not found.
colvars:   Looking for the keyword "alchLambda" and its value.
colvars:   Keyword "alchLambda" not found.
colvars:   Looking for the keyword "alpha" and its value.
colvars:   Keyword "alpha" not found.
colvars:   Looking for the keyword "angle" and its value.
colvars:   Keyword "angle" not found.
colvars:   Looking for the keyword "aspath" and its value.
colvars:   Keyword "aspath" not found.
colvars:   Looking for the keyword "aspathCV" and its value.
colvars:   Keyword "aspathCV" not found.
colvars:   Looking for the keyword "azpath" and its value.
colvars:   Keyword "azpath" not found.
colvars:   Looking for the keyword "azpathCV" and its value.
colvars:   Keyword "azpathCV" not found.
colvars:   Looking for the keyword "cartesian" and its value.
colvars:   Keyword "cartesian" not found.
colvars:   Looking for the keyword "coordNum" and its value.
colvars:   Keyword "coordNum" not found.
colvars:   Looking for the keyword "customColvar" and its value.
colvars:   Keyword "customColvar" not found.
colvars:   Looking for the keyword "dihedral" and its value.
colvars:   Keyword "dihedral" not found.
colvars:   Looking for the keyword "dihedralPC" and its value.
colvars:   Keyword "dihedralPC" not found.
colvars:   Looking for the keyword "dipoleAngle" and its value.
colvars:   Keyword "dipoleAngle" not found.
colvars:   Looking for the keyword "dipoleMagnitude" and its value.
colvars:   Keyword "dipoleMagnitude" not found.
colvars:   Looking for the keyword "distance" and its value.
colvars:   Keyword "distance" not found.
colvars:   Looking for the keyword "distanceDir" and its value.
colvars:   Keyword "distanceDir" not found.
colvars:   Looking for the keyword "distanceInv" and its value.
colvars:   Keyword "distanceInv" not found.
colvars:   Looking for the keyword "distancePairs" and its value.
colvars:   Keyword "distancePairs" not found.
colvars:   Looking for the keyword "distanceVec" and its value.
colvars:   Keyword "distanceVec" not found.
colvars:   Looking for the keyword "distanceXY" and its value.
colvars:   Keyword "distanceXY" not found.
colvars:   Looking for the keyword "distanceZ" and its value.
colvars:   Keyword "distanceZ" not found.
colvars:   Looking for the keyword "eigenvector" and its value.
colvars:   Keyword "eigenvector" not found.
colvars:   Looking for the keyword "eulerPhi" and its value.
colvars:   Keyword "eulerPhi" not found.
colvars:   Looking for the keyword "eulerPsi" and its value.
colvars:   Keyword "eulerPsi" not found.
colvars:   Looking for the keyword "eulerTheta" and its value.
colvars:   Keyword "eulerTheta" not found.
colvars:   Looking for the keyword "groupCoord" and its value.
colvars:   Keyword "groupCoord" not found.
colvars:   Looking for the keyword "gspath" and its value.
colvars:   Keyword "gspath" not found.
colvars:   Looking for the keyword "gspathCV" and its value.
colvars:   Keyword "gspathCV" not found.
colvars:   Looking for the keyword "gyration" and its value.
colvars:   Keyword "gyration" not found.
colvars:   Looking for the keyword "gzpath" and its value.
colvars:   Keyword "gzpath" not found.
colvars:   Looking for the keyword "gzpathCV" and its value.
colvars:   Keyword "gzpathCV" not found.
colvars:   Looking for the keyword "hBond" and its value.
colvars:   Keyword "hBond" not found.
colvars:   Looking for the keyword "inertia" and its value.
colvars:   Keyword "inertia" not found.
colvars:   Looking for the keyword "inertiaZ" and its value.
colvars:   Keyword "inertiaZ" not found.
colvars:   Looking for the keyword "linearCombination" and its value.
colvars:   Keyword "linearCombination" not found.
colvars:   Looking for the keyword "mapTotal" and its value.
colvars:   Keyword "mapTotal" not found.
colvars:   Looking for the keyword "neuralNetwork" and its value.
colvars:   Keyword value = "
colvars:         output_component        0
colvars:         layer1_WeightsFile      dense_weights.txt
colvars:         layer1_BiasesFile       dense_biases.txt
colvars:         layer1_activation       tanh
colvars:         layer2_WeightsFile      dense_1_weights.txt
colvars:         layer2_BiasesFile       dense_1_biases.txt
colvars:         layer2_activation       tanh
colvars:         reuseComponents re2/002
colvars:         customColvar {
colvars:             name 001
colvars:             customFunction sin(phi_1/180.0*3.1415926535897)
colvars:             reuseComponents re1/phi_1
colvars:         }
colvars:         customColvar {
colvars:             name 003
colvars:             customFunction sin(phi_3/180.0*3.1415926535897)
colvars:             dihedral {
colvars:                 name phi_3
colvars:                 group1 {atomNumbers {30}}
colvars:                 group2 {atomNumbers {32}}
colvars:                 group3 {atomNumbers {34}}
colvars:                 group4 {atomNumbers {40}}
colvars:                 scalable off
colvars:             }
colvars:         }
colvars:         customColvar {
colvars:             name 004
colvars:             customFunction sin(psi_1/180.0*3.1415926535897)
colvars:             dihedral {
colvars:                 name psi_1
colvars:                 group1 {atomNumbers {12}}
colvars:                 group2 {atomNumbers {14}}
colvars:                 group3 {atomNumbers {20}}
colvars:                 group4 {atomNumbers {22}}
colvars:                 scalable off
colvars:             }
colvars:         }
colvars:         customColvar {
colvars:             name 005
colvars:             customFunction sin(psi_2/180.0*3.1415926535897)
colvars:             dihedral {
colvars:                 name psi_2
colvars:                 group1 {atomNumbers {22}}
colvars:                 group2 {atomNumbers {24}}
colvars:                 group3 {atomNumbers {30}}
colvars:                 group4 {atomNumbers {32}}
colvars:                 scalable off
colvars:             }
colvars:         }
colvars:         customColvar {
colvars:             name 006
colvars:             customFunction sin(psi_3/180.0*3.1415926535897)
colvars:             dihedral {
colvars:                 name psi_3
colvars:                 group1 {atomNumbers {32}}
colvars:                 group2 {atomNumbers {34}}
colvars:                 group3 {atomNumbers {40}}
colvars:                 group4 {atomNumbers {42}}
colvars:                 scalable off
colvars:             }
colvars:         }
colvars: ".
colvars:   Initializing a new "neuralNetwork" component, with configuration:
colvars: 
colvars:         output_component        0
colvars:         layer1_WeightsFile      dense_weights.txt
colvars:         layer1_BiasesFile       dense_biases.txt
colvars:         layer1_activation       tanh
colvars:         layer2_WeightsFile      dense_1_weights.txt
colvars:         layer2_BiasesFile       dense_1_biases.txt
colvars:         layer2_activation       tanh
colvars:         reuseComponents re2/002
colvars:         customColvar {
colvars:             name 001
colvars:             customFunction sin(phi_1/180.0*3.1415926535897)
colvars:             reuseComponents re1/phi_1
colvars:         }
colvars:         customColvar {
colvars:             name 003
colvars:             customFunction sin(phi_3/180.0*3.1415926535897)
colvars:             dihedral {
colvars:                 name phi_3
colvars:                 group1 {atomNumbers {30}}
colvars:                 group2 {atomNumbers {32}}
colvars:                 group3 {atomNumbers {34}}
colvars:                 group4 {atomNumbers {40}}
colvars:                 scalable off
colvars:             }
colvars:         }
colvars:         customColvar {
colvars:             name 004
colvars:             customFunction sin(psi_1/180.0*3.1415926535897)
colvars:             dihedral {
colvars:                 name psi_1
colvars:                 group1 {atomNumbers {12}}
colvars:                 group2 {atomNumbers {14}}
colvars:                 group3 {atomNumbers {20}}
colvars:                 group4 {atomNumbers {22}}
colvars:                 scalable off
colvars:             }
colvars:         }
colvars:         customColvar {
colvars:             name 005
colvars:             customFunction sin(psi_2/180.0*3.1415926535897)
colvars:             dihedral {
colvars:                 name psi_2
colvars:                 group1 {atomNumbers {22}}
colvars:                 group2 {atomNumbers {24}}
colvars:                 group3 {atomNumbers {30}}
colvars:                 group4 {atomNumbers {32}}
colvars:                 scalable off
colvars:             }
colvars:         }
colvars:         customColvar {
colvars:             name 006
colvars:             customFunction sin(psi_3/180.0*3.1415926535897)
colvars:             dihedral {
colvars:                 name psi_3
colvars:                 group1 {atomNumbers {32}}
colvars:                 group2 {atomNumbers {34}}
colvars:                 group3 {atomNumbers {40}}
colvars:                 group4 {atomNumbers {42}}
colvars:                 scalable off
colvars:             }
colvars:         }
colvars:   DEPS: uninitialized colvar component enabling "active"
colvars:   DEPS: feature "active" in uninitialized colvar component enabled, ref_count = 1.
colvars:   DEPS: uninitialized colvar component enabling "explicit_gradient"
colvars:   explicit_gradient requires exclude scalable_calculation
colvars:   explicit_gradient requires exclude scalable_calculation_of_centers_of_mass
colvars:   DEPS: feature "explicit_gradient" in uninitialized colvar component enabled, ref_count = 1.
colvars:   DEPS: uninitialized colvar component enabling "use_minimum-image_with_PBCs"
colvars:   DEPS: feature "use_minimum-image_with_PBCs" in uninitialized colvar component enabled, ref_count = 1.
colvars:   Warning: cannot cite unknown feature "neuralNetwork colvar component (derived from linearCombination)"
colvars:     Initializing cvc base object.
colvars:     Updating configuration for component "neuralNetwork0001"
colvars:     Looking for the keyword "name" and its value.
colvars:     Keyword "name" not found.
colvars:     # name = "neuralNetwork0001" [default]
colvars:     Looking for the keyword "componentCoeff" and its value.
colvars:     Keyword "componentCoeff" not found.
colvars:     # componentCoeff = 1 [default]
colvars:     Looking for the keyword "componentExp" and its value.
colvars:     Keyword "componentExp" not found.
colvars:     # componentExp = 1 [default]
colvars:     Looking for the keyword "period" and its value.
colvars:     Keyword "period" not found.
colvars:     # period = 0 [default]
colvars:     Looking for the keyword "wrapAround" and its value.
colvars:     Keyword "wrapAround" not found.
colvars:     # wrapAround = 0 [default]
colvars:     Looking for the keyword "debugGradients" and its value.
colvars:     Keyword "debugGradients" not found.
colvars:     DEPS: disabling feature "debug_gradient" in cvc "neuralNetwork0001" of type "neuralNetwork"
colvars:     Looking for the keyword "forceNoPBC" and its value.
colvars:     Keyword "forceNoPBC" not found.
colvars:     # forceNoPBC = off [default]
colvars:     DEPS: cvc "neuralNetwork0001" of type "neuralNetwork" enabling "use_minimum-image_with_PBCs"
colvars:     Looking for the keyword "scalable" and its value.
colvars:     Keyword "scalable" not found.
colvars:     # scalable = on [default]
colvars:     Done initializing cvc base object.
colvars:     Looking for the keyword "reuseComponents" and its value.
colvars:     Keyword value = "re2/002".
colvars:     Looking for the keyword "reuseComponents" and its value.
colvars:     Keyword "reuseComponents" not found.
colvars:     # reuseComponents = { re2/002 }
colvars:     DEPS: cvc "002" of type "customColvar" enabling "gradient"
colvars:     DEPS: feature "gradient" in cvc "002" of type "customColvar" enabled, ref_count = 1.
colvars:     DEPS: cvc "002" of type "customColvar" enabling "active"
colvars:     Looking for the keyword "alchFLambda" and its value.
colvars:     Keyword "alchFLambda" not found.
colvars:     Looking for the keyword "alchLambda" and its value.
colvars:     Keyword "alchLambda" not found.
colvars:     Looking for the keyword "alpha" and its value.
colvars:     Keyword "alpha" not found.
colvars:     Looking for the keyword "angle" and its value.
colvars:     Keyword "angle" not found.
colvars:     Looking for the keyword "aspath" and its value.
colvars:     Keyword "aspath" not found.
colvars:     Looking for the keyword "aspathCV" and its value.
colvars:     Keyword "aspathCV" not found.
colvars:     Looking for the keyword "azpath" and its value.
colvars:     Keyword "azpath" not found.
colvars:     Looking for the keyword "azpathCV" and its value.
colvars:     Keyword "azpathCV" not found.
colvars:     Looking for the keyword "cartesian" and its value.
colvars:     Keyword "cartesian" not found.
colvars:     Looking for the keyword "coordNum" and its value.
colvars:     Keyword "coordNum" not found.
colvars:     Looking for the keyword "customColvar" and its value.
colvars:     Looking for the keyword "customColvar" and its value.
colvars:     Keyword value = "
colvars:             name 001
colvars:             customFunction sin(phi_1/180.0*3.1415926535897)
colvars:             reuseComponents re1/phi_1
colvars: ".
colvars:     Looking for the keyword "customColvar" and its value.
colvars:     Keyword value = "
colvars:             name 003
colvars:             customFunction sin(phi_3/180.0*3.1415926535897)
colvars:             dihedral {
colvars:                 name phi_3
colvars:                 group1 {atomNumbers {30}}
colvars:                 group2 {atomNumbers {32}}
colvars:                 group3 {atomNumbers {34}}
colvars:                 group4 {atomNumbers {40}}
colvars:                 scalable off
colvars:             }
colvars: ".
colvars:     Looking for the keyword "customColvar" and its value.
colvars:     Keyword value = "
colvars:             name 004
colvars:             customFunction sin(psi_1/180.0*3.1415926535897)
colvars:             dihedral {
colvars:                 name psi_1
colvars:                 group1 {atomNumbers {12}}
colvars:                 group2 {atomNumbers {14}}
colvars:                 group3 {atomNumbers {20}}
colvars:                 group4 {atomNumbers {22}}
colvars:                 scalable off
colvars:             }
colvars: ".
colvars:     Looking for the keyword "customColvar" and its value.
colvars:     Keyword value = "
colvars:             name 005
colvars:             customFunction sin(psi_2/180.0*3.1415926535897)
colvars:             dihedral {
colvars:                 name psi_2
colvars:                 group1 {atomNumbers {22}}
colvars:                 group2 {atomNumbers {24}}
colvars:                 group3 {atomNumbers {30}}
colvars:                 group4 {atomNumbers {32}}
colvars:                 scalable off
colvars:             }
colvars: ".
colvars:     Looking for the keyword "customColvar" and its value.
colvars:     Keyword value = "
colvars:             name 006
colvars:             customFunction sin(psi_3/180.0*3.1415926535897)
colvars:             dihedral {
colvars:                 name psi_3
colvars:                 group1 {atomNumbers {32}}
colvars:                 group2 {atomNumbers {34}}
colvars:                 group3 {atomNumbers {40}}
colvars:                 group4 {atomNumbers {42}}
colvars:                 scalable off
colvars:             }
colvars: ".
colvars:     Looking for the keyword "customColvar" and its value.
colvars:     Keyword "customColvar" not found.
colvars:     DEPS: uninitialized colvar component enabling "active"
colvars:     DEPS: feature "active" in uninitialized colvar component enabled, ref_count = 1.
colvars:     DEPS: uninitialized colvar component enabling "explicit_gradient"
colvars:     explicit_gradient requires exclude scalable_calculation
colvars:     explicit_gradient requires exclude scalable_calculation_of_centers_of_mass
colvars:     DEPS: feature "explicit_gradient" in uninitialized colvar component enabled, ref_count = 1.
colvars:     DEPS: uninitialized colvar component enabling "use_minimum-image_with_PBCs"
colvars:     DEPS: feature "use_minimum-image_with_PBCs" in uninitialized colvar component enabled, ref_count = 1.
colvars:     Warning: cannot cite unknown feature "customColvar colvar component (derived from linearCombination)"
colvars:     Initializing cvc base object.
colvars:     Looking for the keyword "name" and its value.
colvars:     Keyword value = "001".
colvars:     Looking for the keyword "name" and its value.
colvars:     Keyword "name" not found.
colvars:     # name = "001"
colvars:     Looking for the keyword "componentCoeff" and its value.
colvars:     Keyword "componentCoeff" not found.
colvars:     # componentCoeff = 1 [default]
colvars:     Looking for the keyword "componentExp" and its value.
colvars:     Keyword "componentExp" not found.
colvars:     # componentExp = 1 [default]
colvars:     Looking for the keyword "period" and its value.
colvars:     Keyword "period" not found.
colvars:     # period = 0 [default]
colvars:     Looking for the keyword "wrapAround" and its value.
colvars:     Keyword "wrapAround" not found.
colvars:     # wrapAround = 0 [default]
colvars:     Looking for the keyword "debugGradients" and its value.
colvars:     Keyword "debugGradients" not found.
colvars:     DEPS: disabling feature "debug_gradient" in cvc "001" of type "customColvar"
colvars:     Looking for the keyword "forceNoPBC" and its value.
colvars:     Keyword "forceNoPBC" not found.
colvars:     # forceNoPBC = off [default]
colvars:     DEPS: cvc "001" of type "customColvar" enabling "use_minimum-image_with_PBCs"
colvars:     Looking for the keyword "scalable" and its value.
colvars:     Keyword "scalable" not found.
colvars:     # scalable = on [default]
colvars:     Done initializing cvc base object.
colvars:     Looking for the keyword "reuseComponents" and its value.
colvars:     Keyword value = "re1/phi_1".
colvars:     Looking for the keyword "reuseComponents" and its value.
colvars:     Keyword "reuseComponents" not found.
colvars:     # reuseComponents = { re1/phi_1 }
colvars:     DEPS: cvc "phi_1" of type "dihedral" enabling "gradient"
colvars:     DEPS: feature "gradient" in cvc "phi_1" of type "dihedral" enabled, ref_count = 1.
colvars:     DEPS: cvc "phi_1" of type "dihedral" enabling "active"
colvars:     Looking for the keyword "alchFLambda" and its value.
colvars:     Keyword "alchFLambda" not found.
colvars:     Looking for the keyword "alchLambda" and its value.
colvars:     Keyword "alchLambda" not found.
colvars:     Looking for the keyword "alpha" and its value.
colvars:     Keyword "alpha" not found.
colvars:     Looking for the keyword "angle" and its value.
colvars:     Keyword "angle" not found.
colvars:     Looking for the keyword "aspath" and its value.
colvars:     Keyword "aspath" not found.
colvars:     Looking for the keyword "aspathCV" and its value.
colvars:     Keyword "aspathCV" not found.
colvars:     Looking for the keyword "azpath" and its value.
colvars:     Keyword "azpath" not found.
colvars:     Looking for the keyword "azpathCV" and its value.
colvars:     Keyword "azpathCV" not found.
colvars:     Looking for the keyword "cartesian" and its value.
colvars:     Keyword "cartesian" not found.
colvars:     Looking for the keyword "coordNum" and its value.
colvars:     Keyword "coordNum" not found.
colvars:     Looking for the keyword "customColvar" and its value.
colvars:     Keyword "customColvar" not found.
colvars:     Looking for the keyword "dihedral" and its value.
colvars:     Keyword "dihedral" not found.
colvars:     Looking for the keyword "dihedralPC" and its value.
colvars:     Keyword "dihedralPC" not found.
colvars:     Looking for the keyword "dipoleAngle" and its value.
colvars:     Keyword "dipoleAngle" not found.
colvars:     Looking for the keyword "dipoleMagnitude" and its value.
colvars:     Keyword "dipoleMagnitude" not found.
colvars:     Looking for the keyword "distance" and its value.
colvars:     Keyword "distance" not found.
colvars:     Looking for the keyword "distanceDir" and its value.
colvars:     Keyword "distanceDir" not found.
colvars:     Looking for the keyword "distanceInv" and its value.
colvars:     Keyword "distanceInv" not found.
colvars:     Looking for the keyword "distancePairs" and its value.
colvars:     Keyword "distancePairs" not found.
colvars:     Looking for the keyword "distanceVec" and its value.
colvars:     Keyword "distanceVec" not found.
colvars:     Looking for the keyword "distanceXY" and its value.
colvars:     Keyword "distanceXY" not found.
colvars:     Looking for the keyword "distanceZ" and its value.
colvars:     Keyword "distanceZ" not found.
colvars:     Looking for the keyword "eigenvector" and its value.
colvars:     Keyword "eigenvector" not found.
colvars:     Looking for the keyword "eulerPhi" and its value.
colvars:     Keyword "eulerPhi" not found.
colvars:     Looking for the keyword "eulerPsi" and its value.
colvars:     Keyword "eulerPsi" not found.
colvars:     Looking for the keyword "eulerTheta" and its value.
colvars:     Keyword "eulerTheta" not found.
colvars:     Looking for the keyword "groupCoord" and its value.
colvars:     Keyword "groupCoord" not found.
colvars:     Looking for the keyword "gspath" and its value.
colvars:     Keyword "gspath" not found.
colvars:     Looking for the keyword "gspathCV" and its value.
colvars:     Keyword "gspathCV" not found.
colvars:     Looking for the keyword "gyration" and its value.
colvars:     Keyword "gyration" not found.
colvars:     Looking for the keyword "gzpath" and its value.
colvars:     Keyword "gzpath" not found.
colvars:     Looking for the keyword "gzpathCV" and its value.
colvars:     Keyword "gzpathCV" not found.
colvars:     Looking for the keyword "hBond" and its value.
colvars:     Keyword "hBond" not found.
colvars:     Looking for the keyword "inertia" and its value.
colvars:     Keyword "inertia" not found.
colvars:     Looking for the keyword "inertiaZ" and its value.
colvars:     Keyword "inertiaZ" not found.
colvars:     Looking for the keyword "linearCombination" and its value.
colvars:     Keyword "linearCombination" not found.
colvars:     Looking for the keyword "mapTotal" and its value.
colvars:     Keyword "mapTotal" not found.
colvars:     Looking for the keyword "neuralNetwork" and its value.
colvars:     Keyword "neuralNetwork" not found.
colvars:     Looking for the keyword "orientation" and its value.
colvars:     Keyword "orientation" not found.
colvars:     Looking for the keyword "orientationAngle" and its value.
colvars:     Keyword "orientationAngle" not found.
colvars:     Looking for the keyword "orientationProj" and its value.
colvars:     Keyword "orientationProj" not found.
colvars:     Looking for the keyword "polarPhi" and its value.
colvars:     Keyword "polarPhi" not found.
colvars:     Looking for the keyword "polarTheta" and its value.
colvars:     Keyword "polarTheta" not found.
colvars:     Looking for the keyword "rmsd" and its value.
colvars:     Keyword "rmsd" not found.
colvars:     Looking for the keyword "selfCoordNum" and its value.
colvars:     Keyword "selfCoordNum" not found.
colvars:     Looking for the keyword "spinAngle" and its value.
colvars:     Keyword "spinAngle" not found.
colvars:     Looking for the keyword "tilt" and its value.
colvars:     Keyword "tilt" not found.
colvars:     Enable explicit gradient in 001
colvars:     Looking for the keyword "customFunction" and its value.
colvars:     Keyword value = "sin(phi_1/180.0*3.1415926535897)".
colvars:     This colvar uses a custom function.
colvars:     Parsing expression "sin(phi_1/180.0*3.1415926535897)".
colvars:     Looking for the keyword "customFunction" and its value.
colvars:     Keyword "customFunction" not found.
colvars:     DEPS: cvc "001" of type "customColvar" enabling "gradient"
colvars:     DEPS: feature "gradient" in cvc "001" of type "customColvar" enabled, ref_count = 1.
colvars:     DEPS: cvc "001" of type "customColvar" enabling "active"
colvars:     DEPS: uninitialized colvar component enabling "active"
colvars:     DEPS: feature "active" in uninitialized colvar component enabled, ref_count = 1.
colvars:     DEPS: uninitialized colvar component enabling "explicit_gradient"
colvars:     explicit_gradient requires exclude scalable_calculation
colvars:     explicit_gradient requires exclude scalable_calculation_of_centers_of_mass
colvars:     DEPS: feature "explicit_gradient" in uninitialized colvar component enabled, ref_count = 1.
colvars:     DEPS: uninitialized colvar component enabling "use_minimum-image_with_PBCs"
colvars:     DEPS: feature "use_minimum-image_with_PBCs" in uninitialized colvar component enabled, ref_count = 1.
colvars:     Warning: cannot cite unknown feature "customColvar colvar component (derived from linearCombination)"
colvars:     Initializing cvc base object.
colvars:     Looking for the keyword "name" and its value.
colvars:     Keyword value = "003".
colvars:     Looking for the keyword "name" and its value.
colvars:     Keyword "name" not found.
colvars:     # name = "003"
colvars:     Looking for the keyword "componentCoeff" and its value.
colvars:     Keyword "componentCoeff" not found.
colvars:     # componentCoeff = 1 [default]
colvars:     Looking for the keyword "componentExp" and its value.
colvars:     Keyword "componentExp" not found.
colvars:     # componentExp = 1 [default]
colvars:     Looking for the keyword "period" and its value.
colvars:     Keyword "period" not found.
colvars:     # period = 0 [default]
colvars:     Looking for the keyword "wrapAround" and its value.
colvars:     Keyword "wrapAround" not found.
colvars:     # wrapAround = 0 [default]
colvars:     Looking for the keyword "debugGradients" and its value.
colvars:     Keyword "debugGradients" not found.
colvars:     DEPS: disabling feature "debug_gradient" in cvc "003" of type "customColvar"
colvars:     Looking for the keyword "forceNoPBC" and its value.
colvars:     Keyword "forceNoPBC" not found.
colvars:     # forceNoPBC = off [default]
colvars:     DEPS: cvc "003" of type "customColvar" enabling "use_minimum-image_with_PBCs"
colvars:     Looking for the keyword "scalable" and its value.
colvars:     Keyword "scalable" not found.
colvars:     # scalable = on [default]
colvars:     Done initializing cvc base object.
colvars:     Looking for the keyword "reuseComponents" and its value.
colvars:     Keyword "reuseComponents" not found.
colvars:     # reuseComponents =  [default]
colvars:     Looking for the keyword "alchFLambda" and its value.
colvars:     Keyword "alchFLambda" not found.
colvars:     Looking for the keyword "alchLambda" and its value.
colvars:     Keyword "alchLambda" not found.
colvars:     Looking for the keyword "alpha" and its value.
colvars:     Keyword "alpha" not found.
colvars:     Looking for the keyword "angle" and its value.
colvars:     Keyword "angle" not found.
colvars:     Looking for the keyword "aspath" and its value.
colvars:     Keyword "aspath" not found.
colvars:     Looking for the keyword "aspathCV" and its value.
colvars:     Keyword "aspathCV" not found.
colvars:     Looking for the keyword "azpath" and its value.
colvars:     Keyword "azpath" not found.
colvars:     Looking for the keyword "azpathCV" and its value.
colvars:     Keyword "azpathCV" not found.
colvars:     Looking for the keyword "cartesian" and its value.
colvars:     Keyword "cartesian" not found.
colvars:     Looking for the keyword "coordNum" and its value.
colvars:     Keyword "coordNum" not found.
colvars:     Looking for the keyword "customColvar" and its value.
colvars:     Keyword "customColvar" not found.
colvars:     Looking for the keyword "dihedral" and its value.
colvars:     Looking for the keyword "dihedral" and its value.
colvars:     Keyword value = "
colvars:                 name phi_3
colvars:                 group1 {atomNumbers {30}}
colvars:                 group2 {atomNumbers {32}}
colvars:                 group3 {atomNumbers {34}}
colvars:                 group4 {atomNumbers {40}}
colvars:                 scalable off
colvars: ".
colvars:     Looking for the keyword "dihedral" and its value.
colvars:     Keyword "dihedral" not found.
colvars:     DEPS: uninitialized colvar component enabling "active"
colvars:     DEPS: feature "active" in uninitialized colvar component enabled, ref_count = 1.
colvars:     DEPS: uninitialized colvar component enabling "explicit_gradient"
colvars:     explicit_gradient requires exclude scalable_calculation
colvars:     explicit_gradient requires exclude scalable_calculation_of_centers_of_mass
colvars:     DEPS: feature "explicit_gradient" in uninitialized colvar component enabled, ref_count = 1.
colvars:     DEPS: uninitialized colvar component enabling "use_minimum-image_with_PBCs"
colvars:     DEPS: feature "use_minimum-image_with_PBCs" in uninitialized colvar component enabled, ref_count = 1.
colvars:     DEPS: unnamed cvc of type "dihedral" enabling "periodic"
colvars:     DEPS: feature "periodic" in unnamed cvc of type "dihedral" enabled, ref_count = 1.
colvars:     DEPS: unnamed cvc of type "dihedral" enabling "defined_lower_boundary"
colvars:     DEPS: feature "defined_lower_boundary" in unnamed cvc of type "dihedral" enabled, ref_count = 1.
colvars:     DEPS: unnamed cvc of type "dihedral" enabling "defined_upper_boundary"
colvars:     DEPS: feature "defined_upper_boundary" in unnamed cvc of type "dihedral" enabled, ref_count = 1.
colvars:     DEPS: unnamed cvc of type "dihedral" enabling "function_of_centers_of_mass"
colvars:     DEPS: feature "function_of_centers_of_mass" in unnamed cvc of type "dihedral" enabled, ref_count = 1.
colvars:     Initializing cvc base object.
colvars:     Looking for the keyword "name" and its value.
colvars:     Keyword value = "phi_3".
colvars:     Looking for the keyword "name" and its value.
colvars:     Keyword "name" not found.
colvars:     # name = "phi_3"
colvars:     Looking for the keyword "componentCoeff" and its value.
colvars:     Keyword "componentCoeff" not found.
colvars:     # componentCoeff = 1 [default]
colvars:     Looking for the keyword "componentExp" and its value.
colvars:     Keyword "componentExp" not found.
colvars:     # componentExp = 1 [default]
colvars:     Looking for the keyword "period" and its value.
colvars:     Keyword "period" not found.
colvars:     # period = 360 [default]
colvars:     Looking for the keyword "wrapAround" and its value.
colvars:     Keyword "wrapAround" not found.
colvars:     # wrapAround = 0 [default]
colvars:     DEPS: cvc "phi_3" of type "dihedral" enabling "periodic"
colvars:     Looking for the keyword "debugGradients" and its value.
colvars:     Keyword "debugGradients" not found.
colvars:     DEPS: disabling feature "debug_gradient" in cvc "phi_3" of type "dihedral"
colvars:     Looking for the keyword "forceNoPBC" and its value.
colvars:     Keyword "forceNoPBC" not found.
colvars:     # forceNoPBC = off [default]
colvars:     DEPS: cvc "phi_3" of type "dihedral" enabling "use_minimum-image_with_PBCs"
colvars:     Looking for the keyword "scalable" and its value.
colvars:     Keyword value = "off".
colvars:     Looking for the keyword "scalable" and its value.
colvars:     Keyword "scalable" not found.
colvars:     # scalable = off
colvars:     Done initializing cvc base object.
colvars:     Looking for the keyword "group1" and its value.
colvars:     Keyword value = "atomNumbers {30}".
colvars:       Initializing atom group "group1".
colvars:       Looking for the keyword "name" and its value.
colvars:       Keyword "name" not found.
colvars:       # name = "" [default]
colvars:       Looking for the keyword "centerToOrigin" and its value.
colvars:       Keyword "centerToOrigin" not found.
colvars:       # centerToOrigin = off [default]
colvars:       DEPS: disabling feature "center_to_origin" in atom group group1
colvars:       Looking for the keyword "centerReference" and its value.
colvars:       Keyword "centerReference" not found.
colvars:       DEPS: disabling feature "center_to_reference" in atom group group1
colvars:       Looking for the keyword "centerToReference" and its value.
colvars:       Keyword "centerToReference" not found.
colvars:       # centerToReference = off [default]
colvars:       DEPS: disabling feature "center_to_reference" in atom group group1
colvars:       Looking for the keyword "rotateReference" and its value.
colvars:       Keyword "rotateReference" not found.
colvars:       DEPS: disabling feature "rotate_to_origin" in atom group group1
colvars:       Looking for the keyword "rotateToReference" and its value.
colvars:       Keyword "rotateToReference" not found.
colvars:       # rotateToReference = off [default]
colvars:       DEPS: disabling feature "rotate_to_origin" in atom group group1
colvars:       Looking for the keyword "atomsOfGroup" and its value.
colvars:       Keyword "atomsOfGroup" not found.
colvars:       # atomsOfGroup = "" [default]
colvars:       Looking for the keyword "atomNumbers" and its value.
colvars:       Keyword value = "30".
colvars:       Looking for the keyword "atomNumbers" and its value.
colvars:       Keyword "atomNumbers" not found.
colvars:       Looking for the keyword "indexGroup" and its value.
colvars:       Keyword "indexGroup" not found.
colvars:       # indexGroup = "" [default]
colvars:       Looking for the keyword "atomNumbersRange" and its value.
colvars:       Keyword "atomNumbersRange" not found.
colvars:       Looking for the keyword "psfSegID" and its value.
colvars:       Keyword "psfSegID" not found.
colvars:       # psfSegID =  [default]
colvars:       Looking for the keyword "atomNameResidueRange" and its value.
colvars:       Keyword "atomNameResidueRange" not found.
colvars:       Looking for the keyword "atomsFile" and its value.
colvars:       Keyword "atomsFile" not found.
colvars:       # atomsFile = "" [default]
colvars:       Looking for the keyword "dummyAtom" and its value.
colvars:       Keyword "dummyAtom" not found.
colvars:       # dummyAtom = ( 0 , 0 , 0 ) [default]
colvars:       Looking for the keyword "enableForces" and its value.
colvars:       Keyword "enableForces" not found.
colvars:       Looking for the keyword "enableFitGradients" and its value.
colvars:       Keyword "enableFitGradients" not found.
colvars:       # enableFitGradients = on [default]
colvars:       Looking for the keyword "printAtomIDs" and its value.
colvars:       Keyword "printAtomIDs" not found.
colvars:       # printAtomIDs = off [default]
colvars:       Done initializing atom group "group1".
colvars:       Atom group "group1" defined with 1 atoms requested: total mass = 12.011, total charge = 0.51.
colvars:         DEPS: re-enabling children's explicit_atom_gradient
colvars:         DEPS: atom group group1 enabling "explicit_atom_gradient"
colvars:         DEPS: feature "explicit_atom_gradient" in atom group group1 enabled, ref_count = 1.
colvars:       DEPS: cvc "phi_3" of type "dihedral" enabling "explicit_atom_groups"
colvars:       DEPS: feature "explicit_atom_groups" in cvc "phi_3" of type "dihedral" enabled, ref_count = 1.
colvars:       Configuration string for "group1": "
colvars: atomNumbers {30}".
colvars:     Looking for the keyword "group2" and its value.
colvars:     Keyword value = "atomNumbers {32}".
colvars:       Initializing atom group "group2".
colvars:       Looking for the keyword "name" and its value.
colvars:       Keyword "name" not found.
colvars:       # name = "" [default]
colvars:       Looking for the keyword "centerToOrigin" and its value.
colvars:       Keyword "centerToOrigin" not found.
colvars:       # centerToOrigin = off [default]
colvars:       DEPS: disabling feature "center_to_origin" in atom group group2
colvars:       Looking for the keyword "centerReference" and its value.
colvars:       Keyword "centerReference" not found.
colvars:       DEPS: disabling feature "center_to_reference" in atom group group2
colvars:       Looking for the keyword "centerToReference" and its value.
colvars:       Keyword "centerToReference" not found.
colvars:       # centerToReference = off [default]
colvars:       DEPS: disabling feature "center_to_reference" in atom group group2
colvars:       Looking for the keyword "rotateReference" and its value.
colvars:       Keyword "rotateReference" not found.
colvars:       DEPS: disabling feature "rotate_to_origin" in atom group group2
colvars:       Looking for the keyword "rotateToReference" and its value.
colvars:       Keyword "rotateToReference" not found.
colvars:       # rotateToReference = off [default]
colvars:       DEPS: disabling feature "rotate_to_origin" in atom group group2
colvars:       Looking for the keyword "atomsOfGroup" and its value.
colvars:       Keyword "atomsOfGroup" not found.
colvars:       # atomsOfGroup = "" [default]
colvars:       Looking for the keyword "atomNumbers" and its value.
colvars:       Keyword value = "32".
colvars:       Adding atom 32 for collective variables calculation.
colvars:       Looking for the keyword "atomNumbers" and its value.
colvars:       Keyword "atomNumbers" not found.
colvars:       Looking for the keyword "indexGroup" and its value.
colvars:       Keyword "indexGroup" not found.
colvars:       # indexGroup = "" [default]
colvars:       Looking for the keyword "atomNumbersRange" and its value.
colvars:       Keyword "atomNumbersRange" not found.
colvars:       Looking for the keyword "psfSegID" and its value.
colvars:       Keyword "psfSegID" not found.
colvars:       # psfSegID =  [default]
colvars:       Looking for the keyword "atomNameResidueRange" and its value.
colvars:       Keyword "atomNameResidueRange" not found.
colvars:       Looking for the keyword "atomsFile" and its value.
colvars:       Keyword "atomsFile" not found.
colvars:       # atomsFile = "" [default]
colvars:       Looking for the keyword "dummyAtom" and its value.
colvars:       Keyword "dummyAtom" not found.
colvars:       # dummyAtom = ( 0 , 0 , 0 ) [default]
colvars:       Looking for the keyword "enableForces" and its value.
colvars:       Keyword "enableForces" not found.
colvars:       Looking for the keyword "enableFitGradients" and its value.
colvars:       Keyword "enableFitGradients" not found.
colvars:       # enableFitGradients = on [default]
colvars:       Looking for the keyword "printAtomIDs" and its value.
colvars:       Keyword "printAtomIDs" not found.
colvars:       # printAtomIDs = off [default]
colvars:       Done initializing atom group "group2".
colvars:       Atom group "group2" defined with 1 atoms requested: total mass = 14.007, total charge = -0.47.
colvars:         DEPS: re-enabling children's explicit_atom_gradient
colvars:         DEPS: atom group group2 enabling "explicit_atom_gradient"
colvars:         DEPS: feature "explicit_atom_gradient" in atom group group2 enabled, ref_count = 1.
colvars:       DEPS: cvc "phi_3" of type "dihedral" enabling "explicit_atom_groups"
colvars:       Configuration string for "group2": "
colvars: atomNumbers {32}".
colvars:     Looking for the keyword "group3" and its value.
colvars:     Keyword value = "atomNumbers {34}".
colvars:       Initializing atom group "group3".
colvars:       Looking for the keyword "name" and its value.
colvars:       Keyword "name" not found.
colvars:       # name = "" [default]
colvars:       Looking for the keyword "centerToOrigin" and its value.
colvars:       Keyword "centerToOrigin" not found.
colvars:       # centerToOrigin = off [default]
colvars:       DEPS: disabling feature "center_to_origin" in atom group group3
colvars:       Looking for the keyword "centerReference" and its value.
colvars:       Keyword "centerReference" not found.
colvars:       DEPS: disabling feature "center_to_reference" in atom group group3
colvars:       Looking for the keyword "centerToReference" and its value.
colvars:       Keyword "centerToReference" not found.
colvars:       # centerToReference = off [default]
colvars:       DEPS: disabling feature "center_to_reference" in atom group group3
colvars:       Looking for the keyword "rotateReference" and its value.
colvars:       Keyword "rotateReference" not found.
colvars:       DEPS: disabling feature "rotate_to_origin" in atom group group3
colvars:       Looking for the keyword "rotateToReference" and its value.
colvars:       Keyword "rotateToReference" not found.
colvars:       # rotateToReference = off [default]
colvars:       DEPS: disabling feature "rotate_to_origin" in atom group group3
colvars:       Looking for the keyword "atomsOfGroup" and its value.
colvars:       Keyword "atomsOfGroup" not found.
colvars:       # atomsOfGroup = "" [default]
colvars:       Looking for the keyword "atomNumbers" and its value.
colvars:       Keyword value = "34".
colvars:       Adding atom 34 for collective variables calculation.
colvars:       Looking for the keyword "atomNumbers" and its value.
colvars:       Keyword "atomNumbers" not found.
colvars:       Looking for the keyword "indexGroup" and its value.
colvars:       Keyword "indexGroup" not found.
colvars:       # indexGroup = "" [default]
colvars:       Looking for the keyword "atomNumbersRange" and its value.
colvars:       Keyword "atomNumbersRange" not found.
colvars:       Looking for the keyword "psfSegID" and its value.
colvars:       Keyword "psfSegID" not found.
colvars:       # psfSegID =  [default]
colvars:       Looking for the keyword "atomNameResidueRange" and its value.
colvars:       Keyword "atomNameResidueRange" not found.
colvars:       Looking for the keyword "atomsFile" and its value.
colvars:       Keyword "atomsFile" not found.
colvars:       # atomsFile = "" [default]
colvars:       Looking for the keyword "dummyAtom" and its value.
colvars:       Keyword "dummyAtom" not found.
colvars:       # dummyAtom = ( 0 , 0 , 0 ) [default]
colvars:       Looking for the keyword "enableForces" and its value.
colvars:       Keyword "enableForces" not found.
colvars:       Looking for the keyword "enableFitGradients" and its value.
colvars:       Keyword "enableFitGradients" not found.
colvars:       # enableFitGradients = on [default]
colvars:       Looking for the keyword "printAtomIDs" and its value.
colvars:       Keyword "printAtomIDs" not found.
colvars:       # printAtomIDs = off [default]
colvars:       Done initializing atom group "group3".
colvars:       Atom group "group3" defined with 1 atoms requested: total mass = 12.011, total charge = 0.07.
colvars:         DEPS: re-enabling children's explicit_atom_gradient
colvars:         DEPS: atom group group3 enabling "explicit_atom_gradient"
colvars:         DEPS: feature "explicit_atom_gradient" in atom group group3 enabled, ref_count = 1.
colvars:       DEPS: cvc "phi_3" of type "dihedral" enabling "explicit_atom_groups"
colvars:       Configuration string for "group3": "
colvars: atomNumbers {34}".
colvars:     Looking for the keyword "group4" and its value.
colvars:     Keyword value = "atomNumbers {40}".
colvars:       Initializing atom group "group4".
colvars:       Looking for the keyword "name" and its value.
colvars:       Keyword "name" not found.
colvars:       # name = "" [default]
colvars:       Looking for the keyword "centerToOrigin" and its value.
colvars:       Keyword "centerToOrigin" not found.
colvars:       # centerToOrigin = off [default]
colvars:       DEPS: disabling feature "center_to_origin" in atom group group4
colvars:       Looking for the keyword "centerReference" and its value.
colvars:       Keyword "centerReference" not found.
colvars:       DEPS: disabling feature "center_to_reference" in atom group group4
colvars:       Looking for the keyword "centerToReference" and its value.
colvars:       Keyword "centerToReference" not found.
colvars:       # centerToReference = off [default]
colvars:       DEPS: disabling feature "center_to_reference" in atom group group4
colvars:       Looking for the keyword "rotateReference" and its value.
colvars:       Keyword "rotateReference" not found.
colvars:       DEPS: disabling feature "rotate_to_origin" in atom group group4
colvars:       Looking for the keyword "rotateToReference" and its value.
colvars:       Keyword "rotateToReference" not found.
colvars:       # rotateToReference = off [default]
colvars:       DEPS: disabling feature "rotate_to_origin" in atom group group4
colvars:       Looking for the keyword "atomsOfGroup" and its value.
colvars:       Keyword "atomsOfGroup" not found.
colvars:       # atomsOfGroup = "" [default]
colvars:       Looking for the keyword "atomNumbers" and its value.
colvars:       Keyword value = "40".
colvars:       Adding atom 40 for collective variables calculation.
colvars:       Looking for the keyword "atomNumbers" and its value.
colvars:       Keyword "atomNumbers" not found.
colvars:       Looking for the keyword "indexGroup" and its value.
colvars:       Keyword "indexGroup" not found.
colvars:       # indexGroup = "" [default]
colvars:       Looking for the keyword "atomNumbersRange" and its value.
colvars:       Keyword "atomNumbersRange" not found.
colvars:       Looking for the keyword "psfSegID" and its value.
colvars:       Keyword "psfSegID" not found.
colvars:       # psfSegID =  [default]
colvars:       Looking for the keyword "atomNameResidueRange" and its value.
colvars:       Keyword "atomNameResidueRange" not found.
colvars:       Looking for the keyword "atomsFile" and its value.
colvars:       Keyword "atomsFile" not found.
colvars:       # atomsFile = "" [default]
colvars:       Looking for the keyword "dummyAtom" and its value.
colvars:       Keyword "dummyAtom" not found.
colvars:       # dummyAtom = ( 0 , 0 , 0 ) [default]
colvars:       Looking for the keyword "enableForces" and its value.
colvars:       Keyword "enableForces" not found.
colvars:       Looking for the keyword "enableFitGradients" and its value.
colvars:       Keyword "enableFitGradients" not found.
colvars:       # enableFitGradients = on [default]
colvars:       Looking for the keyword "printAtomIDs" and its value.
colvars:       Keyword "printAtomIDs" not found.
colvars:       # printAtomIDs = off [default]
colvars:       Done initializing atom group "group4".
colvars:       Atom group "group4" defined with 1 atoms requested: total mass = 12.011, total charge = 0.51.
colvars:         DEPS: re-enabling children's explicit_atom_gradient
colvars:         DEPS: atom group group4 enabling "explicit_atom_gradient"
colvars:         DEPS: feature "explicit_atom_gradient" in atom group group4 enabled, ref_count = 1.
colvars:       DEPS: cvc "phi_3" of type "dihedral" enabling "explicit_atom_groups"
colvars:       Configuration string for "group4": "
colvars: atomNumbers {40}".
colvars:     Looking for the keyword "oneSiteSystemForce" and its value.
colvars:     Keyword "oneSiteSystemForce" not found.
colvars:     # oneSiteSystemForce = off [default]
colvars:     DEPS: disabling feature "total_force_from_one_group" in cvc "phi_3" of type "dihedral"
colvars:     Looking for the keyword "oneSiteTotalForce" and its value.
colvars:     Keyword "oneSiteTotalForce" not found.
colvars:     # oneSiteTotalForce = off [default]
colvars:     DEPS: disabling feature "total_force_from_one_group" in cvc "phi_3" of type "dihedral"
colvars:     DEPS: cvc "phi_3" of type "dihedral" enabling "gradient"
colvars:     DEPS: feature "gradient" in cvc "phi_3" of type "dihedral" enabled, ref_count = 1.
colvars:     DEPS: cvc "phi_3" of type "dihedral" enabling "active"
colvars:     Looking for the keyword "dihedralPC" and its value.
colvars:     Keyword "dihedralPC" not found.
colvars:     Looking for the keyword "dipoleAngle" and its value.
colvars:     Keyword "dipoleAngle" not found.
colvars:     Looking for the keyword "dipoleMagnitude" and its value.
colvars:     Keyword "dipoleMagnitude" not found.
colvars:     Looking for the keyword "distance" and its value.
colvars:     Keyword "distance" not found.
colvars:     Looking for the keyword "distanceDir" and its value.
colvars:     Keyword "distanceDir" not found.
colvars:     Looking for the keyword "distanceInv" and its value.
colvars:     Keyword "distanceInv" not found.
colvars:     Looking for the keyword "distancePairs" and its value.
colvars:     Keyword "distancePairs" not found.
colvars:     Looking for the keyword "distanceVec" and its value.
colvars:     Keyword "distanceVec" not found.
colvars:     Looking for the keyword "distanceXY" and its value.
colvars:     Keyword "distanceXY" not found.
colvars:     Looking for the keyword "distanceZ" and its value.
colvars:     Keyword "distanceZ" not found.
colvars:     Looking for the keyword "eigenvector" and its value.
colvars:     Keyword "eigenvector" not found.
colvars:     Looking for the keyword "eulerPhi" and its value.
colvars:     Keyword "eulerPhi" not found.
colvars:     Looking for the keyword "eulerPsi" and its value.
colvars:     Keyword "eulerPsi" not found.
colvars:     Looking for the keyword "eulerTheta" and its value.
colvars:     Keyword "eulerTheta" not found.
colvars:     Looking for the keyword "groupCoord" and its value.
colvars:     Keyword "groupCoord" not found.
colvars:     Looking for the keyword "gspath" and its value.
colvars:     Keyword "gspath" not found.
colvars:     Looking for the keyword "gspathCV" and its value.
colvars:     Keyword "gspathCV" not found.
colvars:     Looking for the keyword "gyration" and its value.
colvars:     Keyword "gyration" not found.
colvars:     Looking for the keyword "gzpath" and its value.
colvars:     Keyword "gzpath" not found.
colvars:     Looking for the keyword "gzpathCV" and its value.
colvars:     Keyword "gzpathCV" not found.
colvars:     Looking for the keyword "hBond" and its value.
colvars:     Keyword "hBond" not found.
colvars:     Looking for the keyword "inertia" and its value.
colvars:     Keyword "inertia" not found.
colvars:     Looking for the keyword "inertiaZ" and its value.
colvars:     Keyword "inertiaZ" not found.
colvars:     Looking for the keyword "linearCombination" and its value.
colvars:     Keyword "linearCombination" not found.
colvars:     Looking for the keyword "mapTotal" and its value.
colvars:     Keyword "mapTotal" not found.
colvars:     Looking for the keyword "neuralNetwork" and its value.
colvars:     Keyword "neuralNetwork" not found.
colvars:     Looking for the keyword "orientation" and its value.
colvars:     Keyword "orientation" not found.
colvars:     Looking for the keyword "orientationAngle" and its value.
colvars:     Keyword "orientationAngle" not found.
colvars:     Looking for the keyword "orientationProj" and its value.
colvars:     Keyword "orientationProj" not found.
colvars:     Looking for the keyword "polarPhi" and its value.
colvars:     Keyword "polarPhi" not found.
colvars:     Looking for the keyword "polarTheta" and its value.
colvars:     Keyword "polarTheta" not found.
colvars:     Looking for the keyword "rmsd" and its value.
colvars:     Keyword "rmsd" not found.
colvars:     Looking for the keyword "selfCoordNum" and its value.
colvars:     Keyword "selfCoordNum" not found.
colvars:     Looking for the keyword "spinAngle" and its value.
colvars:     Keyword "spinAngle" not found.
colvars:     Looking for the keyword "tilt" and its value.
colvars:     Keyword "tilt" not found.
colvars:     Enable explicit gradient in 003
colvars:     Looking for the keyword "customFunction" and its value.
colvars:     Keyword value = "sin(phi_3/180.0*3.1415926535897)".
colvars:     This colvar uses a custom function.
colvars:     Parsing expression "sin(phi_3/180.0*3.1415926535897)".
colvars:     Looking for the keyword "customFunction" and its value.
colvars:     Keyword "customFunction" not found.
colvars:     DEPS: cvc "003" of type "customColvar" enabling "gradient"
colvars:     DEPS: feature "gradient" in cvc "003" of type "customColvar" enabled, ref_count = 1.
colvars:     DEPS: cvc "003" of type "customColvar" enabling "active"
colvars:     DEPS: uninitialized colvar component enabling "active"
colvars:     DEPS: feature "active" in uninitialized colvar component enabled, ref_count = 1.
colvars:     DEPS: uninitialized colvar component enabling "explicit_gradient"
colvars:     explicit_gradient requires exclude scalable_calculation
colvars:     explicit_gradient requires exclude scalable_calculation_of_centers_of_mass
colvars:     DEPS: feature "explicit_gradient" in uninitialized colvar component enabled, ref_count = 1.
colvars:     DEPS: uninitialized colvar component enabling "use_minimum-image_with_PBCs"
colvars:     DEPS: feature "use_minimum-image_with_PBCs" in uninitialized colvar component enabled, ref_count = 1.
colvars:     Warning: cannot cite unknown feature "customColvar colvar component (derived from linearCombination)"
colvars:     Initializing cvc base object.
colvars:     Looking for the keyword "name" and its value.
colvars:     Keyword value = "004".
colvars:     Looking for the keyword "name" and its value.
colvars:     Keyword "name" not found.
colvars:     # name = "004"
colvars:     Looking for the keyword "componentCoeff" and its value.
colvars:     Keyword "componentCoeff" not found.
colvars:     # componentCoeff = 1 [default]
colvars:     Looking for the keyword "componentExp" and its value.
colvars:     Keyword "componentExp" not found.
colvars:     # componentExp = 1 [default]
colvars:     Looking for the keyword "period" and its value.
colvars:     Keyword "period" not found.
colvars:     # period = 0 [default]
colvars:     Looking for the keyword "wrapAround" and its value.
colvars:     Keyword "wrapAround" not found.
colvars:     # wrapAround = 0 [default]
colvars:     Looking for the keyword "debugGradients" and its value.
colvars:     Keyword "debugGradients" not found.
colvars:     DEPS: disabling feature "debug_gradient" in cvc "004" of type "customColvar"
colvars:     Looking for the keyword "forceNoPBC" and its value.
colvars:     Keyword "forceNoPBC" not found.
colvars:     # forceNoPBC = off [default]
colvars:     DEPS: cvc "004" of type "customColvar" enabling "use_minimum-image_with_PBCs"
colvars:     Looking for the keyword "scalable" and its value.
colvars:     Keyword "scalable" not found.
colvars:     # scalable = on [default]
colvars:     Done initializing cvc base object.
colvars:     Looking for the keyword "reuseComponents" and its value.
colvars:     Keyword "reuseComponents" not found.
colvars:     # reuseComponents =  [default]
colvars:     Looking for the keyword "alchFLambda" and its value.
colvars:     Keyword "alchFLambda" not found.
colvars:     Looking for the keyword "alchLambda" and its value.
colvars:     Keyword "alchLambda" not found.
colvars:     Looking for the keyword "alpha" and its value.
colvars:     Keyword "alpha" not found.
colvars:     Looking for the keyword "angle" and its value.
colvars:     Keyword "angle" not found.
colvars:     Looking for the keyword "aspath" and its value.
colvars:     Keyword "aspath" not found.
colvars:     Looking for the keyword "aspathCV" and its value.
colvars:     Keyword "aspathCV" not found.
colvars:     Looking for the keyword "azpath" and its value.
colvars:     Keyword "azpath" not found.
colvars:     Looking for the keyword "azpathCV" and its value.
colvars:     Keyword "azpathCV" not found.
colvars:     Looking for the keyword "cartesian" and its value.
colvars:     Keyword "cartesian" not found.
colvars:     Looking for the keyword "coordNum" and its value.
colvars:     Keyword "coordNum" not found.
colvars:     Looking for the keyword "customColvar" and its value.
colvars:     Keyword "customColvar" not found.
colvars:     Looking for the keyword "dihedral" and its value.
colvars:     Looking for the keyword "dihedral" and its value.
colvars:     Keyword value = "
colvars:                 name psi_1
colvars:                 group1 {atomNumbers {12}}
colvars:                 group2 {atomNumbers {14}}
colvars:                 group3 {atomNumbers {20}}
colvars:                 group4 {atomNumbers {22}}
colvars:                 scalable off
colvars: ".
colvars:     Looking for the keyword "dihedral" and its value.
colvars:     Keyword "dihedral" not found.
colvars:     DEPS: uninitialized colvar component enabling "active"
colvars:     DEPS: feature "active" in uninitialized colvar component enabled, ref_count = 1.
colvars:     DEPS: uninitialized colvar component enabling "explicit_gradient"
colvars:     explicit_gradient requires exclude scalable_calculation
colvars:     explicit_gradient requires exclude scalable_calculation_of_centers_of_mass
colvars:     DEPS: feature "explicit_gradient" in uninitialized colvar component enabled, ref_count = 1.
colvars:     DEPS: uninitialized colvar component enabling "use_minimum-image_with_PBCs"
colvars:     DEPS: feature "use_minimum-image_with_PBCs" in uninitialized colvar component enabled, ref_count = 1.
colvars:     DEPS: unnamed cvc of type "dihedral" enabling "periodic"
colvars:     DEPS: feature "periodic" in unnamed cvc of type "dihedral" enabled, ref_count = 1.
colvars:     DEPS: unnamed cvc of type "dihedral" enabling "defined_lower_boundary"
colvars:     DEPS: feature "defined_lower_boundary" in unnamed cvc of type "dihedral" enabled, ref_count = 1.
colvars:     DEPS: unnamed cvc of type "dihedral" enabling "defined_upper_boundary"
colvars:     DEPS: feature "defined_upper_boundary" in unnamed cvc of type "dihedral" enabled, ref_count = 1.
colvars:     DEPS: unnamed cvc of type "dihedral" enabling "function_of_centers_of_mass"
colvars:     DEPS: feature "function_of_centers_of_mass" in unnamed cvc of type "dihedral" enabled, ref_count = 1.
colvars:     Initializing cvc base object.
colvars:     Looking for the keyword "name" and its value.
colvars:     Keyword value = "psi_1".
colvars:     Looking for the keyword "name" and its value.
colvars:     Keyword "name" not found.
colvars:     # name = "psi_1"
colvars:     Looking for the keyword "componentCoeff" and its value.
colvars:     Keyword "componentCoeff" not found.
colvars:     # componentCoeff = 1 [default]
colvars:     Looking for the keyword "componentExp" and its value.
colvars:     Keyword "componentExp" not found.
colvars:     # componentExp = 1 [default]
colvars:     Looking for the keyword "period" and its value.
colvars:     Keyword "period" not found.
colvars:     # period = 360 [default]
colvars:     Looking for the keyword "wrapAround" and its value.
colvars:     Keyword "wrapAround" not found.
colvars:     # wrapAround = 0 [default]
colvars:     DEPS: cvc "psi_1" of type "dihedral" enabling "periodic"
colvars:     Looking for the keyword "debugGradients" and its value.
colvars:     Keyword "debugGradients" not found.
colvars:     DEPS: disabling feature "debug_gradient" in cvc "psi_1" of type "dihedral"
colvars:     Looking for the keyword "forceNoPBC" and its value.
colvars:     Keyword "forceNoPBC" not found.
colvars:     # forceNoPBC = off [default]
colvars:     DEPS: cvc "psi_1" of type "dihedral" enabling "use_minimum-image_with_PBCs"
colvars:     Looking for the keyword "scalable" and its value.
colvars:     Keyword value = "off".
colvars:     Looking for the keyword "scalable" and its value.
colvars:     Keyword "scalable" not found.
colvars:     # scalable = off
colvars:     Done initializing cvc base object.
colvars:     Looking for the keyword "group1" and its value.
colvars:     Keyword value = "atomNumbers {12}".
colvars:       Initializing atom group "group1".
colvars:       Looking for the keyword "name" and its value.
colvars:       Keyword "name" not found.
colvars:       # name = "" [default]
colvars:       Looking for the keyword "centerToOrigin" and its value.
colvars:       Keyword "centerToOrigin" not found.
colvars:       # centerToOrigin = off [default]
colvars:       DEPS: disabling feature "center_to_origin" in atom group group1
colvars:       Looking for the keyword "centerReference" and its value.
colvars:       Keyword "centerReference" not found.
colvars:       DEPS: disabling feature "center_to_reference" in atom group group1
colvars:       Looking for the keyword "centerToReference" and its value.
colvars:       Keyword "centerToReference" not found.
colvars:       # centerToReference = off [default]
colvars:       DEPS: disabling feature "center_to_reference" in atom group group1
colvars:       Looking for the keyword "rotateReference" and its value.
colvars:       Keyword "rotateReference" not found.
colvars:       DEPS: disabling feature "rotate_to_origin" in atom group group1
colvars:       Looking for the keyword "rotateToReference" and its value.
colvars:       Keyword "rotateToReference" not found.
colvars:       # rotateToReference = off [default]
colvars:       DEPS: disabling feature "rotate_to_origin" in atom group group1
colvars:       Looking for the keyword "atomsOfGroup" and its value.
colvars:       Keyword "atomsOfGroup" not found.
colvars:       # atomsOfGroup = "" [default]
colvars:       Looking for the keyword "atomNumbers" and its value.
colvars:       Keyword value = "12".
colvars:       Looking for the keyword "atomNumbers" and its value.
colvars:       Keyword "atomNumbers" not found.
colvars:       Looking for the keyword "indexGroup" and its value.
colvars:       Keyword "indexGroup" not found.
colvars:       # indexGroup = "" [default]
colvars:       Looking for the keyword "atomNumbersRange" and its value.
colvars:       Keyword "atomNumbersRange" not found.
colvars:       Looking for the keyword "psfSegID" and its value.
colvars:       Keyword "psfSegID" not found.
colvars:       # psfSegID =  [default]
colvars:       Looking for the keyword "atomNameResidueRange" and its value.
colvars:       Keyword "atomNameResidueRange" not found.
colvars:       Looking for the keyword "atomsFile" and its value.
colvars:       Keyword "atomsFile" not found.
colvars:       # atomsFile = "" [default]
colvars:       Looking for the keyword "dummyAtom" and its value.
colvars:       Keyword "dummyAtom" not found.
colvars:       # dummyAtom = ( 0 , 0 , 0 ) [default]
colvars:       Looking for the keyword "enableForces" and its value.
colvars:       Keyword "enableForces" not found.
colvars:       Looking for the keyword "enableFitGradients" and its value.
colvars:       Keyword "enableFitGradients" not found.
colvars:       # enableFitGradients = on [default]
colvars:       Looking for the keyword "printAtomIDs" and its value.
colvars:       Keyword "printAtomIDs" not found.
colvars:       # printAtomIDs = off [default]
colvars:       Done initializing atom group "group1".
colvars:       Atom group "group1" defined with 1 atoms requested: total mass = 14.007, total charge = -0.47.
colvars:         DEPS: re-enabling children's explicit_atom_gradient
colvars:         DEPS: atom group group1 enabling "explicit_atom_gradient"
colvars:         DEPS: feature "explicit_atom_gradient" in atom group group1 enabled, ref_count = 1.
colvars:       DEPS: cvc "psi_1" of type "dihedral" enabling "explicit_atom_groups"
colvars:       DEPS: feature "explicit_atom_groups" in cvc "psi_1" of type "dihedral" enabled, ref_count = 1.
colvars:       Configuration string for "group1": "
colvars: atomNumbers {12}".
colvars:     Looking for the keyword "group2" and its value.
colvars:     Keyword value = "atomNumbers {14}".
colvars:       Initializing atom group "group2".
colvars:       Looking for the keyword "name" and its value.
colvars:       Keyword "name" not found.
colvars:       # name = "" [default]
colvars:       Looking for the keyword "centerToOrigin" and its value.
colvars:       Keyword "centerToOrigin" not found.
colvars:       # centerToOrigin = off [default]
colvars:       DEPS: disabling feature "center_to_origin" in atom group group2
colvars:       Looking for the keyword "centerReference" and its value.
colvars:       Keyword "centerReference" not found.
colvars:       DEPS: disabling feature "center_to_reference" in atom group group2
colvars:       Looking for the keyword "centerToReference" and its value.
colvars:       Keyword "centerToReference" not found.
colvars:       # centerToReference = off [default]
colvars:       DEPS: disabling feature "center_to_reference" in atom group group2
colvars:       Looking for the keyword "rotateReference" and its value.
colvars:       Keyword "rotateReference" not found.
colvars:       DEPS: disabling feature "rotate_to_origin" in atom group group2
colvars:       Looking for the keyword "rotateToReference" and its value.
colvars:       Keyword "rotateToReference" not found.
colvars:       # rotateToReference = off [default]
colvars:       DEPS: disabling feature "rotate_to_origin" in atom group group2
colvars:       Looking for the keyword "atomsOfGroup" and its value.
colvars:       Keyword "atomsOfGroup" not found.
colvars:       # atomsOfGroup = "" [default]
colvars:       Looking for the keyword "atomNumbers" and its value.
colvars:       Keyword value = "14".
colvars:       Looking for the keyword "atomNumbers" and its value.
colvars:       Keyword "atomNumbers" not found.
colvars:       Looking for the keyword "indexGroup" and its value.
colvars:       Keyword "indexGroup" not found.
colvars:       # indexGroup = "" [default]
colvars:       Looking for the keyword "atomNumbersRange" and its value.
colvars:       Keyword "atomNumbersRange" not found.
colvars:       Looking for the keyword "psfSegID" and its value.
colvars:       Keyword "psfSegID" not found.
colvars:       # psfSegID =  [default]
colvars:       Looking for the keyword "atomNameResidueRange" and its value.
colvars:       Keyword "atomNameResidueRange" not found.
colvars:       Looking for the keyword "atomsFile" and its value.
colvars:       Keyword "atomsFile" not found.
colvars:       # atomsFile = "" [default]
colvars:       Looking for the keyword "dummyAtom" and its value.
colvars:       Keyword "dummyAtom" not found.
colvars:       # dummyAtom = ( 0 , 0 , 0 ) [default]
colvars:       Looking for the keyword "enableForces" and its value.
colvars:       Keyword "enableForces" not found.
colvars:       Looking for the keyword "enableFitGradients" and its value.
colvars:       Keyword "enableFitGradients" not found.
colvars:       # enableFitGradients = on [default]
colvars:       Looking for the keyword "printAtomIDs" and its value.
colvars:       Keyword "printAtomIDs" not found.
colvars:       # printAtomIDs = off [default]
colvars:       Done initializing atom group "group2".
colvars:       Atom group "group2" defined with 1 atoms requested: total mass = 12.011, total charge = 0.07.
colvars:         DEPS: re-enabling children's explicit_atom_gradient
colvars:         DEPS: atom group group2 enabling "explicit_atom_gradient"
colvars:         DEPS: feature "explicit_atom_gradient" in atom group group2 enabled, ref_count = 1.
colvars:       DEPS: cvc "psi_1" of type "dihedral" enabling "explicit_atom_groups"
colvars:       Configuration string for "group2": "
colvars: atomNumbers {14}".
colvars:     Looking for the keyword "group3" and its value.
colvars:     Keyword value = "atomNumbers {20}".
colvars:       Initializing atom group "group3".
colvars:       Looking for the keyword "name" and its value.
colvars:       Keyword "name" not found.
colvars:       # name = "" [default]
colvars:       Looking for the keyword "centerToOrigin" and its value.
colvars:       Keyword "centerToOrigin" not found.
colvars:       # centerToOrigin = off [default]
colvars:       DEPS: disabling feature "center_to_origin" in atom group group3
colvars:       Looking for the keyword "centerReference" and its value.
colvars:       Keyword "centerReference" not found.
colvars:       DEPS: disabling feature "center_to_reference" in atom group group3
colvars:       Looking for the keyword "centerToReference" and its value.
colvars:       Keyword "centerToReference" not found.
colvars:       # centerToReference = off [default]
colvars:       DEPS: disabling feature "center_to_reference" in atom group group3
colvars:       Looking for the keyword "rotateReference" and its value.
colvars:       Keyword "rotateReference" not found.
colvars:       DEPS: disabling feature "rotate_to_origin" in atom group group3
colvars:       Looking for the keyword "rotateToReference" and its value.
colvars:       Keyword "rotateToReference" not found.
colvars:       # rotateToReference = off [default]
colvars:       DEPS: disabling feature "rotate_to_origin" in atom group group3
colvars:       Looking for the keyword "atomsOfGroup" and its value.
colvars:       Keyword "atomsOfGroup" not found.
colvars:       # atomsOfGroup = "" [default]
colvars:       Looking for the keyword "atomNumbers" and its value.
colvars:       Keyword value = "20".
colvars:       Looking for the keyword "atomNumbers" and its value.
colvars:       Keyword "atomNumbers" not found.
colvars:       Looking for the keyword "indexGroup" and its value.
colvars:       Keyword "indexGroup" not found.
colvars:       # indexGroup = "" [default]
colvars:       Looking for the keyword "atomNumbersRange" and its value.
colvars:       Keyword "atomNumbersRange" not found.
colvars:       Looking for the keyword "psfSegID" and its value.
colvars:       Keyword "psfSegID" not found.
colvars:       # psfSegID =  [default]
colvars:       Looking for the keyword "atomNameResidueRange" and its value.
colvars:       Keyword "atomNameResidueRange" not found.
colvars:       Looking for the keyword "atomsFile" and its value.
colvars:       Keyword "atomsFile" not found.
colvars:       # atomsFile = "" [default]
colvars:       Looking for the keyword "dummyAtom" and its value.
colvars:       Keyword "dummyAtom" not found.
colvars:       # dummyAtom = ( 0 , 0 , 0 ) [default]
colvars:       Looking for the keyword "enableForces" and its value.
colvars:       Keyword "enableForces" not found.
colvars:       Looking for the keyword "enableFitGradients" and its value.
colvars:       Keyword "enableFitGradients" not found.
colvars:       # enableFitGradients = on [default]
colvars:       Looking for the keyword "printAtomIDs" and its value.
colvars:       Keyword "printAtomIDs" not found.
colvars:       # printAtomIDs = off [default]
colvars:       Done initializing atom group "group3".
colvars:       Atom group "group3" defined with 1 atoms requested: total mass = 12.011, total charge = 0.51.
colvars:         DEPS: re-enabling children's explicit_atom_gradient
colvars:         DEPS: atom group group3 enabling "explicit_atom_gradient"
colvars:         DEPS: feature "explicit_atom_gradient" in atom group group3 enabled, ref_count = 1.
colvars:       DEPS: cvc "psi_1" of type "dihedral" enabling "explicit_atom_groups"
colvars:       Configuration string for "group3": "
colvars: atomNumbers {20}".
colvars:     Looking for the keyword "group4" and its value.
colvars:     Keyword value = "atomNumbers {22}".
colvars:       Initializing atom group "group4".
colvars:       Looking for the keyword "name" and its value.
colvars:       Keyword "name" not found.
colvars:       # name = "" [default]
colvars:       Looking for the keyword "centerToOrigin" and its value.
colvars:       Keyword "centerToOrigin" not found.
colvars:       # centerToOrigin = off [default]
colvars:       DEPS: disabling feature "center_to_origin" in atom group group4
colvars:       Looking for the keyword "centerReference" and its value.
colvars:       Keyword "centerReference" not found.
colvars:       DEPS: disabling feature "center_to_reference" in atom group group4
colvars:       Looking for the keyword "centerToReference" and its value.
colvars:       Keyword "centerToReference" not found.
colvars:       # centerToReference = off [default]
colvars:       DEPS: disabling feature "center_to_reference" in atom group group4
colvars:       Looking for the keyword "rotateReference" and its value.
colvars:       Keyword "rotateReference" not found.
colvars:       DEPS: disabling feature "rotate_to_origin" in atom group group4
colvars:       Looking for the keyword "rotateToReference" and its value.
colvars:       Keyword "rotateToReference" not found.
colvars:       # rotateToReference = off [default]
colvars:       DEPS: disabling feature "rotate_to_origin" in atom group group4
colvars:       Looking for the keyword "atomsOfGroup" and its value.
colvars:       Keyword "atomsOfGroup" not found.
colvars:       # atomsOfGroup = "" [default]
colvars:       Looking for the keyword "atomNumbers" and its value.
colvars:       Keyword value = "22".
colvars:       Looking for the keyword "atomNumbers" and its value.
colvars:       Keyword "atomNumbers" not found.
colvars:       Looking for the keyword "indexGroup" and its value.
colvars:       Keyword "indexGroup" not found.
colvars:       # indexGroup = "" [default]
colvars:       Looking for the keyword "atomNumbersRange" and its value.
colvars:       Keyword "atomNumbersRange" not found.
colvars:       Looking for the keyword "psfSegID" and its value.
colvars:       Keyword "psfSegID" not found.
colvars:       # psfSegID =  [default]
colvars:       Looking for the keyword "atomNameResidueRange" and its value.
colvars:       Keyword "atomNameResidueRange" not found.
colvars:       Looking for the keyword "atomsFile" and its value.
colvars:       Keyword "atomsFile" not found.
colvars:       # atomsFile = "" [default]
colvars:       Looking for the keyword "dummyAtom" and its value.
colvars:       Keyword "dummyAtom" not found.
colvars:       # dummyAtom = ( 0 , 0 , 0 ) [default]
colvars:       Looking for the keyword "enableForces" and its value.
colvars:       Keyword "enableForces" not found.
colvars:       Looking for the keyword "enableFitGradients" and its value.
colvars:       Keyword "enableFitGradients" not found.
colvars:       # enableFitGradients = on [default]
colvars:       Looking for the keyword "printAtomIDs" and its value.
colvars:       Keyword "printAtomIDs" not found.
colvars:       # printAtomIDs = off [default]
colvars:       Done initializing atom group "group4".
colvars:       Atom group "group4" defined with 1 atoms requested: total mass = 14.007, total charge = -0.47.
colvars:         DEPS: re-enabling children's explicit_atom_gradient
colvars:         DEPS: atom group group4 enabling "explicit_atom_gradient"
colvars:         DEPS: feature "explicit_atom_gradient" in atom group group4 enabled, ref_count = 1.
colvars:       DEPS: cvc "psi_1" of type "dihedral" enabling "explicit_atom_groups"
colvars:       Configuration string for "group4": "
colvars: atomNumbers {22}".
colvars:     Looking for the keyword "oneSiteSystemForce" and its value.
colvars:     Keyword "oneSiteSystemForce" not found.
colvars:     # oneSiteSystemForce = off [default]
colvars:     DEPS: disabling feature "total_force_from_one_group" in cvc "psi_1" of type "dihedral"
colvars:     Looking for the keyword "oneSiteTotalForce" and its value.
colvars:     Keyword "oneSiteTotalForce" not found.
colvars:     # oneSiteTotalForce = off [default]
colvars:     DEPS: disabling feature "total_force_from_one_group" in cvc "psi_1" of type "dihedral"
colvars:     DEPS: cvc "psi_1" of type "dihedral" enabling "gradient"
colvars:     DEPS: feature "gradient" in cvc "psi_1" of type "dihedral" enabled, ref_count = 1.
colvars:     DEPS: cvc "psi_1" of type "dihedral" enabling "active"
colvars:     Looking for the keyword "dihedralPC" and its value.
colvars:     Keyword "dihedralPC" not found.
colvars:     Looking for the keyword "dipoleAngle" and its value.
colvars:     Keyword "dipoleAngle" not found.
colvars:     Looking for the keyword "dipoleMagnitude" and its value.
colvars:     Keyword "dipoleMagnitude" not found.
colvars:     Looking for the keyword "distance" and its value.
colvars:     Keyword "distance" not found.
colvars:     Looking for the keyword "distanceDir" and its value.
colvars:     Keyword "distanceDir" not found.
colvars:     Looking for the keyword "distanceInv" and its value.
colvars:     Keyword "distanceInv" not found.
colvars:     Looking for the keyword "distancePairs" and its value.
colvars:     Keyword "distancePairs" not found.
colvars:     Looking for the keyword "distanceVec" and its value.
colvars:     Keyword "distanceVec" not found.
colvars:     Looking for the keyword "distanceXY" and its value.
colvars:     Keyword "distanceXY" not found.
colvars:     Looking for the keyword "distanceZ" and its value.
colvars:     Keyword "distanceZ" not found.
colvars:     Looking for the keyword "eigenvector" and its value.
colvars:     Keyword "eigenvector" not found.
colvars:     Looking for the keyword "eulerPhi" and its value.
colvars:     Keyword "eulerPhi" not found.
colvars:     Looking for the keyword "eulerPsi" and its value.
colvars:     Keyword "eulerPsi" not found.
colvars:     Looking for the keyword "eulerTheta" and its value.
colvars:     Keyword "eulerTheta" not found.
colvars:     Looking for the keyword "groupCoord" and its value.
colvars:     Keyword "groupCoord" not found.
colvars:     Looking for the keyword "gspath" and its value.
colvars:     Keyword "gspath" not found.
colvars:     Looking for the keyword "gspathCV" and its value.
colvars:     Keyword "gspathCV" not found.
colvars:     Looking for the keyword "gyration" and its value.
colvars:     Keyword "gyration" not found.
colvars:     Looking for the keyword "gzpath" and its value.
colvars:     Keyword "gzpath" not found.
colvars:     Looking for the keyword "gzpathCV" and its value.
colvars:     Keyword "gzpathCV" not found.
colvars:     Looking for the keyword "hBond" and its value.
colvars:     Keyword "hBond" not found.
colvars:     Looking for the keyword "inertia" and its value.
colvars:     Keyword "inertia" not found.
colvars:     Looking for the keyword "inertiaZ" and its value.
colvars:     Keyword "inertiaZ" not found.
colvars:     Looking for the keyword "linearCombination" and its value.
colvars:     Keyword "linearCombination" not found.
colvars:     Looking for the keyword "mapTotal" and its value.
colvars:     Keyword "mapTotal" not found.
colvars:     Looking for the keyword "neuralNetwork" and its value.
colvars:     Keyword "neuralNetwork" not found.
colvars:     Looking for the keyword "orientation" and its value.
colvars:     Keyword "orientation" not found.
colvars:     Looking for the keyword "orientationAngle" and its value.
colvars:     Keyword "orientationAngle" not found.
colvars:     Looking for the keyword "orientationProj" and its value.
colvars:     Keyword "orientationProj" not found.
colvars:     Looking for the keyword "polarPhi" and its value.
colvars:     Keyword "polarPhi" not found.
colvars:     Looking for the keyword "polarTheta" and its value.
colvars:     Keyword "polarTheta" not found.
colvars:     Looking for the keyword "rmsd" and its value.
colvars:     Keyword "rmsd" not found.
colvars:     Looking for the keyword "selfCoordNum" and its value.
colvars:     Keyword "selfCoordNum" not found.
colvars:     Looking for the keyword "spinAngle" and its value.
colvars:     Keyword "spinAngle" not found.
colvars:     Looking for the keyword "tilt" and its value.
colvars:     Keyword "tilt" not found.
colvars:     Enable explicit gradient in 004
colvars:     Looking for the keyword "customFunction" and its value.
colvars:     Keyword value = "sin(psi_1/180.0*3.1415926535897)".
colvars:     This colvar uses a custom function.
colvars:     Parsing expression "sin(psi_1/180.0*3.1415926535897)".
colvars:     Looking for the keyword "customFunction" and its value.
colvars:     Keyword "customFunction" not found.
colvars:     DEPS: cvc "004" of type "customColvar" enabling "gradient"
colvars:     DEPS: feature "gradient" in cvc "004" of type "customColvar" enabled, ref_count = 1.
colvars:     DEPS: cvc "004" of type "customColvar" enabling "active"
colvars:     DEPS: uninitialized colvar component enabling "active"
colvars:     DEPS: feature "active" in uninitialized colvar component enabled, ref_count = 1.
colvars:     DEPS: uninitialized colvar component enabling "explicit_gradient"
colvars:     explicit_gradient requires exclude scalable_calculation
colvars:     explicit_gradient requires exclude scalable_calculation_of_centers_of_mass
colvars:     DEPS: feature "explicit_gradient" in uninitialized colvar component enabled, ref_count = 1.
colvars:     DEPS: uninitialized colvar component enabling "use_minimum-image_with_PBCs"
colvars:     DEPS: feature "use_minimum-image_with_PBCs" in uninitialized colvar component enabled, ref_count = 1.
colvars:     Warning: cannot cite unknown feature "customColvar colvar component (derived from linearCombination)"
colvars:     Initializing cvc base object.
colvars:     Looking for the keyword "name" and its value.
colvars:     Keyword value = "005".
colvars:     Looking for the keyword "name" and its value.
colvars:     Keyword "name" not found.
colvars:     # name = "005"
colvars:     Looking for the keyword "componentCoeff" and its value.
colvars:     Keyword "componentCoeff" not found.
colvars:     # componentCoeff = 1 [default]
colvars:     Looking for the keyword "componentExp" and its value.
colvars:     Keyword "componentExp" not found.
colvars:     # componentExp = 1 [default]
colvars:     Looking for the keyword "period" and its value.
colvars:     Keyword "period" not found.
colvars:     # period = 0 [default]
colvars:     Looking for the keyword "wrapAround" and its value.
colvars:     Keyword "wrapAround" not found.
colvars:     # wrapAround = 0 [default]
colvars:     Looking for the keyword "debugGradients" and its value.
colvars:     Keyword "debugGradients" not found.
colvars:     DEPS: disabling feature "debug_gradient" in cvc "005" of type "customColvar"
colvars:     Looking for the keyword "forceNoPBC" and its value.
colvars:     Keyword "forceNoPBC" not found.
colvars:     # forceNoPBC = off [default]
colvars:     DEPS: cvc "005" of type "customColvar" enabling "use_minimum-image_with_PBCs"
colvars:     Looking for the keyword "scalable" and its value.
colvars:     Keyword "scalable" not found.
colvars:     # scalable = on [default]
colvars:     Done initializing cvc base object.
colvars:     Looking for the keyword "reuseComponents" and its value.
colvars:     Keyword "reuseComponents" not found.
colvars:     # reuseComponents =  [default]
colvars:     Looking for the keyword "alchFLambda" and its value.
colvars:     Keyword "alchFLambda" not found.
colvars:     Looking for the keyword "alchLambda" and its value.
colvars:     Keyword "alchLambda" not found.
colvars:     Looking for the keyword "alpha" and its value.
colvars:     Keyword "alpha" not found.
colvars:     Looking for the keyword "angle" and its value.
colvars:     Keyword "angle" not found.
colvars:     Looking for the keyword "aspath" and its value.
colvars:     Keyword "aspath" not found.
colvars:     Looking for the keyword "aspathCV" and its value.
colvars:     Keyword "aspathCV" not found.
colvars:     Looking for the keyword "azpath" and its value.
colvars:     Keyword "azpath" not found.
colvars:     Looking for the keyword "azpathCV" and its value.
colvars:     Keyword "azpathCV" not found.
colvars:     Looking for the keyword "cartesian" and its value.
colvars:     Keyword "cartesian" not found.
colvars:     Looking for the keyword "coordNum" and its value.
colvars:     Keyword "coordNum" not found.
colvars:     Looking for the keyword "customColvar" and its value.
colvars:     Keyword "customColvar" not found.
colvars:     Looking for the keyword "dihedral" and its value.
colvars:     Looking for the keyword "dihedral" and its value.
colvars:     Keyword value = "
colvars:                 name psi_2
colvars:                 group1 {atomNumbers {22}}
colvars:                 group2 {atomNumbers {24}}
colvars:                 group3 {atomNumbers {30}}
colvars:                 group4 {atomNumbers {32}}
colvars:                 scalable off
colvars: ".
colvars:     Looking for the keyword "dihedral" and its value.
colvars:     Keyword "dihedral" not found.
colvars:     DEPS: uninitialized colvar component enabling "active"
colvars:     DEPS: feature "active" in uninitialized colvar component enabled, ref_count = 1.
colvars:     DEPS: uninitialized colvar component enabling "explicit_gradient"
colvars:     explicit_gradient requires exclude scalable_calculation
colvars:     explicit_gradient requires exclude scalable_calculation_of_centers_of_mass
colvars:     DEPS: feature "explicit_gradient" in uninitialized colvar component enabled, ref_count = 1.
colvars:     DEPS: uninitialized colvar component enabling "use_minimum-image_with_PBCs"
colvars:     DEPS: feature "use_minimum-image_with_PBCs" in uninitialized colvar component enabled, ref_count = 1.
colvars:     DEPS: unnamed cvc of type "dihedral" enabling "periodic"
colvars:     DEPS: feature "periodic" in unnamed cvc of type "dihedral" enabled, ref_count = 1.
colvars:     DEPS: unnamed cvc of type "dihedral" enabling "defined_lower_boundary"
colvars:     DEPS: feature "defined_lower_boundary" in unnamed cvc of type "dihedral" enabled, ref_count = 1.
colvars:     DEPS: unnamed cvc of type "dihedral" enabling "defined_upper_boundary"
colvars:     DEPS: feature "defined_upper_boundary" in unnamed cvc of type "dihedral" enabled, ref_count = 1.
colvars:     DEPS: unnamed cvc of type "dihedral" enabling "function_of_centers_of_mass"
colvars:     DEPS: feature "function_of_centers_of_mass" in unnamed cvc of type "dihedral" enabled, ref_count = 1.
colvars:     Initializing cvc base object.
colvars:     Looking for the keyword "name" and its value.
colvars:     Keyword value = "psi_2".
colvars:     Looking for the keyword "name" and its value.
colvars:     Keyword "name" not found.
colvars:     # name = "psi_2"
colvars:     Looking for the keyword "componentCoeff" and its value.
colvars:     Keyword "componentCoeff" not found.
colvars:     # componentCoeff = 1 [default]
colvars:     Looking for the keyword "componentExp" and its value.
colvars:     Keyword "componentExp" not found.
colvars:     # componentExp = 1 [default]
colvars:     Looking for the keyword "period" and its value.
colvars:     Keyword "period" not found.
colvars:     # period = 360 [default]
colvars:     Looking for the keyword "wrapAround" and its value.
colvars:     Keyword "wrapAround" not found.
colvars:     # wrapAround = 0 [default]
colvars:     DEPS: cvc "psi_2" of type "dihedral" enabling "periodic"
colvars:     Looking for the keyword "debugGradients" and its value.
colvars:     Keyword "debugGradients" not found.
colvars:     DEPS: disabling feature "debug_gradient" in cvc "psi_2" of type "dihedral"
colvars:     Looking for the keyword "forceNoPBC" and its value.
colvars:     Keyword "forceNoPBC" not found.
colvars:     # forceNoPBC = off [default]
colvars:     DEPS: cvc "psi_2" of type "dihedral" enabling "use_minimum-image_with_PBCs"
colvars:     Looking for the keyword "scalable" and its value.
colvars:     Keyword value = "off".
colvars:     Looking for the keyword "scalable" and its value.
colvars:     Keyword "scalable" not found.
colvars:     # scalable = off
colvars:     Done initializing cvc base object.
colvars:     Looking for the keyword "group1" and its value.
colvars:     Keyword value = "atomNumbers {22}".
colvars:       Initializing atom group "group1".
colvars:       Looking for the keyword "name" and its value.
colvars:       Keyword "name" not found.
colvars:       # name = "" [default]
colvars:       Looking for the keyword "centerToOrigin" and its value.
colvars:       Keyword "centerToOrigin" not found.
colvars:       # centerToOrigin = off [default]
colvars:       DEPS: disabling feature "center_to_origin" in atom group group1
colvars:       Looking for the keyword "centerReference" and its value.
colvars:       Keyword "centerReference" not found.
colvars:       DEPS: disabling feature "center_to_reference" in atom group group1
colvars:       Looking for the keyword "centerToReference" and its value.
colvars:       Keyword "centerToReference" not found.
colvars:       # centerToReference = off [default]
colvars:       DEPS: disabling feature "center_to_reference" in atom group group1
colvars:       Looking for the keyword "rotateReference" and its value.
colvars:       Keyword "rotateReference" not found.
colvars:       DEPS: disabling feature "rotate_to_origin" in atom group group1
colvars:       Looking for the keyword "rotateToReference" and its value.
colvars:       Keyword "rotateToReference" not found.
colvars:       # rotateToReference = off [default]
colvars:       DEPS: disabling feature "rotate_to_origin" in atom group group1
colvars:       Looking for the keyword "atomsOfGroup" and its value.
colvars:       Keyword "atomsOfGroup" not found.
colvars:       # atomsOfGroup = "" [default]
colvars:       Looking for the keyword "atomNumbers" and its value.
colvars:       Keyword value = "22".
colvars:       Looking for the keyword "atomNumbers" and its value.
colvars:       Keyword "atomNumbers" not found.
colvars:       Looking for the keyword "indexGroup" and its value.
colvars:       Keyword "indexGroup" not found.
colvars:       # indexGroup = "" [default]
colvars:       Looking for the keyword "atomNumbersRange" and its value.
colvars:       Keyword "atomNumbersRange" not found.
colvars:       Looking for the keyword "psfSegID" and its value.
colvars:       Keyword "psfSegID" not found.
colvars:       # psfSegID =  [default]
colvars:       Looking for the keyword "atomNameResidueRange" and its value.
colvars:       Keyword "atomNameResidueRange" not found.
colvars:       Looking for the keyword "atomsFile" and its value.
colvars:       Keyword "atomsFile" not found.
colvars:       # atomsFile = "" [default]
colvars:       Looking for the keyword "dummyAtom" and its value.
colvars:       Keyword "dummyAtom" not found.
colvars:       # dummyAtom = ( 0 , 0 , 0 ) [default]
colvars:       Looking for the keyword "enableForces" and its value.
colvars:       Keyword "enableForces" not found.
colvars:       Looking for the keyword "enableFitGradients" and its value.
colvars:       Keyword "enableFitGradients" not found.
colvars:       # enableFitGradients = on [default]
colvars:       Looking for the keyword "printAtomIDs" and its value.
colvars:       Keyword "printAtomIDs" not found.
colvars:       # printAtomIDs = off [default]
colvars:       Done initializing atom group "group1".
colvars:       Atom group "group1" defined with 1 atoms requested: total mass = 14.007, total charge = -0.47.
colvars:         DEPS: re-enabling children's explicit_atom_gradient
colvars:         DEPS: atom group group1 enabling "explicit_atom_gradient"
colvars:         DEPS: feature "explicit_atom_gradient" in atom group group1 enabled, ref_count = 1.
colvars:       DEPS: cvc "psi_2" of type "dihedral" enabling "explicit_atom_groups"
colvars:       DEPS: feature "explicit_atom_groups" in cvc "psi_2" of type "dihedral" enabled, ref_count = 1.
colvars:       Configuration string for "group1": "
colvars: atomNumbers {22}".
colvars:     Looking for the keyword "group2" and its value.
colvars:     Keyword value = "atomNumbers {24}".
colvars:       Initializing atom group "group2".
colvars:       Looking for the keyword "name" and its value.
colvars:       Keyword "name" not found.
colvars:       # name = "" [default]
colvars:       Looking for the keyword "centerToOrigin" and its value.
colvars:       Keyword "centerToOrigin" not found.
colvars:       # centerToOrigin = off [default]
colvars:       DEPS: disabling feature "center_to_origin" in atom group group2
colvars:       Looking for the keyword "centerReference" and its value.
colvars:       Keyword "centerReference" not found.
colvars:       DEPS: disabling feature "center_to_reference" in atom group group2
colvars:       Looking for the keyword "centerToReference" and its value.
colvars:       Keyword "centerToReference" not found.
colvars:       # centerToReference = off [default]
colvars:       DEPS: disabling feature "center_to_reference" in atom group group2
colvars:       Looking for the keyword "rotateReference" and its value.
colvars:       Keyword "rotateReference" not found.
colvars:       DEPS: disabling feature "rotate_to_origin" in atom group group2
colvars:       Looking for the keyword "rotateToReference" and its value.
colvars:       Keyword "rotateToReference" not found.
colvars:       # rotateToReference = off [default]
colvars:       DEPS: disabling feature "rotate_to_origin" in atom group group2
colvars:       Looking for the keyword "atomsOfGroup" and its value.
colvars:       Keyword "atomsOfGroup" not found.
colvars:       # atomsOfGroup = "" [default]
colvars:       Looking for the keyword "atomNumbers" and its value.
colvars:       Keyword value = "24".
colvars:       Looking for the keyword "atomNumbers" and its value.
colvars:       Keyword "atomNumbers" not found.
colvars:       Looking for the keyword "indexGroup" and its value.
colvars:       Keyword "indexGroup" not found.
colvars:       # indexGroup = "" [default]
colvars:       Looking for the keyword "atomNumbersRange" and its value.
colvars:       Keyword "atomNumbersRange" not found.
colvars:       Looking for the keyword "psfSegID" and its value.
colvars:       Keyword "psfSegID" not found.
colvars:       # psfSegID =  [default]
colvars:       Looking for the keyword "atomNameResidueRange" and its value.
colvars:       Keyword "atomNameResidueRange" not found.
colvars:       Looking for the keyword "atomsFile" and its value.
colvars:       Keyword "atomsFile" not found.
colvars:       # atomsFile = "" [default]
colvars:       Looking for the keyword "dummyAtom" and its value.
colvars:       Keyword "dummyAtom" not found.
colvars:       # dummyAtom = ( 0 , 0 , 0 ) [default]
colvars:       Looking for the keyword "enableForces" and its value.
colvars:       Keyword "enableForces" not found.
colvars:       Looking for the keyword "enableFitGradients" and its value.
colvars:       Keyword "enableFitGradients" not found.
colvars:       # enableFitGradients = on [default]
colvars:       Looking for the keyword "printAtomIDs" and its value.
colvars:       Keyword "printAtomIDs" not found.
colvars:       # printAtomIDs = off [default]
colvars:       Done initializing atom group "group2".
colvars:       Atom group "group2" defined with 1 atoms requested: total mass = 12.011, total charge = 0.07.
colvars:         DEPS: re-enabling children's explicit_atom_gradient
colvars:         DEPS: atom group group2 enabling "explicit_atom_gradient"
colvars:         DEPS: feature "explicit_atom_gradient" in atom group group2 enabled, ref_count = 1.
colvars:       DEPS: cvc "psi_2" of type "dihedral" enabling "explicit_atom_groups"
colvars:       Configuration string for "group2": "
colvars: atomNumbers {24}".
colvars:     Looking for the keyword "group3" and its value.
colvars:     Keyword value = "atomNumbers {30}".
colvars:       Initializing atom group "group3".
colvars:       Looking for the keyword "name" and its value.
colvars:       Keyword "name" not found.
colvars:       # name = "" [default]
colvars:       Looking for the keyword "centerToOrigin" and its value.
colvars:       Keyword "centerToOrigin" not found.
colvars:       # centerToOrigin = off [default]
colvars:       DEPS: disabling feature "center_to_origin" in atom group group3
colvars:       Looking for the keyword "centerReference" and its value.
colvars:       Keyword "centerReference" not found.
colvars:       DEPS: disabling feature "center_to_reference" in atom group group3
colvars:       Looking for the keyword "centerToReference" and its value.
colvars:       Keyword "centerToReference" not found.
colvars:       # centerToReference = off [default]
colvars:       DEPS: disabling feature "center_to_reference" in atom group group3
colvars:       Looking for the keyword "rotateReference" and its value.
colvars:       Keyword "rotateReference" not found.
colvars:       DEPS: disabling feature "rotate_to_origin" in atom group group3
colvars:       Looking for the keyword "rotateToReference" and its value.
colvars:       Keyword "rotateToReference" not found.
colvars:       # rotateToReference = off [default]
colvars:       DEPS: disabling feature "rotate_to_origin" in atom group group3
colvars:       Looking for the keyword "atomsOfGroup" and its value.
colvars:       Keyword "atomsOfGroup" not found.
colvars:       # atomsOfGroup = "" [default]
colvars:       Looking for the keyword "atomNumbers" and its value.
colvars:       Keyword value = "30".
colvars:       Looking for the keyword "atomNumbers" and its value.
colvars:       Keyword "atomNumbers" not found.
colvars:       Looking for the keyword "indexGroup" and its value.
colvars:       Keyword "indexGroup" not found.
colvars:       # indexGroup = "" [default]
colvars:       Looking for the keyword "atomNumbersRange" and its value.
colvars:       Keyword "atomNumbersRange" not found.
colvars:       Looking for the keyword "psfSegID" and its value.
colvars:       Keyword "psfSegID" not found.
colvars:       # psfSegID =  [default]
colvars:       Looking for the keyword "atomNameResidueRange" and its value.
colvars:       Keyword "atomNameResidueRange" not found.
colvars:       Looking for the keyword "atomsFile" and its value.
colvars:       Keyword "atomsFile" not found.
colvars:       # atomsFile = "" [default]
colvars:       Looking for the keyword "dummyAtom" and its value.
colvars:       Keyword "dummyAtom" not found.
colvars:       # dummyAtom = ( 0 , 0 , 0 ) [default]
colvars:       Looking for the keyword "enableForces" and its value.
colvars:       Keyword "enableForces" not found.
colvars:       Looking for the keyword "enableFitGradients" and its value.
colvars:       Keyword "enableFitGradients" not found.
colvars:       # enableFitGradients = on [default]
colvars:       Looking for the keyword "printAtomIDs" and its value.
colvars:       Keyword "printAtomIDs" not found.
colvars:       # printAtomIDs = off [default]
colvars:       Done initializing atom group "group3".
colvars:       Atom group "group3" defined with 1 atoms requested: total mass = 12.011, total charge = 0.51.
colvars:         DEPS: re-enabling children's explicit_atom_gradient
colvars:         DEPS: atom group group3 enabling "explicit_atom_gradient"
colvars:         DEPS: feature "explicit_atom_gradient" in atom group group3 enabled, ref_count = 1.
colvars:       DEPS: cvc "psi_2" of type "dihedral" enabling "explicit_atom_groups"
colvars:       Configuration string for "group3": "
colvars: atomNumbers {30}".
colvars:     Looking for the keyword "group4" and its value.
colvars:     Keyword value = "atomNumbers {32}".
colvars:       Initializing atom group "group4".
colvars:       Looking for the keyword "name" and its value.
colvars:       Keyword "name" not found.
colvars:       # name = "" [default]
colvars:       Looking for the keyword "centerToOrigin" and its value.
colvars:       Keyword "centerToOrigin" not found.
colvars:       # centerToOrigin = off [default]
colvars:       DEPS: disabling feature "center_to_origin" in atom group group4
colvars:       Looking for the keyword "centerReference" and its value.
colvars:       Keyword "centerReference" not found.
colvars:       DEPS: disabling feature "center_to_reference" in atom group group4
colvars:       Looking for the keyword "centerToReference" and its value.
colvars:       Keyword "centerToReference" not found.
colvars:       # centerToReference = off [default]
colvars:       DEPS: disabling feature "center_to_reference" in atom group group4
colvars:       Looking for the keyword "rotateReference" and its value.
colvars:       Keyword "rotateReference" not found.
colvars:       DEPS: disabling feature "rotate_to_origin" in atom group group4
colvars:       Looking for the keyword "rotateToReference" and its value.
colvars:       Keyword "rotateToReference" not found.
colvars:       # rotateToReference = off [default]
colvars:       DEPS: disabling feature "rotate_to_origin" in atom group group4
colvars:       Looking for the keyword "atomsOfGroup" and its value.
colvars:       Keyword "atomsOfGroup" not found.
colvars:       # atomsOfGroup = "" [default]
colvars:       Looking for the keyword "atomNumbers" and its value.
colvars:       Keyword value = "32".
colvars:       Looking for the keyword "atomNumbers" and its value.
colvars:       Keyword "atomNumbers" not found.
colvars:       Looking for the keyword "indexGroup" and its value.
colvars:       Keyword "indexGroup" not found.
colvars:       # indexGroup = "" [default]
colvars:       Looking for the keyword "atomNumbersRange" and its value.
colvars:       Keyword "atomNumbersRange" not found.
colvars:       Looking for the keyword "psfSegID" and its value.
colvars:       Keyword "psfSegID" not found.
colvars:       # psfSegID =  [default]
colvars:       Looking for the keyword "atomNameResidueRange" and its value.
colvars:       Keyword "atomNameResidueRange" not found.
colvars:       Looking for the keyword "atomsFile" and its value.
colvars:       Keyword "atomsFile" not found.
colvars:       # atomsFile = "" [default]
colvars:       Looking for the keyword "dummyAtom" and its value.
colvars:       Keyword "dummyAtom" not found.
colvars:       # dummyAtom = ( 0 , 0 , 0 ) [default]
colvars:       Looking for the keyword "enableForces" and its value.
colvars:       Keyword "enableForces" not found.
colvars:       Looking for the keyword "enableFitGradients" and its value.
colvars:       Keyword "enableFitGradients" not found.
colvars:       # enableFitGradients = on [default]
colvars:       Looking for the keyword "printAtomIDs" and its value.
colvars:       Keyword "printAtomIDs" not found.
colvars:       # printAtomIDs = off [default]
colvars:       Done initializing atom group "group4".
colvars:       Atom group "group4" defined with 1 atoms requested: total mass = 14.007, total charge = -0.47.
colvars:         DEPS: re-enabling children's explicit_atom_gradient
colvars:         DEPS: atom group group4 enabling "explicit_atom_gradient"
colvars:         DEPS: feature "explicit_atom_gradient" in atom group group4 enabled, ref_count = 1.
colvars:       DEPS: cvc "psi_2" of type "dihedral" enabling "explicit_atom_groups"
colvars:       Configuration string for "group4": "
colvars: atomNumbers {32}".
colvars:     Looking for the keyword "oneSiteSystemForce" and its value.
colvars:     Keyword "oneSiteSystemForce" not found.
colvars:     # oneSiteSystemForce = off [default]
colvars:     DEPS: disabling feature "total_force_from_one_group" in cvc "psi_2" of type "dihedral"
colvars:     Looking for the keyword "oneSiteTotalForce" and its value.
colvars:     Keyword "oneSiteTotalForce" not found.
colvars:     # oneSiteTotalForce = off [default]
colvars:     DEPS: disabling feature "total_force_from_one_group" in cvc "psi_2" of type "dihedral"
colvars:     DEPS: cvc "psi_2" of type "dihedral" enabling "gradient"
colvars:     DEPS: feature "gradient" in cvc "psi_2" of type "dihedral" enabled, ref_count = 1.
colvars:     DEPS: cvc "psi_2" of type "dihedral" enabling "active"
colvars:     Looking for the keyword "dihedralPC" and its value.
colvars:     Keyword "dihedralPC" not found.
colvars:     Looking for the keyword "dipoleAngle" and its value.
colvars:     Keyword "dipoleAngle" not found.
colvars:     Looking for the keyword "dipoleMagnitude" and its value.
colvars:     Keyword "dipoleMagnitude" not found.
colvars:     Looking for the keyword "distance" and its value.
colvars:     Keyword "distance" not found.
colvars:     Looking for the keyword "distanceDir" and its value.
colvars:     Keyword "distanceDir" not found.
colvars:     Looking for the keyword "distanceInv" and its value.
colvars:     Keyword "distanceInv" not found.
colvars:     Looking for the keyword "distancePairs" and its value.
colvars:     Keyword "distancePairs" not found.
colvars:     Looking for the keyword "distanceVec" and its value.
colvars:     Keyword "distanceVec" not found.
colvars:     Looking for the keyword "distanceXY" and its value.
colvars:     Keyword "distanceXY" not found.
colvars:     Looking for the keyword "distanceZ" and its value.
colvars:     Keyword "distanceZ" not found.
colvars:     Looking for the keyword "eigenvector" and its value.
colvars:     Keyword "eigenvector" not found.
colvars:     Looking for the keyword "eulerPhi" and its value.
colvars:     Keyword "eulerPhi" not found.
colvars:     Looking for the keyword "eulerPsi" and its value.
colvars:     Keyword "eulerPsi" not found.
colvars:     Looking for the keyword "eulerTheta" and its value.
colvars:     Keyword "eulerTheta" not found.
colvars:     Looking for the keyword "groupCoord" and its value.
colvars:     Keyword "groupCoord" not found.
colvars:     Looking for the keyword "gspath" and its value.
colvars:     Keyword "gspath" not found.
colvars:     Looking for the keyword "gspathCV" and its value.
colvars:     Keyword "gspathCV" not found.
colvars:     Looking for the keyword "gyration" and its value.
colvars:     Keyword "gyration" not found.
colvars:     Looking for the keyword "gzpath" and its value.
colvars:     Keyword "gzpath" not found.
colvars:     Looking for the keyword "gzpathCV" and its value.
colvars:     Keyword "gzpathCV" not found.
colvars:     Looking for the keyword "hBond" and its value.
colvars:     Keyword "hBond" not found.
colvars:     Looking for the keyword "inertia" and its value.
colvars:     Keyword "inertia" not found.
colvars:     Looking for the keyword "inertiaZ" and its value.
colvars:     Keyword "inertiaZ" not found.
colvars:     Looking for the keyword "linearCombination" and its value.
colvars:     Keyword "linearCombination" not found.
colvars:     Looking for the keyword "mapTotal" and its value.
colvars:     Keyword "mapTotal" not found.
colvars:     Looking for the keyword "neuralNetwork" and its value.
colvars:     Keyword "neuralNetwork" not found.
colvars:     Looking for the keyword "orientation" and its value.
colvars:     Keyword "orientation" not found.
colvars:     Looking for the keyword "orientationAngle" and its value.
colvars:     Keyword "orientationAngle" not found.
colvars:     Looking for the keyword "orientationProj" and its value.
colvars:     Keyword "orientationProj" not found.
colvars:     Looking for the keyword "polarPhi" and its value.
colvars:     Keyword "polarPhi" not found.
colvars:     Looking for the keyword "polarTheta" and its value.
colvars:     Keyword "polarTheta" not found.
colvars:     Looking for the keyword "rmsd" and its value.
colvars:     Keyword "rmsd" not found.
colvars:     Looking for the keyword "selfCoordNum" and its value.
colvars:     Keyword "selfCoordNum" not found.
colvars:     Looking for the keyword "spinAngle" and its value.
colvars:     Keyword "spinAngle" not found.
colvars:     Looking for the keyword "tilt" and its value.
colvars:     Keyword "tilt" not found.
colvars:     Enable explicit gradient in 005
colvars:     Looking for the keyword "customFunction" and its value.
colvars:     Keyword value = "sin(psi_2/180.0*3.1415926535897)".
colvars:     This colvar uses a custom function.
colvars:     Parsing expression "sin(psi_2/180.0*3.1415926535897)".
colvars:     Looking for the keyword "customFunction" and its value.
colvars:     Keyword "customFunction" not found.
colvars:     DEPS: cvc "005" of type "customColvar" enabling "gradient"
colvars:     DEPS: feature "gradient" in cvc "005" of type "customColvar" enabled, ref_count = 1.
colvars:     DEPS: cvc "005" of type "customColvar" enabling "active"
colvars:     DEPS: uninitialized colvar component enabling "active"
colvars:     DEPS: feature "active" in uninitialized colvar component enabled, ref_count = 1.
colvars:     DEPS: uninitialized colvar component enabling "explicit_gradient"
colvars:     explicit_gradient requires exclude scalable_calculation
colvars:     explicit_gradient requires exclude scalable_calculation_of_centers_of_mass
colvars:     DEPS: feature "explicit_gradient" in uninitialized colvar component enabled, ref_count = 1.
colvars:     DEPS: uninitialized colvar component enabling "use_minimum-image_with_PBCs"
colvars:     DEPS: feature "use_minimum-image_with_PBCs" in uninitialized colvar component enabled, ref_count = 1.
colvars:     Warning: cannot cite unknown feature "customColvar colvar component (derived from linearCombination)"
colvars:     Initializing cvc base object.
colvars:     Looking for the keyword "name" and its value.
colvars:     Keyword value = "006".
colvars:     Looking for the keyword "name" and its value.
colvars:     Keyword "name" not found.
colvars:     # name = "006"
colvars:     Looking for the keyword "componentCoeff" and its value.
colvars:     Keyword "componentCoeff" not found.
colvars:     # componentCoeff = 1 [default]
colvars:     Looking for the keyword "componentExp" and its value.
colvars:     Keyword "componentExp" not found.
colvars:     # componentExp = 1 [default]
colvars:     Looking for the keyword "period" and its value.
colvars:     Keyword "period" not found.
colvars:     # period = 0 [default]
colvars:     Looking for the keyword "wrapAround" and its value.
colvars:     Keyword "wrapAround" not found.
colvars:     # wrapAround = 0 [default]
colvars:     Looking for the keyword "debugGradients" and its value.
colvars:     Keyword "debugGradients" not found.
colvars:     DEPS: disabling feature "debug_gradient" in cvc "006" of type "customColvar"
colvars:     Looking for the keyword "forceNoPBC" and its value.
colvars:     Keyword "forceNoPBC" not found.
colvars:     # forceNoPBC = off [default]
colvars:     DEPS: cvc "006" of type "customColvar" enabling "use_minimum-image_with_PBCs"
colvars:     Looking for the keyword "scalable" and its value.
colvars:     Keyword "scalable" not found.
colvars:     # scalable = on [default]
colvars:     Done initializing cvc base object.
colvars:     Looking for the keyword "reuseComponents" and its value.
colvars:     Keyword "reuseComponents" not found.
colvars:     # reuseComponents =  [default]
colvars:     Looking for the keyword "alchFLambda" and its value.
colvars:     Keyword "alchFLambda" not found.
colvars:     Looking for the keyword "alchLambda" and its value.
colvars:     Keyword "alchLambda" not found.
colvars:     Looking for the keyword "alpha" and its value.
colvars:     Keyword "alpha" not found.
colvars:     Looking for the keyword "angle" and its value.
colvars:     Keyword "angle" not found.
colvars:     Looking for the keyword "aspath" and its value.
colvars:     Keyword "aspath" not found.
colvars:     Looking for the keyword "aspathCV" and its value.
colvars:     Keyword "aspathCV" not found.
colvars:     Looking for the keyword "azpath" and its value.
colvars:     Keyword "azpath" not found.
colvars:     Looking for the keyword "azpathCV" and its value.
colvars:     Keyword "azpathCV" not found.
colvars:     Looking for the keyword "cartesian" and its value.
colvars:     Keyword "cartesian" not found.
colvars:     Looking for the keyword "coordNum" and its value.
colvars:     Keyword "coordNum" not found.
colvars:     Looking for the keyword "customColvar" and its value.
colvars:     Keyword "customColvar" not found.
colvars:     Looking for the keyword "dihedral" and its value.
colvars:     Looking for the keyword "dihedral" and its value.
colvars:     Keyword value = "
colvars:                 name psi_3
colvars:                 group1 {atomNumbers {32}}
colvars:                 group2 {atomNumbers {34}}
colvars:                 group3 {atomNumbers {40}}
colvars:                 group4 {atomNumbers {42}}
colvars:                 scalable off
colvars: ".
colvars:     Looking for the keyword "dihedral" and its value.
colvars:     Keyword "dihedral" not found.
colvars:     DEPS: uninitialized colvar component enabling "active"
colvars:     DEPS: feature "active" in uninitialized colvar component enabled, ref_count = 1.
colvars:     DEPS: uninitialized colvar component enabling "explicit_gradient"
colvars:     explicit_gradient requires exclude scalable_calculation
colvars:     explicit_gradient requires exclude scalable_calculation_of_centers_of_mass
colvars:     DEPS: feature "explicit_gradient" in uninitialized colvar component enabled, ref_count = 1.
colvars:     DEPS: uninitialized colvar component enabling "use_minimum-image_with_PBCs"
colvars:     DEPS: feature "use_minimum-image_with_PBCs" in uninitialized colvar component enabled, ref_count = 1.
colvars:     DEPS: unnamed cvc of type "dihedral" enabling "periodic"
colvars:     DEPS: feature "periodic" in unnamed cvc of type "dihedral" enabled, ref_count = 1.
colvars:     DEPS: unnamed cvc of type "dihedral" enabling "defined_lower_boundary"
colvars:     DEPS: feature "defined_lower_boundary" in unnamed cvc of type "dihedral" enabled, ref_count = 1.
colvars:     DEPS: unnamed cvc of type "dihedral" enabling "defined_upper_boundary"
colvars:     DEPS: feature "defined_upper_boundary" in unnamed cvc of type "dihedral" enabled, ref_count = 1.
colvars:     DEPS: unnamed cvc of type "dihedral" enabling "function_of_centers_of_mass"
colvars:     DEPS: feature "function_of_centers_of_mass" in unnamed cvc of type "dihedral" enabled, ref_count = 1.
colvars:     Initializing cvc base object.
colvars:     Looking for the keyword "name" and its value.
colvars:     Keyword value = "psi_3".
colvars:     Looking for the keyword "name" and its value.
colvars:     Keyword "name" not found.
colvars:     # name = "psi_3"
colvars:     Looking for the keyword "componentCoeff" and its value.
colvars:     Keyword "componentCoeff" not found.
colvars:     # componentCoeff = 1 [default]
colvars:     Looking for the keyword "componentExp" and its value.
colvars:     Keyword "componentExp" not found.
colvars:     # componentExp = 1 [default]
colvars:     Looking for the keyword "period" and its value.
colvars:     Keyword "period" not found.
colvars:     # period = 360 [default]
colvars:     Looking for the keyword "wrapAround" and its value.
colvars:     Keyword "wrapAround" not found.
colvars:     # wrapAround = 0 [default]
colvars:     DEPS: cvc "psi_3" of type "dihedral" enabling "periodic"
colvars:     Looking for the keyword "debugGradients" and its value.
colvars:     Keyword "debugGradients" not found.
colvars:     DEPS: disabling feature "debug_gradient" in cvc "psi_3" of type "dihedral"
colvars:     Looking for the keyword "forceNoPBC" and its value.
colvars:     Keyword "forceNoPBC" not found.
colvars:     # forceNoPBC = off [default]
colvars:     DEPS: cvc "psi_3" of type "dihedral" enabling "use_minimum-image_with_PBCs"
colvars:     Looking for the keyword "scalable" and its value.
colvars:     Keyword value = "off".
colvars:     Looking for the keyword "scalable" and its value.
colvars:     Keyword "scalable" not found.
colvars:     # scalable = off
colvars:     Done initializing cvc base object.
colvars:     Looking for the keyword "group1" and its value.
colvars:     Keyword value = "atomNumbers {32}".
colvars:       Initializing atom group "group1".
colvars:       Looking for the keyword "name" and its value.
colvars:       Keyword "name" not found.
colvars:       # name = "" [default]
colvars:       Looking for the keyword "centerToOrigin" and its value.
colvars:       Keyword "centerToOrigin" not found.
colvars:       # centerToOrigin = off [default]
colvars:       DEPS: disabling feature "center_to_origin" in atom group group1
colvars:       Looking for the keyword "centerReference" and its value.
colvars:       Keyword "centerReference" not found.
colvars:       DEPS: disabling feature "center_to_reference" in atom group group1
colvars:       Looking for the keyword "centerToReference" and its value.
colvars:       Keyword "centerToReference" not found.
colvars:       # centerToReference = off [default]
colvars:       DEPS: disabling feature "center_to_reference" in atom group group1
colvars:       Looking for the keyword "rotateReference" and its value.
colvars:       Keyword "rotateReference" not found.
colvars:       DEPS: disabling feature "rotate_to_origin" in atom group group1
colvars:       Looking for the keyword "rotateToReference" and its value.
colvars:       Keyword "rotateToReference" not found.
colvars:       # rotateToReference = off [default]
colvars:       DEPS: disabling feature "rotate_to_origin" in atom group group1
colvars:       Looking for the keyword "atomsOfGroup" and its value.
colvars:       Keyword "atomsOfGroup" not found.
colvars:       # atomsOfGroup = "" [default]
colvars:       Looking for the keyword "atomNumbers" and its value.
colvars:       Keyword value = "32".
colvars:       Looking for the keyword "atomNumbers" and its value.
colvars:       Keyword "atomNumbers" not found.
colvars:       Looking for the keyword "indexGroup" and its value.
colvars:       Keyword "indexGroup" not found.
colvars:       # indexGroup = "" [default]
colvars:       Looking for the keyword "atomNumbersRange" and its value.
colvars:       Keyword "atomNumbersRange" not found.
colvars:       Looking for the keyword "psfSegID" and its value.
colvars:       Keyword "psfSegID" not found.
colvars:       # psfSegID =  [default]
colvars:       Looking for the keyword "atomNameResidueRange" and its value.
colvars:       Keyword "atomNameResidueRange" not found.
colvars:       Looking for the keyword "atomsFile" and its value.
colvars:       Keyword "atomsFile" not found.
colvars:       # atomsFile = "" [default]
colvars:       Looking for the keyword "dummyAtom" and its value.
colvars:       Keyword "dummyAtom" not found.
colvars:       # dummyAtom = ( 0 , 0 , 0 ) [default]
colvars:       Looking for the keyword "enableForces" and its value.
colvars:       Keyword "enableForces" not found.
colvars:       Looking for the keyword "enableFitGradients" and its value.
colvars:       Keyword "enableFitGradients" not found.
colvars:       # enableFitGradients = on [default]
colvars:       Looking for the keyword "printAtomIDs" and its value.
colvars:       Keyword "printAtomIDs" not found.
colvars:       # printAtomIDs = off [default]
colvars:       Done initializing atom group "group1".
colvars:       Atom group "group1" defined with 1 atoms requested: total mass = 14.007, total charge = -0.47.
colvars:         DEPS: re-enabling children's explicit_atom_gradient
colvars:         DEPS: atom group group1 enabling "explicit_atom_gradient"
colvars:         DEPS: feature "explicit_atom_gradient" in atom group group1 enabled, ref_count = 1.
colvars:       DEPS: cvc "psi_3" of type "dihedral" enabling "explicit_atom_groups"
colvars:       DEPS: feature "explicit_atom_groups" in cvc "psi_3" of type "dihedral" enabled, ref_count = 1.
colvars:       Configuration string for "group1": "
colvars: atomNumbers {32}".
colvars:     Looking for the keyword "group2" and its value.
colvars:     Keyword value = "atomNumbers {34}".
colvars:       Initializing atom group "group2".
colvars:       Looking for the keyword "name" and its value.
colvars:       Keyword "name" not found.
colvars:       # name = "" [default]
colvars:       Looking for the keyword "centerToOrigin" and its value.
colvars:       Keyword "centerToOrigin" not found.
colvars:       # centerToOrigin = off [default]
colvars:       DEPS: disabling feature "center_to_origin" in atom group group2
colvars:       Looking for the keyword "centerReference" and its value.
colvars:       Keyword "centerReference" not found.
colvars:       DEPS: disabling feature "center_to_reference" in atom group group2
colvars:       Looking for the keyword "centerToReference" and its value.
colvars:       Keyword "centerToReference" not found.
colvars:       # centerToReference = off [default]
colvars:       DEPS: disabling feature "center_to_reference" in atom group group2
colvars:       Looking for the keyword "rotateReference" and its value.
colvars:       Keyword "rotateReference" not found.
colvars:       DEPS: disabling feature "rotate_to_origin" in atom group group2
colvars:       Looking for the keyword "rotateToReference" and its value.
colvars:       Keyword "rotateToReference" not found.
colvars:       # rotateToReference = off [default]
colvars:       DEPS: disabling feature "rotate_to_origin" in atom group group2
colvars:       Looking for the keyword "atomsOfGroup" and its value.
colvars:       Keyword "atomsOfGroup" not found.
colvars:       # atomsOfGroup = "" [default]
colvars:       Looking for the keyword "atomNumbers" and its value.
colvars:       Keyword value = "34".
colvars:       Looking for the keyword "atomNumbers" and its value.
colvars:       Keyword "atomNumbers" not found.
colvars:       Looking for the keyword "indexGroup" and its value.
colvars:       Keyword "indexGroup" not found.
colvars:       # indexGroup = "" [default]
colvars:       Looking for the keyword "atomNumbersRange" and its value.
colvars:       Keyword "atomNumbersRange" not found.
colvars:       Looking for the keyword "psfSegID" and its value.
colvars:       Keyword "psfSegID" not found.
colvars:       # psfSegID =  [default]
colvars:       Looking for the keyword "atomNameResidueRange" and its value.
colvars:       Keyword "atomNameResidueRange" not found.
colvars:       Looking for the keyword "atomsFile" and its value.
colvars:       Keyword "atomsFile" not found.
colvars:       # atomsFile = "" [default]
colvars:       Looking for the keyword "dummyAtom" and its value.
colvars:       Keyword "dummyAtom" not found.
colvars:       # dummyAtom = ( 0 , 0 , 0 ) [default]
colvars:       Looking for the keyword "enableForces" and its value.
colvars:       Keyword "enableForces" not found.
colvars:       Looking for the keyword "enableFitGradients" and its value.
colvars:       Keyword "enableFitGradients" not found.
colvars:       # enableFitGradients = on [default]
colvars:       Looking for the keyword "printAtomIDs" and its value.
colvars:       Keyword "printAtomIDs" not found.
colvars:       # printAtomIDs = off [default]
colvars:       Done initializing atom group "group2".
colvars:       Atom group "group2" defined with 1 atoms requested: total mass = 12.011, total charge = 0.07.
colvars:         DEPS: re-enabling children's explicit_atom_gradient
colvars:         DEPS: atom group group2 enabling "explicit_atom_gradient"
colvars:         DEPS: feature "explicit_atom_gradient" in atom group group2 enabled, ref_count = 1.
colvars:       DEPS: cvc "psi_3" of type "dihedral" enabling "explicit_atom_groups"
colvars:       Configuration string for "group2": "
colvars: atomNumbers {34}".
colvars:     Looking for the keyword "group3" and its value.
colvars:     Keyword value = "atomNumbers {40}".
colvars:       Initializing atom group "group3".
colvars:       Looking for the keyword "name" and its value.
colvars:       Keyword "name" not found.
colvars:       # name = "" [default]
colvars:       Looking for the keyword "centerToOrigin" and its value.
colvars:       Keyword "centerToOrigin" not found.
colvars:       # centerToOrigin = off [default]
colvars:       DEPS: disabling feature "center_to_origin" in atom group group3
colvars:       Looking for the keyword "centerReference" and its value.
colvars:       Keyword "centerReference" not found.
colvars:       DEPS: disabling feature "center_to_reference" in atom group group3
colvars:       Looking for the keyword "centerToReference" and its value.
colvars:       Keyword "centerToReference" not found.
colvars:       # centerToReference = off [default]
colvars:       DEPS: disabling feature "center_to_reference" in atom group group3
colvars:       Looking for the keyword "rotateReference" and its value.
colvars:       Keyword "rotateReference" not found.
colvars:       DEPS: disabling feature "rotate_to_origin" in atom group group3
colvars:       Looking for the keyword "rotateToReference" and its value.
colvars:       Keyword "rotateToReference" not found.
colvars:       # rotateToReference = off [default]
colvars:       DEPS: disabling feature "rotate_to_origin" in atom group group3
colvars:       Looking for the keyword "atomsOfGroup" and its value.
colvars:       Keyword "atomsOfGroup" not found.
colvars:       # atomsOfGroup = "" [default]
colvars:       Looking for the keyword "atomNumbers" and its value.
colvars:       Keyword value = "40".
colvars:       Looking for the keyword "atomNumbers" and its value.
colvars:       Keyword "atomNumbers" not found.
colvars:       Looking for the keyword "indexGroup" and its value.
colvars:       Keyword "indexGroup" not found.
colvars:       # indexGroup = "" [default]
colvars:       Looking for the keyword "atomNumbersRange" and its value.
colvars:       Keyword "atomNumbersRange" not found.
colvars:       Looking for the keyword "psfSegID" and its value.
colvars:       Keyword "psfSegID" not found.
colvars:       # psfSegID =  [default]
colvars:       Looking for the keyword "atomNameResidueRange" and its value.
colvars:       Keyword "atomNameResidueRange" not found.
colvars:       Looking for the keyword "atomsFile" and its value.
colvars:       Keyword "atomsFile" not found.
colvars:       # atomsFile = "" [default]
colvars:       Looking for the keyword "dummyAtom" and its value.
colvars:       Keyword "dummyAtom" not found.
colvars:       # dummyAtom = ( 0 , 0 , 0 ) [default]
colvars:       Looking for the keyword "enableForces" and its value.
colvars:       Keyword "enableForces" not found.
colvars:       Looking for the keyword "enableFitGradients" and its value.
colvars:       Keyword "enableFitGradients" not found.
colvars:       # enableFitGradients = on [default]
colvars:       Looking for the keyword "printAtomIDs" and its value.
colvars:       Keyword "printAtomIDs" not found.
colvars:       # printAtomIDs = off [default]
colvars:       Done initializing atom group "group3".
colvars:       Atom group "group3" defined with 1 atoms requested: total mass = 12.011, total charge = 0.51.
colvars:         DEPS: re-enabling children's explicit_atom_gradient
colvars:         DEPS: atom group group3 enabling "explicit_atom_gradient"
colvars:         DEPS: feature "explicit_atom_gradient" in atom group group3 enabled, ref_count = 1.
colvars:       DEPS: cvc "psi_3" of type "dihedral" enabling "explicit_atom_groups"
colvars:       Configuration string for "group3": "
colvars: atomNumbers {40}".
colvars:     Looking for the keyword "group4" and its value.
colvars:     Keyword value = "atomNumbers {42}".
colvars:       Initializing atom group "group4".
colvars:       Looking for the keyword "name" and its value.
colvars:       Keyword "name" not found.
colvars:       # name = "" [default]
colvars:       Looking for the keyword "centerToOrigin" and its value.
colvars:       Keyword "centerToOrigin" not found.
colvars:       # centerToOrigin = off [default]
colvars:       DEPS: disabling feature "center_to_origin" in atom group group4
colvars:       Looking for the keyword "centerReference" and its value.
colvars:       Keyword "centerReference" not found.
colvars:       DEPS: disabling feature "center_to_reference" in atom group group4
colvars:       Looking for the keyword "centerToReference" and its value.
colvars:       Keyword "centerToReference" not found.
colvars:       # centerToReference = off [default]
colvars:       DEPS: disabling feature "center_to_reference" in atom group group4
colvars:       Looking for the keyword "rotateReference" and its value.
colvars:       Keyword "rotateReference" not found.
colvars:       DEPS: disabling feature "rotate_to_origin" in atom group group4
colvars:       Looking for the keyword "rotateToReference" and its value.
colvars:       Keyword "rotateToReference" not found.
colvars:       # rotateToReference = off [default]
colvars:       DEPS: disabling feature "rotate_to_origin" in atom group group4
colvars:       Looking for the keyword "atomsOfGroup" and its value.
colvars:       Keyword "atomsOfGroup" not found.
colvars:       # atomsOfGroup = "" [default]
colvars:       Looking for the keyword "atomNumbers" and its value.
colvars:       Keyword value = "42".
colvars:       Adding atom 42 for collective variables calculation.
colvars:       Looking for the keyword "atomNumbers" and its value.
colvars:       Keyword "atomNumbers" not found.
colvars:       Looking for the keyword "indexGroup" and its value.
colvars:       Keyword "indexGroup" not found.
colvars:       # indexGroup = "" [default]
colvars:       Looking for the keyword "atomNumbersRange" and its value.
colvars:       Keyword "atomNumbersRange" not found.
colvars:       Looking for the keyword "psfSegID" and its value.
colvars:       Keyword "psfSegID" not found.
colvars:       # psfSegID =  [default]
colvars:       Looking for the keyword "atomNameResidueRange" and its value.
colvars:       Keyword "atomNameResidueRange" not found.
colvars:       Looking for the keyword "atomsFile" and its value.
colvars:       Keyword "atomsFile" not found.
colvars:       # atomsFile = "" [default]
colvars:       Looking for the keyword "dummyAtom" and its value.
colvars:       Keyword "dummyAtom" not found.
colvars:       # dummyAtom = ( 0 , 0 , 0 ) [default]
colvars:       Looking for the keyword "enableForces" and its value.
colvars:       Keyword "enableForces" not found.
colvars:       Looking for the keyword "enableFitGradients" and its value.
colvars:       Keyword "enableFitGradients" not found.
colvars:       # enableFitGradients = on [default]
colvars:       Looking for the keyword "printAtomIDs" and its value.
colvars:       Keyword "printAtomIDs" not found.
colvars:       # printAtomIDs = off [default]
colvars:       Done initializing atom group "group4".
colvars:       Atom group "group4" defined with 1 atoms requested: total mass = 14.007, total charge = -0.47.
colvars:         DEPS: re-enabling children's explicit_atom_gradient
colvars:         DEPS: atom group group4 enabling "explicit_atom_gradient"
colvars:         DEPS: feature "explicit_atom_gradient" in atom group group4 enabled, ref_count = 1.
colvars:       DEPS: cvc "psi_3" of type "dihedral" enabling "explicit_atom_groups"
colvars:       Configuration string for "group4": "
colvars: atomNumbers {42}".
colvars:     Looking for the keyword "oneSiteSystemForce" and its value.
colvars:     Keyword "oneSiteSystemForce" not found.
colvars:     # oneSiteSystemForce = off [default]
colvars:     DEPS: disabling feature "total_force_from_one_group" in cvc "psi_3" of type "dihedral"
colvars:     Looking for the keyword "oneSiteTotalForce" and its value.
colvars:     Keyword "oneSiteTotalForce" not found.
colvars:     # oneSiteTotalForce = off [default]
colvars:     DEPS: disabling feature "total_force_from_one_group" in cvc "psi_3" of type "dihedral"
colvars:     DEPS: cvc "psi_3" of type "dihedral" enabling "gradient"
colvars:     DEPS: feature "gradient" in cvc "psi_3" of type "dihedral" enabled, ref_count = 1.
colvars:     DEPS: cvc "psi_3" of type "dihedral" enabling "active"
colvars:     Looking for the keyword "dihedralPC" and its value.
colvars:     Keyword "dihedralPC" not found.
colvars:     Looking for the keyword "dipoleAngle" and its value.
colvars:     Keyword "dipoleAngle" not found.
colvars:     Looking for the keyword "dipoleMagnitude" and its value.
colvars:     Keyword "dipoleMagnitude" not found.
colvars:     Looking for the keyword "distance" and its value.
colvars:     Keyword "distance" not found.
colvars:     Looking for the keyword "distanceDir" and its value.
colvars:     Keyword "distanceDir" not found.
colvars:     Looking for the keyword "distanceInv" and its value.
colvars:     Keyword "distanceInv" not found.
colvars:     Looking for the keyword "distancePairs" and its value.
colvars:     Keyword "distancePairs" not found.
colvars:     Looking for the keyword "distanceVec" and its value.
colvars:     Keyword "distanceVec" not found.
colvars:     Looking for the keyword "distanceXY" and its value.
colvars:     Keyword "distanceXY" not found.
colvars:     Looking for the keyword "distanceZ" and its value.
colvars:     Keyword "distanceZ" not found.
colvars:     Looking for the keyword "eigenvector" and its value.
colvars:     Keyword "eigenvector" not found.
colvars:     Looking for the keyword "eulerPhi" and its value.
colvars:     Keyword "eulerPhi" not found.
colvars:     Looking for the keyword "eulerPsi" and its value.
colvars:     Keyword "eulerPsi" not found.
colvars:     Looking for the keyword "eulerTheta" and its value.
colvars:     Keyword "eulerTheta" not found.
colvars:     Looking for the keyword "groupCoord" and its value.
colvars:     Keyword "groupCoord" not found.
colvars:     Looking for the keyword "gspath" and its value.
colvars:     Keyword "gspath" not found.
colvars:     Looking for the keyword "gspathCV" and its value.
colvars:     Keyword "gspathCV" not found.
colvars:     Looking for the keyword "gyration" and its value.
colvars:     Keyword "gyration" not found.
colvars:     Looking for the keyword "gzpath" and its value.
colvars:     Keyword "gzpath" not found.
colvars:     Looking for the keyword "gzpathCV" and its value.
colvars:     Keyword "gzpathCV" not found.
colvars:     Looking for the keyword "hBond" and its value.
colvars:     Keyword "hBond" not found.
colvars:     Looking for the keyword "inertia" and its value.
colvars:     Keyword "inertia" not found.
colvars:     Looking for the keyword "inertiaZ" and its value.
colvars:     Keyword "inertiaZ" not found.
colvars:     Looking for the keyword "linearCombination" and its value.
colvars:     Keyword "linearCombination" not found.
colvars:     Looking for the keyword "mapTotal" and its value.
colvars:     Keyword "mapTotal" not found.
colvars:     Looking for the keyword "neuralNetwork" and its value.
colvars:     Keyword "neuralNetwork" not found.
colvars:     Looking for the keyword "orientation" and its value.
colvars:     Keyword "orientation" not found.
colvars:     Looking for the keyword "orientationAngle" and its value.
colvars:     Keyword "orientationAngle" not found.
colvars:     Looking for the keyword "orientationProj" and its value.
colvars:     Keyword "orientationProj" not found.
colvars:     Looking for the keyword "polarPhi" and its value.
colvars:     Keyword "polarPhi" not found.
colvars:     Looking for the keyword "polarTheta" and its value.
colvars:     Keyword "polarTheta" not found.
colvars:     Looking for the keyword "rmsd" and its value.
colvars:     Keyword "rmsd" not found.
colvars:     Looking for the keyword "selfCoordNum" and its value.
colvars:     Keyword "selfCoordNum" not found.
colvars:     Looking for the keyword "spinAngle" and its value.
colvars:     Keyword "spinAngle" not found.
colvars:     Looking for the keyword "tilt" and its value.
colvars:     Keyword "tilt" not found.
colvars:     Enable explicit gradient in 006
colvars:     Looking for the keyword "customFunction" and its value.
colvars:     Keyword value = "sin(psi_3/180.0*3.1415926535897)".
colvars:     This colvar uses a custom function.
colvars:     Parsing expression "sin(psi_3/180.0*3.1415926535897)".
colvars:     Looking for the keyword "customFunction" and its value.
colvars:     Keyword "customFunction" not found.
colvars:     DEPS: cvc "006" of type "customColvar" enabling "gradient"
colvars:     DEPS: feature "gradient" in cvc "006" of type "customColvar" enabled, ref_count = 1.
colvars:     DEPS: cvc "006" of type "customColvar" enabling "active"
colvars:     Looking for the keyword "dihedral" and its value.
colvars:     Keyword "dihedral" not found.
colvars:     Looking for the keyword "dihedralPC" and its value.
colvars:     Keyword "dihedralPC" not found.
colvars:     Looking for the keyword "dipoleAngle" and its value.
colvars:     Keyword "dipoleAngle" not found.
colvars:     Looking for the keyword "dipoleMagnitude" and its value.
colvars:     Keyword "dipoleMagnitude" not found.
colvars:     Looking for the keyword "distance" and its value.
colvars:     Keyword "distance" not found.
colvars:     Looking for the keyword "distanceDir" and its value.
colvars:     Keyword "distanceDir" not found.
colvars:     Looking for the keyword "distanceInv" and its value.
colvars:     Keyword "distanceInv" not found.
colvars:     Looking for the keyword "distancePairs" and its value.
colvars:     Keyword "distancePairs" not found.
colvars:     Looking for the keyword "distanceVec" and its value.
colvars:     Keyword "distanceVec" not found.
colvars:     Looking for the keyword "distanceXY" and its value.
colvars:     Keyword "distanceXY" not found.
colvars:     Looking for the keyword "distanceZ" and its value.
colvars:     Keyword "distanceZ" not found.
colvars:     Looking for the keyword "eigenvector" and its value.
colvars:     Keyword "eigenvector" not found.
colvars:     Looking for the keyword "eulerPhi" and its value.
colvars:     Keyword "eulerPhi" not found.
colvars:     Looking for the keyword "eulerPsi" and its value.
colvars:     Keyword "eulerPsi" not found.
colvars:     Looking for the keyword "eulerTheta" and its value.
colvars:     Keyword "eulerTheta" not found.
colvars:     Looking for the keyword "groupCoord" and its value.
colvars:     Keyword "groupCoord" not found.
colvars:     Looking for the keyword "gspath" and its value.
colvars:     Keyword "gspath" not found.
colvars:     Looking for the keyword "gspathCV" and its value.
colvars:     Keyword "gspathCV" not found.
colvars:     Looking for the keyword "gyration" and its value.
colvars:     Keyword "gyration" not found.
colvars:     Looking for the keyword "gzpath" and its value.
colvars:     Keyword "gzpath" not found.
colvars:     Looking for the keyword "gzpathCV" and its value.
colvars:     Keyword "gzpathCV" not found.
colvars:     Looking for the keyword "hBond" and its value.
colvars:     Keyword "hBond" not found.
colvars:     Looking for the keyword "inertia" and its value.
colvars:     Keyword "inertia" not found.
colvars:     Looking for the keyword "inertiaZ" and its value.
colvars:     Keyword "inertiaZ" not found.
colvars:     Looking for the keyword "linearCombination" and its value.
colvars:     Keyword "linearCombination" not found.
colvars:     Looking for the keyword "mapTotal" and its value.
colvars:     Keyword "mapTotal" not found.
colvars:     Looking for the keyword "neuralNetwork" and its value.
colvars:     Keyword "neuralNetwork" not found.
colvars:     Looking for the keyword "orientation" and its value.
colvars:     Keyword "orientation" not found.
colvars:     Looking for the keyword "orientationAngle" and its value.
colvars:     Keyword "orientationAngle" not found.
colvars:     Looking for the keyword "orientationProj" and its value.
colvars:     Keyword "orientationProj" not found.
colvars:     Looking for the keyword "polarPhi" and its value.
colvars:     Keyword "polarPhi" not found.
colvars:     Looking for the keyword "polarTheta" and its value.
colvars:     Keyword "polarTheta" not found.
colvars:     Looking for the keyword "rmsd" and its value.
colvars:     Keyword "rmsd" not found.
colvars:     Looking for the keyword "selfCoordNum" and its value.
colvars:     Keyword "selfCoordNum" not found.
colvars:     Looking for the keyword "spinAngle" and its value.
colvars:     Keyword "spinAngle" not found.
colvars:     Looking for the keyword "tilt" and its value.
colvars:     Keyword "tilt" not found.
colvars:     Enable explicit gradient in neuralNetwork0001
colvars:     Looking for the keyword "output_component" and its value.
colvars:     Keyword value = "0".
colvars:     Looking for the keyword "output_component" and its value.
colvars:     Keyword "output_component" not found.
colvars:     # output_component = 0
colvars:     Looking for the keyword "layer1_WeightsFile" and its value.
colvars:     Looking for the keyword "layer1_WeightsFile" and its value.
colvars:     Keyword value = "dense_weights.txt".
colvars:     Looking for the keyword "layer1_WeightsFile" and its value.
colvars:     Keyword "layer1_WeightsFile" not found.
colvars:     # layer1_WeightsFile = "dense_weights.txt"
colvars:     Will read layer[1] weights from dense_weights.txt
colvars:     Looking for the keyword "layer2_WeightsFile" and its value.
colvars:     Looking for the keyword "layer2_WeightsFile" and its value.
colvars:     Keyword value = "dense_1_weights.txt".
colvars:     Looking for the keyword "layer2_WeightsFile" and its value.
colvars:     Keyword "layer2_WeightsFile" not found.
colvars:     # layer2_WeightsFile = "dense_1_weights.txt"
colvars:     Will read layer[2] weights from dense_1_weights.txt
colvars:     Looking for the keyword "layer3_WeightsFile" and its value.
colvars:     Keyword "layer3_WeightsFile" not found.
colvars:     Looking for the keyword "layer1_BiasesFile" and its value.
colvars:     Looking for the keyword "layer1_BiasesFile" and its value.
colvars:     Keyword value = "dense_biases.txt".
colvars:     Looking for the keyword "layer1_BiasesFile" and its value.
colvars:     Keyword "layer1_BiasesFile" not found.
colvars:     # layer1_BiasesFile = "dense_biases.txt"
colvars:     Will read layer[1] biases from dense_biases.txt
colvars:     Looking for the keyword "layer2_BiasesFile" and its value.
colvars:     Looking for the keyword "layer2_BiasesFile" and its value.
colvars:     Keyword value = "dense_1_biases.txt".
colvars:     Looking for the keyword "layer2_BiasesFile" and its value.
colvars:     Keyword "layer2_BiasesFile" not found.
colvars:     # layer2_BiasesFile = "dense_1_biases.txt"
colvars:     Will read layer[2] biases from dense_1_biases.txt
colvars:     Looking for the keyword "layer3_BiasesFile" and its value.
colvars:     Keyword "layer3_BiasesFile" not found.
colvars:     Looking for the keyword "layer1_activation" and its value.
colvars:     Looking for the keyword "layer1_activation" and its value.
colvars:     Keyword value = "tanh".
colvars:     Looking for the keyword "layer1_activation" and its value.
colvars:     Keyword "layer1_activation" not found.
colvars:     # layer1_activation = "tanh"
colvars:     The activation function for layer[1] is tanh
colvars:     Looking for the keyword "layer2_activation" and its value.
colvars:     Looking for the keyword "layer2_activation" and its value.
colvars:     Keyword value = "tanh".
colvars:     Looking for the keyword "layer2_activation" and its value.
colvars:     Keyword "layer2_activation" not found.
colvars:     # layer2_activation = "tanh"
colvars:     The activation function for layer[2] is tanh
colvars:     Looking for the keyword "layer3_activation" and its value.
colvars:     Keyword "layer3_activation" not found.
colvars:     Looking for the keyword "layer3_custom_activation" and its value.
colvars:     Keyword "layer3_custom_activation" not found.
colvars:     Layer 0 : has 6 input nodes and 12 output nodes.
colvars:         weights[0][0] = -2.9535
colvars:         weights[0][1] = -0.598211
colvars:         weights[0][2] = 0.241177
colvars:         weights[0][3] = 0.12947
colvars:         weights[0][4] = 0.440179
colvars:         weights[0][5] = -0.876459
colvars:         biases[0] = 0.161657
colvars:         weights[1][0] = 0.107366
colvars:         weights[1][1] = -0.0457882
colvars:         weights[1][2] = 0.0748285
colvars:         weights[1][3] = 0.156815
colvars:         weights[1][4] = 0.703526
colvars:         weights[1][5] = 0.241432
colvars:         biases[1] = -0.632794
colvars:         weights[2][0] = 0.513796
colvars:         weights[2][1] = -1.5317
colvars:         weights[2][2] = -0.0686078
colvars:         weights[2][3] = 0.0673673
colvars:         weights[2][4] = 0.196759
colvars:         weights[2][5] = 0.24494
colvars:         biases[2] = -0.211808
colvars:         weights[3][0] = -0.294562
colvars:         weights[3][1] = -0.847604
colvars:         weights[3][2] = 0.0499617
colvars:         weights[3][3] = 0.278501
colvars:         weights[3][4] = 0.147737
colvars:         weights[3][5] = 0.0557929
colvars:         biases[3] = -0.883388
colvars:         weights[4][0] = 1.07255
colvars:         weights[4][1] = 0.406689
colvars:         weights[4][2] = -0.0419776
colvars:         weights[4][3] = 0.45796
colvars:         weights[4][4] = 0.577049
colvars:         weights[4][5] = 0.0100782
colvars:         biases[4] = 0.742559
colvars:         weights[5][0] = 0.449182
colvars:         weights[5][1] = -1.05176
colvars:         weights[5][2] = 0.0394351
colvars:         weights[5][3] = 0.292022
colvars:         weights[5][4] = -0.118907
colvars:         weights[5][5] = -0.47341
colvars:         biases[5] = -0.737871
colvars:         weights[6][0] = -0.944659
colvars:         weights[6][1] = -0.511769
colvars:         weights[6][2] = 0.178793
colvars:         weights[6][3] = -0.633922
colvars:         weights[6][4] = -0.00172785
colvars:         weights[6][5] = -0.429998
colvars:         biases[6] = 0.00994667
colvars:         weights[7][0] = -0.638807
colvars:         weights[7][1] = -0.221756
colvars:         weights[7][2] = 0.214317
colvars:         weights[7][3] = -0.920973
colvars:         weights[7][4] = -0.241485
colvars:         weights[7][5] = -0.408489
colvars:         biases[7] = -0.522987
colvars:         weights[8][0] = -0.234213
colvars:         weights[8][1] = -0.307255
colvars:         weights[8][2] = 0.053139
colvars:         weights[8][3] = 0.121992
colvars:         weights[8][4] = 0.505387
colvars:         weights[8][5] = 0.192305
colvars:         biases[8] = -0.196265
colvars:         weights[9][0] = 2.77237
colvars:         weights[9][1] = -3.33375
colvars:         weights[9][2] = -0.23642
colvars:         weights[9][3] = 0.18987
colvars:         weights[9][4] = -0.244024
colvars:         weights[9][5] = 0.108861
colvars:         biases[9] = 2.3784
colvars:         weights[10][0] = 0.541434
colvars:         weights[10][1] = 0.0763588
colvars:         weights[10][2] = -0.180858
colvars:         weights[10][3] = 0.905805
colvars:         weights[10][4] = 0.435476
colvars:         weights[10][5] = 0.280653
colvars:         biases[10] = 0.87492
colvars:         weights[11][0] = 1.74269
colvars:         weights[11][1] = -1.64159
colvars:         weights[11][2] = -0.144023
colvars:         weights[11][3] = 0.1227
colvars:         weights[11][4] = -0.263546
colvars:         weights[11][5] = -0.111931
colvars:         biases[11] = 0.984634
colvars:     Layer 1 : has 12 input nodes and 1 output nodes.
colvars:         weights[0][0] = 0.341442
colvars:         weights[0][1] = 0.477212
colvars:         weights[0][2] = 0.465421
colvars:         weights[0][3] = 0.796558
colvars:         weights[0][4] = 0.571714
colvars:         weights[0][5] = -0.303513
colvars:         weights[0][6] = 0.718882
colvars:         weights[0][7] = -0.999872
colvars:         weights[0][8] = -1.06988
colvars:         weights[0][9] = 1.18542
colvars:         weights[0][10] = -0.797083
colvars:         weights[0][11] = -0.713431
colvars:         biases[0] = -0.15288
colvars:     Configuration string for "neuralNetwork": "
colvars: 
colvars:         output_component        0
colvars:         layer1_WeightsFile      dense_weights.txt
colvars:         layer1_BiasesFile       dense_biases.txt
colvars:         layer1_activation       tanh
colvars:         layer2_WeightsFile      dense_1_weights.txt
colvars:         layer2_BiasesFile       dense_1_biases.txt
colvars:         layer2_activation       tanh
colvars:         reuseComponents re2/002
colvars:         customColvar {
colvars:             name 001
colvars:             customFunction sin(phi_1/180.0*3.1415926535897)
colvars:             reuseComponents re1/phi_1
colvars:         }
colvars:         customColvar {
colvars:             name 003
colvars:             customFunction sin(phi_3/180.0*3.1415926535897)
colvars:             dihedral {
colvars:                 name phi_3
colvars:                 group1 {atomNumbers {30}}
colvars:                 group2 {atomNumbers {32}}
colvars:                 group3 {atomNumbers {34}}
colvars:                 group4 {atomNumbers {40}}
colvars:                 scalable off
colvars:             }
colvars:         }
colvars:         customColvar {
colvars:             name 004
colvars:             customFunction sin(psi_1/180.0*3.1415926535897)
colvars:             dihedral {
colvars:                 name psi_1
colvars:                 group1 {atomNumbers {12}}
colvars:                 group2 {atomNumbers {14}}
colvars:                 group3 {atomNumbers {20}}
colvars:                 group4 {atomNumbers {22}}
colvars:                 scalable off
colvars:             }
colvars:         }
colvars:         customColvar {
colvars:             name 005
colvars:             customFunction sin(psi_2/180.0*3.1415926535897)
colvars:             dihedral {
colvars:                 name psi_2
colvars:                 group1 {atomNumbers {22}}
colvars:                 group2 {atomNumbers {24}}
colvars:                 group3 {atomNumbers {30}}
colvars:                 group4 {atomNumbers {32}}
colvars:                 scalable off
colvars:             }
colvars:         }
colvars:         customColvar {
colvars:             name 006
colvars:             customFunction sin(psi_3/180.0*3.1415926535897)
colvars:             dihedral {
colvars:                 name psi_3
colvars:                 group1 {atomNumbers {32}}
colvars:                 group2 {atomNumbers {34}}
colvars:                 group3 {atomNumbers {40}}
colvars:                 group4 {atomNumbers {42}}
colvars:                 scalable off
colvars:             }
colvars:         }
colvars: ".
colvars:   Done initializing a "neuralNetwork" component, named "neuralNetwork0001".
colvars:   Parsed 1 components at this time.
colvars:   Looking for the keyword "neuralNetwork" and its value.
colvars:   Keyword "neuralNetwork" not found.
colvars:   Looking for the keyword "orientation" and its value.
colvars:   Keyword "orientation" not found.
colvars:   Looking for the keyword "orientationAngle" and its value.
colvars:   Keyword "orientationAngle" not found.
colvars:   Looking for the keyword "orientationProj" and its value.
colvars:   Keyword "orientationProj" not found.
colvars:   Looking for the keyword "polarPhi" and its value.
colvars:   Keyword "polarPhi" not found.
colvars:   Looking for the keyword "polarTheta" and its value.
colvars:   Keyword "polarTheta" not found.
colvars:   Looking for the keyword "rmsd" and its value.
colvars:   Keyword "rmsd" not found.
colvars:   Looking for the keyword "selfCoordNum" and its value.
colvars:   Keyword "selfCoordNum" not found.
colvars:   Looking for the keyword "spinAngle" and its value.
colvars:   Keyword "spinAngle" not found.
colvars:   Looking for the keyword "tilt" and its value.
colvars:   Keyword "tilt" not found.
colvars:   All components initialized.
colvars:   Looking for the keyword "customFunction" and its value.
colvars:   Keyword "customFunction" not found.
colvars:   Looking for the keyword "scriptedFunction" and its value.
colvars:   Keyword "scriptedFunction" not found.
colvars:   This collective variable is a scalar number.
colvars:   DEPS: colvar nn_output_1 enabling "scalar"
colvars:   DEPS: feature "scalar" in colvar nn_output_1 enabled, ref_count = 1.
colvars:   DEPS: colvar nn_output_1 enabling "linear"
colvars:   DEPS: feature "linear" in colvar nn_output_1 enabled, ref_count = 1.
colvars:   DEPS: colvar nn_output_1 enabling "homogeneous"
colvars:   DEPS: feature "homogeneous" in colvar nn_output_1 enabled, ref_count = 1.
colvars:   DEPS: colvar nn_output_1 enabling "single_component"
colvars:   DEPS: feature "single_component" in colvar nn_output_1 enabled, ref_count = 1.
colvars:   Looking for the keyword "timeStepFactor" and its value.
colvars:   Keyword "timeStepFactor" not found.
colvars:   # timeStepFactor = 1 [default]
colvars:   Looking for the keyword "width" and its value.
colvars:   Keyword value = "0.01".
colvars:   Looking for the keyword "width" and its value.
colvars:   Keyword "width" not found.
colvars:   # width = 0.01
colvars:   Looking for the keyword "lowerBoundary" and its value.
colvars:   Keyword value = "-1".
colvars:   Looking for the keyword "lowerBoundary" and its value.
colvars:   Keyword "lowerBoundary" not found.
colvars:   # lowerBoundary = -1
colvars:   DEPS: colvar nn_output_1 enabling "lower_boundary"
colvars:   lower_boundary requires self scalar
colvars:   DEPS: colvar nn_output_1 enabling "scalar"
colvars:   DEPS: bumping ref_count to 1
colvars:   DEPS: feature "lower_boundary" in colvar nn_output_1 enabled, ref_count = 1.
colvars:   DEPS: disabling feature "hard_lower_boundary" in colvar nn_output_1
colvars:   Looking for the keyword "upperBoundary" and its value.
colvars:   Keyword value = "1".
colvars:   Looking for the keyword "upperBoundary" and its value.
colvars:   Keyword "upperBoundary" not found.
colvars:   # upperBoundary = 1
colvars:   DEPS: colvar nn_output_1 enabling "upper_boundary"
colvars:   upper_boundary requires self scalar
colvars:   DEPS: colvar nn_output_1 enabling "scalar"
colvars:   DEPS: bumping ref_count to 2
colvars:   DEPS: feature "upper_boundary" in colvar nn_output_1 enabled, ref_count = 1.
colvars:   DEPS: disabling feature "hard_upper_boundary" in colvar nn_output_1
colvars:   Looking for the keyword "lowerWallConstant" and its value.
colvars:   Keyword "lowerWallConstant" not found.
colvars:   Looking for the keyword "upperWallConstant" and its value.
colvars:   Keyword "upperWallConstant" not found.
colvars:   Looking for the keyword "hardLowerBoundary" and its value.
colvars:   Keyword "hardLowerBoundary" not found.
colvars:   # hardLowerBoundary = off [default]
colvars:   DEPS: disabling feature "hard_lower_boundary" in colvar nn_output_1
colvars:   Looking for the keyword "hardUpperBoundary" and its value.
colvars:   Keyword "hardUpperBoundary" not found.
colvars:   # hardUpperBoundary = off [default]
colvars:   DEPS: disabling feature "hard_upper_boundary" in colvar nn_output_1
colvars:   Looking for the keyword "expandBoundaries" and its value.
colvars:   Keyword "expandBoundaries" not found.
colvars:   # expandBoundaries = off [default]
colvars:   Looking for the keyword "extendedLagrangian" and its value.
colvars:   Keyword value = "on".
colvars:   Looking for the keyword "extendedLagrangian" and its value.
colvars:   Keyword "extendedLagrangian" not found.
colvars:   # extendedLagrangian = on
colvars:   DEPS: colvar nn_output_1 enabling "extended_Lagrangian"
colvars:   extended_Lagrangian requires exclude hide_Jacobian_force
colvars:   extended_Lagrangian requires self scalar
colvars:   DEPS: colvar nn_output_1 enabling "scalar"
colvars:   DEPS: bumping ref_count to 3
colvars:   extended_Lagrangian requires self gradient
colvars:   DEPS: colvar nn_output_1 enabling "gradient"
colvars:     DEPS: cvc "neuralNetwork0001" of type "neuralNetwork" testing "gradient"
colvars:   DEPS: feature "gradient" in colvar nn_output_1 enabled, ref_count = 1.
colvars:   DEPS: feature "extended_Lagrangian" in colvar nn_output_1 enabled, ref_count = 1.
colvars:   Enabling the extended Lagrangian term for colvar "nn_output_1".
colvars:   Looking for the keyword "extendedTemp" and its value.
colvars:   Keyword "extendedTemp" not found.
colvars:   # extendedTemp = 300 [default]
colvars:   Looking for the keyword "extendedFluctuation" and its value.
colvars:   Keyword value = "0.01".
colvars:   Looking for the keyword "extendedFluctuation" and its value.
colvars:   Keyword "extendedFluctuation" not found.
colvars:   # extendedFluctuation = 0.01
colvars:   Computed extended system force constant: 5961.57 [E]/U^2
colvars:   Looking for the keyword "extendedTimeConstant" and its value.
colvars:   Keyword value = "200".
colvars:   Looking for the keyword "extendedTimeConstant" and its value.
colvars:   Keyword "extendedTimeConstant" not found.
colvars:   # extendedTimeConstant = 200
colvars:   Computed fictitious mass: 6.04034e+06 [E]/(U/fs)^2   (U: colvar unit)
colvars:   Looking for the keyword "outputEnergy" and its value.
colvars:   Keyword "outputEnergy" not found.
colvars:   # outputEnergy = off [default]
colvars:   Looking for the keyword "extendedLangevinDamping" and its value.
colvars:   Keyword "extendedLangevinDamping" not found.
colvars:   # extendedLangevinDamping = 1 [default]
colvars:   DEPS: colvar nn_output_1 enabling "Langevin_dynamics"
colvars:   Langevin_dynamics requires self extended_Lagrangian
colvars:   DEPS: colvar nn_output_1 enabling "extended_Lagrangian"
colvars:   DEPS: bumping ref_count to 1
colvars:   DEPS: feature "Langevin_dynamics" in colvar nn_output_1 enabled, ref_count = 1.
colvars:   Looking for the keyword "reflectingLowerBoundary" and its value.
colvars:   Keyword "reflectingLowerBoundary" not found.
colvars:   # reflectingLowerBoundary = off [default]
colvars:   DEPS: disabling feature "reflecting_lower_boundary" in colvar nn_output_1
colvars:   Looking for the keyword "reflectingUpperBoundary" and its value.
colvars:   Keyword "reflectingUpperBoundary" not found.
colvars:   # reflectingUpperBoundary = off [default]
colvars:   DEPS: disabling feature "reflecting_upper_boundary" in colvar nn_output_1
colvars:   Looking for the keyword "outputValue" and its value.
colvars:   Keyword "outputValue" not found.
colvars:   # outputValue = on [default]
colvars:   DEPS: colvar nn_output_1 enabling "output_value"
colvars:   DEPS: feature "output_value" in colvar nn_output_1 enabled, ref_count = 1.
colvars:   Looking for the keyword "outputVelocity" and its value.
colvars:   Keyword "outputVelocity" not found.
colvars:   # outputVelocity = off [default]
colvars:   Looking for the keyword "outputSystemForce" and its value.
colvars:   Keyword "outputSystemForce" not found.
colvars:   Looking for the keyword "outputTotalForce" and its value.
colvars:   Keyword "outputTotalForce" not found.
colvars:   # outputTotalForce = off [default]
colvars:   DEPS: disabling feature "output_total_force" in colvar nn_output_1
colvars:   Looking for the keyword "outputAppliedForce" and its value.
colvars:   Keyword "outputAppliedForce" not found.
colvars:   # outputAppliedForce = off [default]
colvars:   DEPS: disabling feature "output_applied_force" in colvar nn_output_1
colvars:   Looking for the keyword "subtractAppliedForce" and its value.
colvars:   Keyword value = "on".
colvars:   Looking for the keyword "subtractAppliedForce" and its value.
colvars:   Keyword "subtractAppliedForce" not found.
colvars:   # subtractAppliedForce = on
colvars:   DEPS: colvar nn_output_1 enabling "subtract_applied_force_from_total_force"
colvars:   subtract_applied_force_from_total_force requires self total_force
colvars:   DEPS: colvar nn_output_1 enabling "total_force"
colvars:   total_force requires alt extended_Lagrangian
colvars:   DEPS: colvar nn_output_1 testing "extended_Lagrangian"
colvars:   DEPS: colvar nn_output_1 enabling "extended_Lagrangian"
colvars:   DEPS: bumping ref_count to 2
colvars:   DEPS: feature "total_force" in colvar nn_output_1 enabled, ref_count = 1.
colvars:   DEPS: feature "subtract_applied_force_from_total_force" in colvar nn_output_1 enabled, ref_count = 1.
colvars:   DEPS: colvar nn_output_1 enabling "active"
colvars:   active requires alt scalar
colvars:   DEPS: colvar nn_output_1 testing "scalar"
colvars:   DEPS: colvar nn_output_1 enabling "scalar"
colvars:   DEPS: bumping ref_count to 4
colvars:     DEPS: re-enabling children's gradient
colvars:     DEPS: cvc "neuralNetwork0001" of type "neuralNetwork" enabling "gradient"
colvars:     DEPS: feature "gradient" in cvc "neuralNetwork0001" of type "neuralNetwork" enabled, ref_count = 1.
colvars:   DEPS: feature "active" in colvar nn_output_1 enabled, ref_count = 1.
colvars:   Looking for the keyword "runAve" and its value.
colvars:   Keyword "runAve" not found.
colvars:   # runAve = off [default]
colvars:   Looking for the keyword "corrFunc" and its value.
colvars:   Keyword "corrFunc" not found.
colvars:   # corrFunc = off [default]
colvars:   Done initializing collective variable "nn_output_1".
colvars:   Configuration string for "colvar": "
colvars: 
colvars:     name                    nn_output_1
colvars:     width 0.01
colvars:     lowerboundary           -1
colvars:     upperboundary           1
colvars:     extendedlagrangian      on
colvars:     extendedFluctuation     0.01
colvars:     extendedTimeConstant    200
colvars:     subtractappliedforce    on
colvars:     NeuralNetwork {
colvars:         output_component        0
colvars:         layer1_WeightsFile      dense_weights.txt
colvars:         layer1_BiasesFile       dense_biases.txt
colvars:         layer1_activation       tanh
colvars:         layer2_WeightsFile      dense_1_weights.txt
colvars:         layer2_BiasesFile       dense_1_biases.txt
colvars:         layer2_activation       tanh
colvars:         reuseComponents re2/002
colvars:         customColvar {
colvars:             name 001
colvars:             customFunction sin(phi_1/180.0*3.1415926535897)
colvars:             reuseComponents re1/phi_1
colvars:         }
colvars:         customColvar {
colvars:             name 003
colvars:             customFunction sin(phi_3/180.0*3.1415926535897)
colvars:             dihedral {
colvars:                 name phi_3
colvars:                 group1 {atomNumbers {30}}
colvars:                 group2 {atomNumbers {32}}
colvars:                 group3 {atomNumbers {34}}
colvars:                 group4 {atomNumbers {40}}
colvars:                 scalable off
colvars:             }
colvars:         }
colvars:         customColvar {
colvars:             name 004
colvars:             customFunction sin(psi_1/180.0*3.1415926535897)
colvars:             dihedral {
colvars:                 name psi_1
colvars:                 group1 {atomNumbers {12}}
colvars:                 group2 {atomNumbers {14}}
colvars:                 group3 {atomNumbers {20}}
colvars:                 group4 {atomNumbers {22}}
colvars:                 scalable off
colvars:             }
colvars:         }
colvars:         customColvar {
colvars:             name 005
colvars:             customFunction sin(psi_2/180.0*3.1415926535897)
colvars:             dihedral {
colvars:                 name psi_2
colvars:                 group1 {atomNumbers {22}}
colvars:                 group2 {atomNumbers {24}}
colvars:                 group3 {atomNumbers {30}}
colvars:                 group4 {atomNumbers {32}}
colvars:                 scalable off
colvars:             }
colvars:         }
colvars:         customColvar {
colvars:             name 006
colvars:             customFunction sin(psi_3/180.0*3.1415926535897)
colvars:             dihedral {
colvars:                 name psi_3
colvars:                 group1 {atomNumbers {32}}
colvars:                 group2 {atomNumbers {34}}
colvars:                 group3 {atomNumbers {40}}
colvars:                 group4 {atomNumbers {42}}
colvars:                 scalable off
colvars:             }
colvars:         }
colvars:     }
colvars: ".
colvars: Looking for the keyword "colvar" and its value.
colvars: Keyword "colvar" not found.
colvars: ----------------------------------------------------------------------
colvars: Collective variables initialized, 3 in total.
colvars: List of variables:  re1 re2 nn_output_1
colvars: List of components:  nn_output_1/neuralNetwork0001 re1/phi_1 re2/002
colvars: Initializing the collective variables biases.
colvars: Looking for the keyword "abf" and its value.
colvars: Keyword value = "
colvars:     colvars             nn_output_1
colvars:     fullSamples         2000
colvars:     writeCZARwindowFile on
colvars:     historyfreq         100000
colvars: ".
colvars: ----------------------------------------------------------------------
colvars:   Initializing a new "abf" instance.
colvars:   Looking for the keyword "name" and its value.
colvars:   Keyword "name" not found.
colvars:   # name = "abf1" [default]
colvars:   Looking for the keyword "colvars" and its value.
colvars:   Keyword value = "nn_output_1".
colvars:   Looking for the keyword "colvars" and its value.
colvars:   Keyword "colvars" not found.
colvars:   # colvars = { nn_output_1 }
colvars:   Applying this bias to collective variable "nn_output_1".
colvars:   Looking for the keyword "stepZeroData" and its value.
colvars:   Keyword "stepZeroData" not found.
colvars:   # stepZeroData = off [default]
colvars:   DEPS: disabling feature "step_zero_data" in bias abf1
colvars:   Looking for the keyword "outputEnergy" and its value.
colvars:   Keyword "outputEnergy" not found.
colvars:   # outputEnergy = off [default]
colvars:   Looking for the keyword "outputFreq" and its value.
colvars:   Keyword "outputFreq" not found.
colvars:   # outputFreq = 10 [default]
colvars:   Looking for the keyword "bypassExtendedLagrangian" and its value.
colvars:   Keyword "bypassExtendedLagrangian" not found.
colvars:   DEPS: disabling feature "bypass_extended_Lagrangian_coordinates" in bias abf1
colvars:   Looking for the keyword "timeStepFactor" and its value.
colvars:   Keyword "timeStepFactor" not found.
colvars:   # timeStepFactor = 1 [default]
colvars:   Looking for the keyword "scaledBiasingForce" and its value.
colvars:   Keyword "scaledBiasingForce" not found.
colvars:   DEPS: disabling feature "scale_biasing_force" in bias abf1
colvars:   DEPS: bias abf1 enabling "active"
colvars:     DEPS: colvar nn_output_1 testing "active"
colvars:     DEPS: re-enabling children's active
colvars:     DEPS: colvar nn_output_1 enabling "active"
colvars:     DEPS: bumping ref_count to 1
colvars:   DEPS: feature "active" in bias abf1 enabled, ref_count = 1.
colvars:   Features of "bias abf1" (refcount)
colvars:   - ON active
colvars:   -    awake
colvars:   -    step_zero_data
colvars:   -    apply_force
colvars:   -    bypass_extended_Lagrangian_coordinates
colvars:   -    obtain_total_force
colvars:   -    output_accumulated_work
colvars:   -    history_dependent
colvars:   -    time_dependent
colvars:   -    require_scalar_variables
colvars:   -    calculate_a_PMF
colvars:   -    calculate_TI_samples
colvars:   -    write_TI_samples_
colvars:   -    write_TI_PMF
colvars:   -    scale_biasing_force
colvars:   -    Bias on extended-Lagrangian variables
colvars:     * child 1
colvars:     Features of "colvar nn_output_1" (refcount)
colvars:     - ON active (1) 
colvars:     -    awake
colvars:     - ON gradient (1) 
colvars:     -    collect_gradient
colvars:     -    collect_atom_ids
colvars:     -    velocity_from_finite_differences
colvars:     - ON total_force (1) 
colvars:     -    total_force_calculation
colvars:     - ON subtract_applied_force_from_total_force
colvars:     -    Jacobian_derivative
colvars:     -    hide_Jacobian_force
colvars:     - ON extended_Lagrangian (2) 
colvars:     -    external
colvars:     - ON Langevin_dynamics
colvars:     -    output_energy
colvars:     - ON output_value
colvars:     -    output_velocity
colvars:     -    output_applied_force
colvars:     -    output_total_force
colvars:     - ON lower_boundary
colvars:     - ON upper_boundary
colvars:     -    hard_lower_boundary
colvars:     -    hard_upper_boundary
colvars:     -    reflecting_lower_boundary
colvars:     -    reflecting_upper_boundary
colvars:     -    grid
colvars:     -    running_average
colvars:     -    correlation_function
colvars:     -    scripted
colvars:     -    custom_function
colvars:     -    periodic
colvars:     - ON single_component
colvars:     - ON scalar (4) 
colvars:     - ON linear
colvars:     - ON homogeneous
colvars:     -    multiple_timestep
colvars:       * child 1
colvars:       Features of "cvc "neuralNetwork0001" of type "neuralNetwork"" (refcount)
colvars:       - ON active
colvars:       -    scalar
colvars:       -    periodic
colvars:       -    defined_width
colvars:       -    defined_lower_boundary
colvars:       -    defined_upper_boundary
colvars:       -    explicit_atom_groups
colvars:       - ON gradient (1) 
colvars:       - ON explicit_gradient
colvars:       -    inverse_gradient
colvars:       -    Jacobian_derivative
colvars:       -    total_force_from_one_group
colvars:       -    debug_gradient
colvars:       - ON use_minimum-image_with_PBCs
colvars:       -    function_of_centers_of_mass
colvars:       -    scalable_calculation
colvars:       -    scalable_calculation_of_centers_of_mass
colvars:       -    collect_atom_ids
colvars:   DEPS: bias abf1 enabling "require_scalar_variables"
colvars:     DEPS: colvar nn_output_1 enabling "scalar"
colvars:     DEPS: bumping ref_count to 5
colvars:   DEPS: feature "require_scalar_variables" in bias abf1 enabled, ref_count = 1.
colvars:   DEPS: bias abf1 enabling "calculate_a_PMF"
colvars:   DEPS: feature "calculate_a_PMF" in bias abf1 enabled, ref_count = 1.
colvars:   Looking for the keyword "applyBias" and its value.
colvars:   Keyword "applyBias" not found.
colvars:   # applyBias = on [default]
colvars:   DEPS: bias abf1 enabling "apply_force"
colvars:     DEPS: colvar nn_output_1 enabling "gradient"
colvars:     DEPS: bumping ref_count to 2
colvars:   DEPS: feature "apply_force" in bias abf1 enabled, ref_count = 1.
colvars:   Looking for the keyword "hideJacobian" and its value.
colvars:   Keyword "hideJacobian" not found.
colvars:   # hideJacobian = off [default]
colvars:   Jacobian (geometric) forces will be included in reported free energy gradients.
colvars:   Looking for the keyword "fullSamples" and its value.
colvars:   Keyword value = "2000".
colvars:   Looking for the keyword "fullSamples" and its value.
colvars:   Keyword "fullSamples" not found.
colvars:   # fullSamples = 2000
colvars:   Looking for the keyword "minSamples" and its value.
colvars:   Keyword "minSamples" not found.
colvars:   # minSamples = 1000 [default]
colvars:   Looking for the keyword "inputPrefix" and its value.
colvars:   Keyword "inputPrefix" not found.
colvars:   # inputPrefix =  [default]
colvars:   Looking for the keyword "historyFreq" and its value.
colvars:   Keyword value = "100000".
colvars:   Looking for the keyword "historyFreq" and its value.
colvars:   Keyword "historyFreq" not found.
colvars:   # historyFreq = 100000
colvars:   Looking for the keyword "shared" and its value.
colvars:   Keyword "shared" not found.
colvars:   # shared = off [default]
colvars:   DEPS: colvar nn_output_1 enabling "grid"
colvars:   grid requires self scalar
colvars:   DEPS: colvar nn_output_1 enabling "scalar"
colvars:   DEPS: bumping ref_count to 6
colvars:   DEPS: feature "grid" in colvar nn_output_1 enabled, ref_count = 1.
colvars:   DEPS: bias abf1 enabling "Bias on extended-Lagrangian variables"
colvars:   DEPS: feature "Bias on extended-Lagrangian variables" in bias abf1 enabled, ref_count = 1.
colvars:   Looking for the keyword "updateBias" and its value.
colvars:   Keyword "updateBias" not found.
colvars:   # updateBias = on [default]
colvars:   DEPS: bias abf1 enabling "history_dependent"
colvars:   DEPS: feature "history_dependent" in bias abf1 enabled, ref_count = 1.
colvars:   DEPS: bias abf1 enabling "obtain_total_force"
colvars:   obtain_total_force requires exclude bypass_extended_Lagrangian_coordinates
colvars:   obtain_total_force requires exclude step_zero_data
colvars:     DEPS: colvar nn_output_1 enabling "total_force"
colvars:     DEPS: bumping ref_count to 2
colvars:   DEPS: feature "obtain_total_force" in bias abf1 enabled, ref_count = 1.
colvars:   Looking for the keyword "maxForce" and its value.
colvars:   Keyword "maxForce" not found.
colvars:   # maxForce =  [default]
colvars:   Allocating count and free energy gradient grids.
colvars:   Reading grid configuration from collective variables.
colvars:   Allocating a grid for 1 collective variables, multiplicity = 1.
colvars:   Configuring grid dimensions from colvars boundaries.
colvars:   Number of points is 200 for the colvar no. 1.
colvars:   Allocating grid: multiplicity = 1, dimensions = { 200 }.
colvars:   Total number of grid elements = 200.
colvars:   Reading grid configuration from collective variables.
colvars:   Allocating a grid for 1 collective variables, multiplicity = 1.
colvars:   Configuring grid dimensions from colvars boundaries.
colvars:   Number of points is 200 for the colvar no. 1.
colvars:   Allocating grid: multiplicity = 1, dimensions = { 200 }.
colvars:   Total number of grid elements = 200.
colvars:   Looking for the keyword "CZARestimator" and its value.
colvars:   Keyword "CZARestimator" not found.
colvars:   # CZARestimator = on [default]
colvars:   Looking for the keyword "writeCZARwindowFile" and its value.
colvars:   Keyword value = "on".
colvars:   Looking for the keyword "writeCZARwindowFile" and its value.
colvars:   Keyword "writeCZARwindowFile" not found.
colvars:   Reading grid configuration from collective variables.
colvars:   Allocating a grid for 1 collective variables, multiplicity = 1.
colvars:   Configuring grid dimensions from colvars boundaries.
colvars:   Number of points is 200 for the colvar no. 1.
colvars:   Allocating grid: multiplicity = 1, dimensions = { 200 }.
colvars:   Total number of grid elements = 200.
colvars:   Reading grid configuration from collective variables.
colvars:   Allocating a grid for 1 collective variables, multiplicity = 1.
colvars:   Configuring grid dimensions from colvars boundaries.
colvars:   Number of points is 200 for the colvar no. 1.
colvars:   Allocating grid: multiplicity = 1, dimensions = { 200 }.
colvars:   Total number of grid elements = 200.
colvars:   Reading grid configuration from collective variables.
colvars:   Allocating a grid for 1 collective variables, multiplicity = 1.
colvars:   Configuring grid dimensions from colvars boundaries.
colvars:   Number of points is 200 for the colvar no. 1.
colvars:   Allocating grid: multiplicity = 1, dimensions = { 200 }.
colvars:   Total number of grid elements = 200.
colvars:   Looking for the keyword "integrate" and its value.
colvars:   Keyword "integrate" not found.
colvars:   # integrate = on [default]
colvars:   Reading grid configuration from collective variables.
colvars:   Allocating a grid for 1 collective variables, multiplicity = 1.
colvars:   Configuring grid dimensions from colvars boundaries.
colvars:   Number of points is 201 for the colvar no. 1.
colvars:   Allocating grid: multiplicity = 1, dimensions = { 201 }.
colvars:   Total number of grid elements = 201.
colvars:   Reading grid configuration from collective variables.
colvars:   Allocating a grid for 1 collective variables, multiplicity = 1.
colvars:   Configuring grid dimensions from colvars boundaries.
colvars:   Number of points is 201 for the colvar no. 1.
colvars:   Allocating grid: multiplicity = 1, dimensions = { 201 }.
colvars:   Total number of grid elements = 201.
colvars:   Looking for the keyword "integrateMaxIterations" and its value.
colvars:   Keyword "integrateMaxIterations" not found.
colvars:   Looking for the keyword "integrateTol" and its value.
colvars:   Keyword "integrateTol" not found.
colvars:   Looking for the keyword "pABFintegrateFreq" and its value.
colvars:   Keyword "pABFintegrateFreq" not found.
colvars:   Looking for the keyword "pABFintegrateMaxIterations" and its value.
colvars:   Keyword "pABFintegrateMaxIterations" not found.
colvars:   Looking for the keyword "pABFintegrateTol" and its value.
colvars:   Keyword "pABFintegrateTol" not found.
colvars:   Reading grid configuration from collective variables.
colvars:   Allocating a grid for 1 collective variables, multiplicity = 1.
colvars:   Configuring grid dimensions from colvars boundaries.
colvars:   Number of points is 200 for the colvar no. 1.
colvars:   Allocating grid: multiplicity = 1, dimensions = { 200 }.
colvars:   Total number of grid elements = 200.
colvars:   Reading grid configuration from collective variables.
colvars:   Allocating a grid for 1 collective variables, multiplicity = 1.
colvars:   Configuring grid dimensions from colvars boundaries.
colvars:   Number of points is 200 for the colvar no. 1.
colvars:   Allocating grid: multiplicity = 1, dimensions = { 200 }.
colvars:   Total number of grid elements = 200.
colvars:   Reading grid configuration from collective variables.
colvars:   Allocating a grid for 1 collective variables, multiplicity = 1.
colvars:   Configuring grid dimensions from colvars boundaries.
colvars:   Number of points is 200 for the colvar no. 1.
colvars:   Allocating grid: multiplicity = 1, dimensions = { 200 }.
colvars:   Total number of grid elements = 200.
colvars:   Reading grid configuration from collective variables.
colvars:   Allocating a grid for 1 collective variables, multiplicity = 1.
colvars:   Configuring grid dimensions from colvars boundaries.
colvars:   Number of points is 200 for the colvar no. 1.
colvars:   Allocating grid: multiplicity = 1, dimensions = { 200 }.
colvars:   Total number of grid elements = 200.
colvars:   Looking for the keyword "UIestimator" and its value.
colvars:   Keyword "UIestimator" not found.
colvars:   # UIestimator = off [default]
colvars:   Finished ABF setup.
colvars:   Configuration string for "abf": "
colvars: 
colvars:     colvars             nn_output_1
colvars:     fullSamples         2000
colvars:     writeCZARwindowFile on
colvars:     historyfreq         100000
colvars: ".
colvars: Looking for the keyword "abf" and its value.
colvars: Keyword "abf" not found.
colvars: Looking for the keyword "ALB" and its value.
colvars: Keyword "ALB" not found.
colvars: Looking for the keyword "harmonic" and its value.
colvars: Keyword "harmonic" not found.
colvars: Looking for the keyword "harmonicWalls" and its value.
colvars: Keyword "harmonicWalls" not found.
colvars: Looking for the keyword "histogram" and its value.
colvars: Keyword "histogram" not found.
colvars: Looking for the keyword "histogramRestraint" and its value.
colvars: Keyword "histogramRestraint" not found.
colvars: Looking for the keyword "linear" and its value.
colvars: Keyword "linear" not found.
colvars: Looking for the keyword "metadynamics" and its value.
colvars: Keyword "metadynamics" not found.
colvars: Looking for the keyword "reweightaMD" and its value.
colvars: Keyword "reweightaMD" not found.
colvars: ----------------------------------------------------------------------
colvars: Collective variables biases initialized, 1 in total.
colvars: List of biases:  abf1
colvars: Configuration string for "colvarmodule": "
colvars: colvarsTrajFrequency    1
colvars: colvarsRestartFrequency 10
colvars: colvar {
colvars:     name re1
colvars:     dihedral {
colvars:         name phi_1
colvars:         group1 {atomNumbers {10}}
colvars:         group2 {atomNumbers {12}}
colvars:         group3 {atomNumbers {14}}
colvars:         group4 {atomNumbers {20}}
colvars:         scalable off
colvars:     }
colvars: }
colvars: colvar {
colvars:     name re2
colvars:     customColvar {
colvars:         name 002
colvars:         customFunction sin(phi_2/180.0*3.1415926535897)
colvars:         dihedral {
colvars:             name phi_2
colvars:             group1 {atomNumbers {20}}
colvars:             group2 {atomNumbers {22}}
colvars:             group3 {atomNumbers {24}}
colvars:             group4 {atomNumbers {30}}
colvars:             scalable off
colvars:         }
colvars:     }
colvars: }
colvars: colvar {
colvars:     name                    nn_output_1
colvars:     width 0.01
colvars:     lowerboundary           -1
colvars:     upperboundary           1
colvars:     extendedlagrangian      on
colvars:     extendedFluctuation     0.01
colvars:     extendedTimeConstant    200
colvars:     subtractappliedforce    on
colvars:     NeuralNetwork {
colvars:         output_component        0
colvars:         layer1_WeightsFile      dense_weights.txt
colvars:         layer1_BiasesFile       dense_biases.txt
colvars:         layer1_activation       tanh
colvars:         layer2_WeightsFile      dense_1_weights.txt
colvars:         layer2_BiasesFile       dense_1_biases.txt
colvars:         layer2_activation       tanh
colvars:         reuseComponents re2/002
colvars:         customColvar {
colvars:             name 001
colvars:             customFunction sin(phi_1/180.0*3.1415926535897)
colvars:             reuseComponents re1/phi_1
colvars:         }
colvars:         customColvar {
colvars:             name 003
colvars:             customFunction sin(phi_3/180.0*3.1415926535897)
colvars:             dihedral {
colvars:                 name phi_3
colvars:                 group1 {atomNumbers {30}}
colvars:                 group2 {atomNumbers {32}}
colvars:                 group3 {atomNumbers {34}}
colvars:                 group4 {atomNumbers {40}}
colvars:                 scalable off
colvars:             }
colvars:         }
colvars:         customColvar {
colvars:             name 004
colvars:             customFunction sin(psi_1/180.0*3.1415926535897)
colvars:             dihedral {
colvars:                 name psi_1
colvars:                 group1 {atomNumbers {12}}
colvars:                 group2 {atomNumbers {14}}
colvars:                 group3 {atomNumbers {20}}
colvars:                 group4 {atomNumbers {22}}
colvars:                 scalable off
colvars:             }
colvars:         }
colvars:         customColvar {
colvars:             name 005
colvars:             customFunction sin(psi_2/180.0*3.1415926535897)
colvars:             dihedral {
colvars:                 name psi_2
colvars:                 group1 {atomNumbers {22}}
colvars:                 group2 {atomNumbers {24}}
colvars:                 group3 {atomNumbers {30}}
colvars:                 group4 {atomNumbers {32}}
colvars:                 scalable off
colvars:             }
colvars:         }
colvars:         customColvar {
colvars:             name 006
colvars:             customFunction sin(psi_3/180.0*3.1415926535897)
colvars:             dihedral {
colvars:                 name psi_3
colvars:                 group1 {atomNumbers {32}}
colvars:                 group2 {atomNumbers {34}}
colvars:                 group3 {atomNumbers {40}}
colvars:                 group4 {atomNumbers {42}}
colvars:                 scalable off
colvars:             }
colvars:         }
colvars:     }
colvars: }
colvars: abf {
colvars:     colvars             nn_output_1
colvars:     fullSamples         2000
colvars:     writeCZARwindowFile on
colvars:     historyfreq         100000
colvars: }
colvars: ".
colvars: ----------------------------------------------------------------------
colvars: Collective variables module (re)initialized.
colvars: ----------------------------------------------------------------------
colvars: Updating NAMD interface:
colvars: updating atomic data (11 atoms).
colvars: updating group data (0 scalable groups, 0 atoms in total).
colvars: updating grid object data (0 grid objects in total).
colvars: 
colvars: SUMMARY OF COLVARS FEATURES USED SO FAR AND THEIR CITATIONS:
colvars: 
colvars: - BAOA integrator:
colvars:   BouRabee2010 https://doi.org/10.1137/090758842
colvars: 
colvars: - Colvars module:
colvars: - Colvars-NAMD interface:
colvars: - Optimal rotation via flexible fitting:
colvars: - dihedral colvar component:
colvars:   Fiorin2013 https://doi.org/10.1080/00268976.2013.813594
colvars: 
colvars: - ABF colvar bias implementation:
colvars:   Henin2010 https://doi.org/10.1021/ct9004432
colvars: 
colvars: - CZAR eABF estimator:
colvars: - eABF implementation:
colvars:   Lesage2017 https://doi.org/10.1021/acs.jpcb.6b10055
colvars: 
colvars: - NAMD engine:
colvars:   Phillips2020 https://doi.org/10.1063/5.0014475
colvars: 
colvars: - linearCombination colvar component:
colvars:   n/a 
colvars: 
colvars: updating target temperature (T = 300 K).
colvars: Current simulation parameters: initial step = 0, integration timestep = 0.5
colvars: Updating atomic parameters (masses, charges, etc).
colvars: Re-initialized atom group for variable "re1":0/0. 1 atoms: total mass = 12.011, total charge = 0.51.
colvars: Re-initialized atom group for variable "re1":0/1. 1 atoms: total mass = 14.007, total charge = -0.47.
colvars: Re-initialized atom group for variable "re1":0/2. 1 atoms: total mass = 12.011, total charge = 0.07.
colvars: Re-initialized atom group for variable "re1":0/3. 1 atoms: total mass = 12.011, total charge = 0.51.
colvars: The restart output state file will be "test.colvars.state".
colvars: The final output state file will be "test.colvars.state".
colvars: Updating NAMD interface:
colvars: updating atomic data (11 atoms).
colvars: updating group data (0 scalable groups, 0 atoms in total).
colvars: updating grid object data (0 grid objects in total).
colvars: updating target temperature (T = 300 K).
colvars: Current simulation parameters: initial step = 0, integration timestep = 0.5
colvars: Updating atomic parameters (masses, charges, etc).
colvars: Re-initialized atom group for variable "re1":0/0. 1 atoms: total mass = 12.011, total charge = 0.51.
colvars: Re-initialized atom group for variable "re1":0/1. 1 atoms: total mass = 14.007, total charge = -0.47.
colvars: Re-initialized atom group for variable "re1":0/2. 1 atoms: total mass = 12.011, total charge = 0.07.
colvars: Re-initialized atom group for variable "re1":0/3. 1 atoms: total mass = 12.011, total charge = 0.51.
colvars: The restart output state file will be "test.colvars.state".
colvars: ----------------------------------------------------------------------
colvars: colvarproxy_namd, step no. 0
colvars: Updating atomic data arrays.
colvars: Updating positions arrays.
colvars: Updating group positions arrays.
colvars: Updating grid objects.
colvars: ----------------------------------------------------------------------
colvars: Step 0, atoms_ids[size = 11] = { 9, 11, 13, 19, 21, 23, 29, 31, 33, 39, 41 }
colvars: Step 0, atoms_refcount[size = 11] = { 1, 2, 2, 3, 3, 2, 3, 3, 2, 2, 1 }
colvars: Step 0, atoms_masses[size = 11] = { 12.011, 14.007, 12.011, 12.011, 14.007, 12.011, 12.011, 14.007, 12.011, 12.011, 14.007 }
colvars: Step 0, atoms_charges[size = 11] = { 0.51, -0.47, 0.07, 0.51, -0.47, 0.07, 0.51, -0.47, 0.07, 0.51, -0.47 }
colvars: Step 0, atoms_positions[size = 11] = { (  6.47500000000000e+00 ,  8.90000000000000e-01 ,  6.49000000000000e-01 ), (  7.10600000000000e+00 ,  1.14000000000000e+00 ,  1.81300000000000e+00 ), (  6.40300000000000e+00 ,  1.21600000000000e+00 ,  3.04500000000000e+00 ), (  5.34600000000000e+00 ,  2.37800000000000e+00 ,  3.08300000000000e+00 ), (  5.68300000000000e+00 ,  3.66500000000000e+00 ,  2.79600000000000e+00 ), (  4.80600000000000e+00 ,  4.80400000000000e+00 ,  2.87100000000000e+00 ), (  3.47300000000000e+00 ,  4.72300000000000e+00 ,  2.16400000000000e+00 ), (  3.46800000000000e+00 ,  4.08200000000000e+00 ,  1.00000000000000e+00 ), (  2.24400000000000e+00 ,  3.79900000000000e+00 ,  2.74000000000000e-01 ), (  1.40100000000000e+00 ,  2.67200000000000e+00 ,  9.35000000000000e-01 ), (  2.05400000000000e+00 ,  1.45500000000000e+00 ,  9.02000000000000e-01 ) }
colvars: Step 0, atoms_total_forces[size = 11] = { (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ) }
colvars: ----------------------------------------------------------------------
colvars: Step 0, atom_groups_ids[size = 0] = 
colvars: Step 0, atom_groups_refcount[size = 0] = 
colvars: Step 0, atom_groups_masses[size = 0] = 
colvars: Step 0, atom_groups_charges[size = 0] = 
colvars: Step 0, atom_groups_coms[size = 0] = 
colvars: Step 0, atom_groups_total_forces[size = 0] = 
colvars: ----------------------------------------------------------------------
colvars: Step 0, volmaps_ids[size = 0] = 
colvars: Step 0, volmaps_values[size = 0] = 
colvars: ----------------------------------------------------------------------
colvars: ----------------------------------------------------------------------
colvars: Collective variables module, step no. 0
colvars: Calculating collective variables.
colvars:   CVC psi_3 has value -65.2421
colvars:   Propagate a gradient of 0.00730917 to nn_output_1/neuralNetwork0001/006/psi_3
colvars: CVC phi_3 has value -73.0263
colvars: CVC psi_1 has value -53.6893
colvars: CVC phi_1 has value -62.1881
colvars: Propagate a gradient of 0.0081432 to re1/phi_1
colvars: CVC psi_2 has value -37.1725
colvars: Propagate a gradient of 0.0103352 to nn_output_1/neuralNetwork0001/004/psi_1
colvars:   CVC phi_2 has value -51.3409
colvars:   Propagate a gradient of 0.0109028 to re2/002/phi_2
colvars: Propagate a gradient of 0.0139071 to nn_output_1/neuralNetwork0001/005/psi_2
colvars: Propagate a gradient of 0.00509518 to nn_output_1/neuralNetwork0001/003/phi_3
colvars:   CVC 001 has value -0.884484
colvars:   CVC 002 has value -0.780877
colvars:   CVC 003 has value -0.956439
colvars:   CVC 004 has value -0.805818
colvars:   CVC 005 has value -0.604217
colvars:   CVC 006 has value -0.908086
colvars:   Propagate a gradient of -0.228813 to nn_output_1/neuralNetwork0001/001
colvars:   Propagate a gradient of -0.175631 to re2/002
colvars:   Propagate a gradient of 0.0135289 to nn_output_1/neuralNetwork0001/003
colvars:   Propagate a gradient of -0.112881 to nn_output_1/neuralNetwork0001/004
colvars:   Propagate a gradient of -0.131953 to nn_output_1/neuralNetwork0001/005
colvars:   Propagate a gradient of 0.0977349 to nn_output_1/neuralNetwork0001/006
colvars:   Calculating colvar "re1"'s properties.
colvars:   Colvar "re1" has value -6.21880618373937e+01.
colvars:   Done calculating colvar "re1"'s properties.
colvars:   Calculating colvar "re2"'s properties.
colvars:   Colvar "re2" has value -7.80876901153670e-01.
colvars:   Done calculating colvar "re2"'s properties.
colvars:   Calculating colvar "nn_output_1"'s properties.
colvars:   Colvar "nn_output_1" has value  4.27348452931304e-01.
colvars:   Initializing extended coordinate to colvar value.
colvars:   Done calculating colvar "nn_output_1"'s properties.
colvars: Updating collective variable biases.
colvars:   Updating ABF bias abf1
colvars: Collecting forces from all biases.
colvars:   Communicating a force to colvar "nn_output_1".
colvars:   Adding biasing force 0 to colvar "nn_output_1".
colvars: Adding total bias energy: 0
colvars: Updating the internal degrees of freedom of colvars (if they have any).
colvars:   Updating colvar "re1".
colvars:   Done updating colvar "re1".
colvars:   Updating colvar "re2".
colvars:   Done updating colvar "re2".
colvars:   Updating colvar "nn_output_1".
colvars:   Updating extended-Lagrangian degree of freedom.
colvars:   Done updating colvar "nn_output_1".
colvars: Adding total colvar energy: 0
colvars: Communicating forces from the colvars to the atoms.
colvars:   Communicating forces from colvar "nn_output_1".
colvars:   Force to be applied: 0
colvars:   Propagate a force of 0 to nn_output_1/neuralNetwork0001/001 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 0 to re2/002 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 0 to nn_output_1/neuralNetwork0001/003 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 0 to nn_output_1/neuralNetwork0001/004 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 0 to nn_output_1/neuralNetwork0001/005 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 0 to nn_output_1/neuralNetwork0001/006 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Done communicating forces from colvar "nn_output_1".
colvars: colvarmodule::analyze(), step = 0.
colvars: colvarmodule::write_traj_files()
colvars: Using colvarproxy_namd::output_stream()
colvars: Synchronizing (emptying the buffer of) trajectory file "test.colvars.traj".
colvars: colvarmodule::end_of_step(), step = 0.
colvars:   End of step for colvar "re1".
colvars:   End of step for colvar "re2".
colvars:   End of step for colvar "nn_output_1".
colvars: ----------------------------------------------------------------------
colvars: Step 0, atoms_new_colvar_forces = { (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ) }
colvars: ----------------------------------------------------------------------
colvars: Step 0, atom_groups_new_colvar_forces = 
colvars: ----------------------------------------------------------------------
colvars: Step 0, volmaps_new_colvar_forces = 
colvars: ----------------------------------------------------------------------
colvars: ----------------------------------------------------------------------
colvars: colvarproxy_namd, step no. 1
colvars: Updating atomic data arrays.
colvars: Updating positions arrays.
colvars: Updating group positions arrays.
colvars: Updating grid objects.
colvars: ----------------------------------------------------------------------
colvars: Step 1, atoms_ids[size = 11] = { 9, 11, 13, 19, 21, 23, 29, 31, 33, 39, 41 }
colvars: Step 1, atoms_refcount[size = 11] = { 1, 2, 2, 3, 3, 2, 3, 3, 2, 2, 1 }
colvars: Step 1, atoms_masses[size = 11] = { 12.011, 14.007, 12.011, 12.011, 14.007, 12.011, 12.011, 14.007, 12.011, 12.011, 14.007 }
colvars: Step 1, atoms_charges[size = 11] = { 0.51, -0.47, 0.07, 0.51, -0.47, 0.07, 0.51, -0.47, 0.07, 0.51, -0.47 }
colvars: Step 1, atoms_positions[size = 11] = { (  6.47494628603609e+00 ,  8.91112820903014e-01 ,  6.48401654079631e-01 ), (  7.10911028471817e+00 ,  1.13636791457596e+00 ,  1.81211648071425e+00 ), (  6.40019281395067e+00 ,  1.21645875880227e+00 ,  3.04889002785069e+00 ), (  5.34616154167060e+00 ,  2.37943620754372e+00 ,  3.08255606317057e+00 ), (  5.67906754406562e+00 ,  3.66609694068294e+00 ,  2.79759665625216e+00 ), (  4.80638586354121e+00 ,  4.80334770946574e+00 ,  2.87243637683752e+00 ), (  3.47161687499288e+00 ,  4.72319203076982e+00 ,  2.16216959122434e+00 ), (  3.46949709492031e+00 ,  4.08467060263482e+00 ,  9.97599615936588e-01 ), (  2.24323597525744e+00 ,  3.79666883251930e+00 ,  2.74406030349985e-01 ), (  1.40297911013714e+00 ,  2.67698104921790e+00 ,  9.35747639900044e-01 ), (  2.05203001217825e+00 ,  1.45368962667541e+00 ,  9.03745676319807e-01 ) }
colvars: Step 1, atoms_total_forces[size = 11] = { (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ) }
colvars: ----------------------------------------------------------------------
colvars: Step 1, atom_groups_ids[size = 0] = 
colvars: Step 1, atom_groups_refcount[size = 0] = 
colvars: Step 1, atom_groups_masses[size = 0] = 
colvars: Step 1, atom_groups_charges[size = 0] = 
colvars: Step 1, atom_groups_coms[size = 0] = 
colvars: Step 1, atom_groups_total_forces[size = 0] = 
colvars: ----------------------------------------------------------------------
colvars: Step 1, volmaps_ids[size = 0] = 
colvars: Step 1, volmaps_values[size = 0] = 
colvars: ----------------------------------------------------------------------
colvars: ----------------------------------------------------------------------
colvars: Collective variables module, step no. 1
colvars: Calculating collective variables.
colvars:   CVC psi_3 has value -65.4719
colvars: CVC psi_1 has value -53.808
colvars: CVC phi_3 has value -72.575
colvars:   Propagate a gradient of 0.00724554 to nn_output_1/neuralNetwork0001/006/psi_3
colvars:   CVC psi_2 has value -37.2913
colvars: CVC phi_1 has value -61.8754
colvars: Propagate a gradient of 0.00522651 to nn_output_1/neuralNetwork0001/003/phi_3
colvars:   Propagate a gradient of 0.0138852 to nn_output_1/neuralNetwork0001/005/psi_2
colvars:   CVC phi_2 has value -51.3917
colvars: Propagate a gradient of 0.0103061 to nn_output_1/neuralNetwork0001/004/psi_1
colvars: Propagate a gradient of 0.00822731 to re1/phi_1
colvars:   Propagate a gradient of 0.0108907 to re2/002/phi_2
colvars:   CVC 001 has value -0.881925
colvars:   CVC 002 has value -0.78143
colvars:   CVC 003 has value -0.95411
colvars:   CVC 004 has value -0.807042
colvars:   CVC 005 has value -0.605868
colvars:   CVC 006 has value -0.909758
colvars:   Propagate a gradient of -0.226277 to nn_output_1/neuralNetwork0001/001
colvars:   Propagate a gradient of -0.177496 to re2/002
colvars:   Propagate a gradient of 0.013317 to nn_output_1/neuralNetwork0001/003
colvars:   Propagate a gradient of -0.112493 to nn_output_1/neuralNetwork0001/004
colvars:   Propagate a gradient of -0.131858 to nn_output_1/neuralNetwork0001/005
colvars:   Propagate a gradient of 0.0976118 to nn_output_1/neuralNetwork0001/006
colvars:   Calculating colvar "re1"'s properties.
colvars:   Colvar "re1" has value -6.18754404386361e+01.
colvars:   Done calculating colvar "re1"'s properties.
colvars:   Calculating colvar "re2"'s properties.
colvars:   Colvar "re2" has value -7.81429640298883e-01.
colvars:   Done calculating colvar "re2"'s properties.
colvars:   Calculating colvar "nn_output_1"'s properties.
colvars:   Colvar "nn_output_1" has value  4.27087400544899e-01.
colvars:   Done calculating colvar "nn_output_1"'s properties.
colvars: Updating collective variable biases.
colvars:   [0/4]: calc_cv_biases_smp(), first = 0, last = 0, bias = abf1
colvars:   Updating ABF bias abf1
colvars: Collecting forces from all biases.
colvars:   Communicating a force to colvar "nn_output_1".
colvars:   Adding biasing force 0 to colvar "nn_output_1".
colvars: Adding total bias energy: 0
colvars: Updating the internal degrees of freedom of colvars (if they have any).
colvars:   Updating colvar "re1".
colvars:   Done updating colvar "re1".
colvars:   Updating colvar "re2".
colvars:   Done updating colvar "re2".
colvars:   Updating colvar "nn_output_1".
colvars:   Updating extended-Lagrangian degree of freedom.
colvars:   Done updating colvar "nn_output_1".
colvars: Adding total colvar energy: 0.000204102
colvars: Communicating forces from the colvars to the atoms.
colvars:   Communicating forces from colvar "nn_output_1".
colvars:   Force to be applied: 1.55545
colvars:   Propagate a force of 1.55545 to nn_output_1/neuralNetwork0001/001 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 1.55545 to re2/002 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 1.55545 to nn_output_1/neuralNetwork0001/003 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 1.55545 to nn_output_1/neuralNetwork0001/004 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 1.55545 to nn_output_1/neuralNetwork0001/005 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 1.55545 to nn_output_1/neuralNetwork0001/006 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Done communicating forces from colvar "nn_output_1".
colvars: colvarmodule::analyze(), step = 1.
colvars: colvarmodule::write_traj_files()
colvars: Using colvarproxy_namd::output_stream()
colvars: colvarmodule::end_of_step(), step = 1.
colvars:   End of step for colvar "re1".
colvars:   End of step for colvar "re2".
colvars:   End of step for colvar "nn_output_1".
colvars: ----------------------------------------------------------------------
colvars: Step 1, atoms_new_colvar_forces = { (  1.85419793474742e-02 , -1.42010354413302e-01 ,  1.98245364583046e-02 ), ( -4.79120431945579e-02 ,  1.94323936850097e-01 , -4.00471474759227e-02 ), ( -2.25075032697059e-02 , -9.95852313015894e-02 ,  2.89935732313183e-02 ), (  7.51490534850700e-02 ,  5.52014725157057e-02 ,  5.42212035937615e-02 ), ( -7.38080878691835e-02 , -4.47418343952616e-02 , -9.28944528395854e-02 ), (  3.11062034181014e-02 ,  5.51049092287351e-02 ,  6.43524592749625e-02 ), ( -8.23055835677756e-03 , -1.40538710626477e-01 ,  3.26262657165374e-02 ), (  4.97398877784108e-02 ,  9.35794467906334e-02 , -9.30979230438333e-02 ), ( -2.12904071162163e-02 ,  4.07832701057187e-02 ,  4.75379191189319e-02 ), ( -2.16382077827912e-02 , -2.20464856440438e-02 , -6.48179891598223e-02 ), (  2.08496835601760e-02 ,  9.92958088978415e-03 ,  4.33015551253476e-02 ) }
colvars: ----------------------------------------------------------------------
colvars: Step 1, atom_groups_new_colvar_forces = 
colvars: ----------------------------------------------------------------------
colvars: Step 1, volmaps_new_colvar_forces = 
colvars: ----------------------------------------------------------------------
colvars: ----------------------------------------------------------------------
colvars: colvarproxy_namd, step no. 2
colvars: Updating atomic data arrays.
colvars: Updating positions arrays.
colvars: Updating group positions arrays.
colvars: Updating grid objects.
colvars: ----------------------------------------------------------------------
colvars: Step 2, atoms_ids[size = 11] = { 9, 11, 13, 19, 21, 23, 29, 31, 33, 39, 41 }
colvars: Step 2, atoms_refcount[size = 11] = { 1, 2, 2, 3, 3, 2, 3, 3, 2, 2, 1 }
colvars: Step 2, atoms_masses[size = 11] = { 12.011, 14.007, 12.011, 12.011, 14.007, 12.011, 12.011, 14.007, 12.011, 12.011, 14.007 }
colvars: Step 2, atoms_charges[size = 11] = { 0.51, -0.47, 0.07, 0.51, -0.47, 0.07, 0.51, -0.47, 0.07, 0.51, -0.47 }
colvars: Step 2, atoms_positions[size = 11] = { (  6.47473172432989e+00 ,  8.92200420738160e-01 ,  6.47792507586082e-01 ), (  7.11209282241862e+00 ,  1.13277210348096e+00 ,  1.81108861606759e+00 ), (  6.39733149615942e+00 ,  1.21772753289954e+00 ,  3.05314507341061e+00 ), (  5.34556865679363e+00 ,  2.38068889963805e+00 ,  3.08303574797951e+00 ), (  5.67510447612504e+00 ,  3.66711078802099e+00 ,  2.79904369474023e+00 ), (  4.80625491247734e+00 ,  4.80303002820451e+00 ,  2.87403943175111e+00 ), (  3.47082942555294e+00 ,  4.72328348097243e+00 ,  2.16056109116957e+00 ), (  3.47134830380784e+00 ,  4.08761792364400e+00 ,  9.95103061915649e-01 ), (  2.24255051156692e+00 ,  3.79433167629502e+00 ,  2.75224858337682e-01 ), (  1.40521121194998e+00 ,  2.68185612072155e+00 ,  9.36559641836758e-01 ), (  2.05003344063499e+00 ,  1.45235728867399e+00 ,  9.05671377378264e-01 ) }
colvars: Step 2, atoms_total_forces[size = 11] = { (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ) }
colvars: ----------------------------------------------------------------------
colvars: Step 2, atom_groups_ids[size = 0] = 
colvars: Step 2, atom_groups_refcount[size = 0] = 
colvars: Step 2, atom_groups_masses[size = 0] = 
colvars: Step 2, atom_groups_charges[size = 0] = 
colvars: Step 2, atom_groups_coms[size = 0] = 
colvars: Step 2, atom_groups_total_forces[size = 0] = 
colvars: ----------------------------------------------------------------------
colvars: Step 2, volmaps_ids[size = 0] = 
colvars: Step 2, volmaps_values[size = 0] = 
colvars: ----------------------------------------------------------------------
colvars: ----------------------------------------------------------------------
colvars: Collective variables module, step no. 2
colvars: Calculating collective variables.
colvars:   CVC psi_3 has value -65.6859
colvars: CVC phi_1 has value -61.5054
colvars: CVC psi_1 has value -53.9247
colvars:   Propagate a gradient of 0.00718618 to nn_output_1/neuralNetwork0001/006/psi_3
colvars: Propagate a gradient of 0.0102773 to nn_output_1/neuralNetwork0001/004/psi_1
colvars: CVC psi_2 has value -37.4158
colvars: Propagate a gradient of 0.0138622 to nn_output_1/neuralNetwork0001/005/psi_2
colvars: CVC phi_2 has value -51.509
colvars: CVC phi_3 has value -72.1053
colvars: Propagate a gradient of 0.0108628 to re2/002/phi_2
colvars: Propagate a gradient of 0.00832654 to re1/phi_1
colvars: Propagate a gradient of 0.00536286 to nn_output_1/neuralNetwork0001/003/phi_3
colvars:   CVC 001 has value -0.878862
colvars:   CVC 002 has value -0.782706
colvars:   CVC 003 has value -0.951623
colvars:   CVC 004 has value -0.808244
colvars:   CVC 005 has value -0.607595
colvars:   CVC 006 has value -0.911302
colvars:   Propagate a gradient of -0.222977 to nn_output_1/neuralNetwork0001/001
colvars:   Propagate a gradient of -0.179882 to re2/002
colvars:   Propagate a gradient of 0.0130564 to nn_output_1/neuralNetwork0001/003
colvars:   Propagate a gradient of -0.112028 to nn_output_1/neuralNetwork0001/004
colvars:   Propagate a gradient of -0.131942 to nn_output_1/neuralNetwork0001/005
colvars:   Propagate a gradient of 0.0973491 to nn_output_1/neuralNetwork0001/006
colvars:   Calculating colvar "re1"'s properties.
colvars:   Colvar "re1" has value -6.15054170011305e+01.
colvars:   Done calculating colvar "re1"'s properties.
colvars:   Calculating colvar "re2"'s properties.
colvars:   Colvar "re2" has value -7.82706144257008e-01.
colvars:   Done calculating colvar "re2"'s properties.
colvars:   Calculating colvar "nn_output_1"'s properties.
colvars:   Colvar "nn_output_1" has value  4.26872450296396e-01.
colvars:   Done calculating colvar "nn_output_1"'s properties.
colvars: Updating collective variable biases.
colvars:   [0/4]: calc_cv_biases_smp(), first = 0, last = 0, bias = abf1
colvars:   Updating ABF bias abf1
colvars: Collecting forces from all biases.
colvars:   Communicating a force to colvar "nn_output_1".
colvars:   Adding biasing force 0 to colvar "nn_output_1".
colvars: Adding total bias energy: 0
colvars: Updating the internal degrees of freedom of colvars (if they have any).
colvars:   Updating colvar "re1".
colvars:   Done updating colvar "re1".
colvars:   Updating colvar "re2".
colvars:   Done updating colvar "re2".
colvars:   Updating colvar "nn_output_1".
colvars:   Updating extended-Lagrangian degree of freedom.
colvars:   Done updating colvar "nn_output_1".
colvars: Adding total colvar energy: 0.000796379
colvars: Communicating forces from the colvars to the atoms.
colvars:   Communicating forces from colvar "nn_output_1".
colvars:   Force to be applied: 2.82639
colvars:   Propagate a force of 2.82639 to nn_output_1/neuralNetwork0001/001 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 2.82639 to re2/002 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 2.82639 to nn_output_1/neuralNetwork0001/003 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 2.82639 to nn_output_1/neuralNetwork0001/004 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 2.82639 to nn_output_1/neuralNetwork0001/005 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 2.82639 to nn_output_1/neuralNetwork0001/006 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Done communicating forces from colvar "nn_output_1".
colvars: colvarmodule::analyze(), step = 2.
colvars: colvarmodule::write_traj_files()
colvars: Using colvarproxy_namd::output_stream()
colvars: colvarmodule::end_of_step(), step = 2.
colvars:   End of step for colvar "re1".
colvars:   End of step for colvar "re2".
colvars:   End of step for colvar "nn_output_1".
colvars: ----------------------------------------------------------------------
colvars: Step 2, atoms_new_colvar_forces = { (  3.16670759296230e-02 , -2.57028685293464e-01 ,  3.58038342454548e-02 ), ( -8.30541661974486e-02 ,  3.51001345162831e-01 , -7.18029969251361e-02 ), ( -4.29849667089261e-02 , -1.79740452273549e-01 ,  5.23121593211285e-02 ), (  1.38510373809214e-01 ,  1.00700718973645e-01 ,  1.02546667257060e-01 ), ( -1.36782962109815e-01 , -8.19374743934022e-02 , -1.77296379706498e-01 ), (  5.59707020954365e-02 ,  9.90827654227238e-02 ,  1.23494319796994e-01 ), ( -1.34969594520799e-02 , -2.54422823742094e-01 ,  5.61915288374382e-02 ), (  8.97816264702486e-02 ,  1.70756148254915e-01 , -1.67845049485296e-01 ), ( -3.80772603446031e-02 ,  7.36609593415022e-02 ,  8.56671226618340e-02 ), ( -3.91891378066814e-02 , -3.98714067980665e-02 , -1.16689115041718e-01 ), (  3.76556743150317e-02 ,  1.77989053449587e-02 ,  7.76179090387382e-02 ) }
colvars: ----------------------------------------------------------------------
colvars: Step 2, atom_groups_new_colvar_forces = 
colvars: ----------------------------------------------------------------------
colvars: Step 2, volmaps_new_colvar_forces = 
colvars: ----------------------------------------------------------------------
colvars: ----------------------------------------------------------------------
colvars: colvarproxy_namd, step no. 3
colvars: Updating atomic data arrays.
colvars: Updating positions arrays.
colvars: Updating group positions arrays.
colvars: Updating grid objects.
colvars: ----------------------------------------------------------------------
colvars: Step 3, atoms_ids[size = 11] = { 9, 11, 13, 19, 21, 23, 29, 31, 33, 39, 41 }
colvars: Step 3, atoms_refcount[size = 11] = { 1, 2, 2, 3, 3, 2, 3, 3, 2, 2, 1 }
colvars: Step 3, atoms_masses[size = 11] = { 12.011, 14.007, 12.011, 12.011, 14.007, 12.011, 12.011, 14.007, 12.011, 12.011, 14.007 }
colvars: Step 3, atoms_charges[size = 11] = { 0.51, -0.47, 0.07, 0.51, -0.47, 0.07, 0.51, -0.47, 0.07, 0.51, -0.47 }
colvars: Step 3, atoms_positions[size = 11] = { (  6.47465482636166e+00 ,  8.92903002229217e-01 ,  6.46766031460037e-01 ), (  7.11529225167827e+00 ,  1.12922572124072e+00 ,  1.80987492864517e+00 ), (  6.39436156684258e+00 ,  1.21860902619520e+00 ,  3.05732159304715e+00 ), (  5.34410062360871e+00 ,  2.38160487813564e+00 ,  3.08342296556394e+00 ), (  5.67101457002445e+00 ,  3.66828685740909e+00 ,  2.80052887839580e+00 ), (  4.80633486381467e+00 ,  4.80253331042227e+00 ,  2.87589354982693e+00 ), (  3.46957122046519e+00 ,  4.72354184941522e+00 ,  2.15915318555398e+00 ), (  3.47334060743676e+00 ,  4.09067542019984e+00 ,  9.92794776980176e-01 ), (  2.24202493400073e+00 ,  3.79177143802339e+00 ,  2.76270334811053e-01 ), (  1.40742648143405e+00 ,  2.68628116934226e+00 ,  9.37376520403622e-01 ), (  2.04820239536019e+00 ,  1.45112781750966e+00 ,  9.07986049470107e-01 ) }
colvars: Step 3, atoms_total_forces[size = 11] = { (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ) }
colvars: ----------------------------------------------------------------------
colvars: Step 3, atom_groups_ids[size = 0] = 
colvars: Step 3, atom_groups_refcount[size = 0] = 
colvars: Step 3, atom_groups_masses[size = 0] = 
colvars: Step 3, atom_groups_charges[size = 0] = 
colvars: Step 3, atom_groups_coms[size = 0] = 
colvars: Step 3, atom_groups_total_forces[size = 0] = 
colvars: ----------------------------------------------------------------------
colvars: Step 3, volmaps_ids[size = 0] = 
colvars: Step 3, volmaps_values[size = 0] = 
colvars: ----------------------------------------------------------------------
colvars: ----------------------------------------------------------------------
colvars: Collective variables module, step no. 3
colvars: Calculating collective variables.
colvars:   CVC psi_3 has value -65.8806
colvars:   Propagate a gradient of 0.00713211 to nn_output_1/neuralNetwork0001/006/psi_3
colvars:   CVC phi_1 has value -61.1561
colvars:   Propagate a gradient of 0.0084199 to re1/phi_1
colvars: CVC psi_1 has value -54.0522
colvars:   CVC phi_2 has value -51.6115
colvars: CVC psi_2 has value -37.5366
colvars: CVC phi_3 has value -71.633
colvars: Propagate a gradient of 0.0102459 to nn_output_1/neuralNetwork0001/004/psi_1
colvars: Propagate a gradient of 0.0138398 to nn_output_1/neuralNetwork0001/005/psi_2
colvars:   Propagate a gradient of 0.0108383 to re2/002/phi_2
colvars: Propagate a gradient of 0.00549958 to nn_output_1/neuralNetwork0001/003/phi_3
colvars:   CVC 001 has value -0.875937
colvars:   CVC 002 has value -0.783818
colvars:   CVC 003 has value -0.949058
colvars:   CVC 004 has value -0.809552
colvars:   CVC 005 has value -0.609268
colvars:   CVC 006 has value -0.912696
colvars:   Propagate a gradient of -0.219899 to nn_output_1/neuralNetwork0001/001
colvars:   Propagate a gradient of -0.182094 to re2/002
colvars:   Propagate a gradient of 0.01281 to nn_output_1/neuralNetwork0001/003
colvars:   Propagate a gradient of -0.111573 to nn_output_1/neuralNetwork0001/004
colvars:   Propagate a gradient of -0.131977 to nn_output_1/neuralNetwork0001/005
colvars:   Propagate a gradient of 0.0971127 to nn_output_1/neuralNetwork0001/006
colvars:   Calculating colvar "re1"'s properties.
colvars:   Colvar "re1" has value -6.11560973104512e+01.
colvars:   Done calculating colvar "re1"'s properties.
colvars:   Calculating colvar "re2"'s properties.
colvars:   Colvar "re2" has value -7.83817658868057e-01.
colvars:   Done calculating colvar "re2"'s properties.
colvars:   Calculating colvar "nn_output_1"'s properties.
colvars:   Colvar "nn_output_1" has value  4.26690647683911e-01.
colvars:   Done calculating colvar "nn_output_1"'s properties.
colvars: Updating collective variable biases.
colvars:   [0/4]: calc_cv_biases_smp(), first = 0, last = 0, bias = abf1
colvars:   Updating ABF bias abf1
colvars: Collecting forces from all biases.
colvars:   Communicating a force to colvar "nn_output_1".
colvars:   Adding biasing force 0 to colvar "nn_output_1".
colvars: Adding total bias energy: 0
colvars: Updating the internal degrees of freedom of colvars (if they have any).
colvars:   Updating colvar "re1".
colvars:   Done updating colvar "re1".
colvars:   Updating colvar "re2".
colvars:   Done updating colvar "re2".
colvars:   Updating colvar "nn_output_1".
colvars:   Updating extended-Lagrangian degree of freedom.
colvars:   Done updating colvar "nn_output_1".
colvars: Adding total colvar energy: 0.00166276
colvars: Communicating forces from the colvars to the atoms.
colvars:   Communicating forces from colvar "nn_output_1".
colvars:   Force to be applied: 3.88354
colvars:   Propagate a force of 3.88354 to nn_output_1/neuralNetwork0001/001 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 3.88354 to re2/002 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 3.88354 to nn_output_1/neuralNetwork0001/003 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 3.88354 to nn_output_1/neuralNetwork0001/004 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 3.88354 to nn_output_1/neuralNetwork0001/005 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 3.88354 to nn_output_1/neuralNetwork0001/006 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Done communicating forces from colvar "nn_output_1".
colvars: colvarmodule::analyze(), step = 3.
colvars: colvarmodule::write_traj_files()
colvars: Using colvarproxy_namd::output_stream()
colvars: colvarmodule::end_of_step(), step = 3.
colvars:   End of step for colvar "re1".
colvars:   End of step for colvar "re2".
colvars:   End of step for colvar "nn_output_1".
colvars: ----------------------------------------------------------------------
colvars: Step 3, atoms_new_colvar_forces = { (  4.09695208488336e-02 , -3.51582124706577e-01 ,  4.88692292278128e-02 ), ( -1.08980323349206e-01 ,  4.79090516290699e-01 , -9.73107358640952e-02 ), ( -6.17810302998475e-02 , -2.45228390199210e-01 ,  7.11444253655458e-02 ), (  1.92947561428968e-01 ,  1.38847362520158e-01 ,  1.46373386010056e-01 ), ( -1.91506339377879e-01 , -1.13278369903985e-01 , -2.54795735022303e-01 ), (  7.61589524919986e-02 ,  1.34438142357655e-01 ,  1.78399558084712e-01 ), ( -1.65966157656363e-02 , -3.47872108512166e-01 ,  7.29080645626439e-02 ), (  1.22593223587779e-01 ,  2.35307990900131e-01 , -2.28733014080312e-01 ), ( -5.16088051544416e-02 ,  1.00736208058751e-01 ,  1.16850683687013e-01 ), ( -5.36257245826763e-02 , -5.46332029070615e-02 , -1.59055267076128e-01 ), (  5.14295801721084e-02 ,  2.41739761016036e-02 ,  1.05349405105054e-01 ) }
colvars: ----------------------------------------------------------------------
colvars: Step 3, atom_groups_new_colvar_forces = 
colvars: ----------------------------------------------------------------------
colvars: Step 3, volmaps_new_colvar_forces = 
colvars: ----------------------------------------------------------------------
colvars: ----------------------------------------------------------------------
colvars: colvarproxy_namd, step no. 4
colvars: Updating atomic data arrays.
colvars: Updating positions arrays.
colvars: Updating group positions arrays.
colvars: Updating grid objects.
colvars: ----------------------------------------------------------------------
colvars: Step 4, atoms_ids[size = 11] = { 9, 11, 13, 19, 21, 23, 29, 31, 33, 39, 41 }
colvars: Step 4, atoms_refcount[size = 11] = { 1, 2, 2, 3, 3, 2, 3, 3, 2, 2, 1 }
colvars: Step 4, atoms_masses[size = 11] = { 12.011, 14.007, 12.011, 12.011, 14.007, 12.011, 12.011, 14.007, 12.011, 12.011, 14.007 }
colvars: Step 4, atoms_charges[size = 11] = { 0.51, -0.47, 0.07, 0.51, -0.47, 0.07, 0.51, -0.47, 0.07, 0.51, -0.47 }
colvars: Step 4, atoms_positions[size = 11] = { (  6.47464535577907e+00 ,  8.93530015471656e-01 ,  6.45568956916191e-01 ), (  7.11854723574973e+00 ,  1.12570567821472e+00 ,  1.80874630977729e+00 ), (  6.39137066932600e+00 ,  1.21973632939717e+00 ,  3.06126483469806e+00 ), (  5.34210377335373e+00 ,  2.38214145100393e+00 ,  3.08426136514698e+00 ), (  5.66725293216256e+00 ,  3.66954225362503e+00 ,  2.80202808791481e+00 ), (  4.80642280942622e+00 ,  4.80258145092360e+00 ,  2.87741896239629e+00 ), (  3.46813773828015e+00 ,  4.72373619242284e+00 ,  2.15841259752130e+00 ), (  3.47512286079010e+00 ,  4.09385998458285e+00 ,  9.90069297469878e-01 ), (  2.24151555764019e+00 ,  3.78905166285853e+00 ,  2.76746873154951e-01 ), (  1.40919730815509e+00 ,  2.69017161852622e+00 ,  9.37915899761304e-01 ), (  2.04634550299170e+00 ,  1.45026271830661e+00 ,  9.10518952496897e-01 ) }
colvars: Step 4, atoms_total_forces[size = 11] = { (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ) }
colvars: ----------------------------------------------------------------------
colvars: Step 4, atom_groups_ids[size = 0] = 
colvars: Step 4, atom_groups_refcount[size = 0] = 
colvars: Step 4, atom_groups_masses[size = 0] = 
colvars: Step 4, atom_groups_charges[size = 0] = 
colvars: Step 4, atom_groups_coms[size = 0] = 
colvars: Step 4, atom_groups_total_forces[size = 0] = 
colvars: ----------------------------------------------------------------------
colvars: Step 4, volmaps_ids[size = 0] = 
colvars: Step 4, volmaps_values[size = 0] = 
colvars: ----------------------------------------------------------------------
colvars: ----------------------------------------------------------------------
colvars: Collective variables module, step no. 4
colvars: Calculating collective variables.
colvars:   CVC psi_3 has value -66.0608
colvars: CVC phi_3 has value -71.1118
colvars: Propagate a gradient of 0.00565003 to nn_output_1/neuralNetwork0001/003/phi_3
colvars:   Propagate a gradient of 0.00708198 to nn_output_1/neuralNetwork0001/006/psi_3
colvars: CVC psi_1 has value -54.1676
colvars: CVC phi_1 has value -60.7882
colvars: Propagate a gradient of 0.0102174 to nn_output_1/neuralNetwork0001/004/psi_1
colvars: Propagate a gradient of 0.0085179 to re1/phi_1
colvars: CVC psi_2 has value -37.7458
colvars:   CVC phi_2 has value -51.655
colvars:   Propagate a gradient of 0.0108279 to re2/002/phi_2
colvars: Propagate a gradient of 0.0138009 to nn_output_1/neuralNetwork0001/005/psi_2
colvars:   CVC 001 has value -0.872821
colvars:   CVC 002 has value -0.78429
colvars:   CVC 003 has value -0.946152
colvars:   CVC 004 has value -0.810733
colvars:   CVC 005 has value -0.61216
colvars:   CVC 006 has value -0.913976
colvars:   Propagate a gradient of -0.216916 to nn_output_1/neuralNetwork0001/001
colvars:   Propagate a gradient of -0.184386 to re2/002
colvars:   Propagate a gradient of 0.0125474 to nn_output_1/neuralNetwork0001/003
colvars:   Propagate a gradient of -0.11105 to nn_output_1/neuralNetwork0001/004
colvars:   Propagate a gradient of -0.131787 to nn_output_1/neuralNetwork0001/005
colvars:   Propagate a gradient of 0.0970029 to nn_output_1/neuralNetwork0001/006
colvars:   Calculating colvar "re1"'s properties.
colvars:   Colvar "re1" has value -6.07881772341548e+01.
colvars:   Done calculating colvar "re1"'s properties.
colvars:   Calculating colvar "re2"'s properties.
colvars:   Colvar "re2" has value -7.84289786504087e-01.
colvars:   Done calculating colvar "re2"'s properties.
colvars:   Calculating colvar "nn_output_1"'s properties.
colvars:   Colvar "nn_output_1" has value  4.26522005235960e-01.
colvars:   Done calculating colvar "nn_output_1"'s properties.
colvars: Updating collective variable biases.
colvars:   [0/4]: calc_cv_biases_smp(), first = 0, last = 0, bias = abf1
colvars:   Updating ABF bias abf1
colvars: Collecting forces from all biases.
colvars:   Communicating a force to colvar "nn_output_1".
colvars:   Adding biasing force 0 to colvar "nn_output_1".
colvars: Adding total bias energy: 0
colvars: Updating the internal degrees of freedom of colvars (if they have any).
colvars:   Updating colvar "re1".
colvars:   Done updating colvar "re1".
colvars:   Updating colvar "re2".
colvars:   Done updating colvar "re2".
colvars:   Updating colvar "nn_output_1".
colvars:   Updating extended-Lagrangian degree of freedom.
colvars:   Done updating colvar "nn_output_1".
colvars: Adding total colvar energy: 0.00200225
colvars: Communicating forces from the colvars to the atoms.
colvars:   Communicating forces from colvar "nn_output_1".
colvars:   Force to be applied: 4.86863
colvars:   Propagate a force of 4.86863 to nn_output_1/neuralNetwork0001/001 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 4.86863 to re2/002 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 4.86863 to nn_output_1/neuralNetwork0001/003 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 4.86863 to nn_output_1/neuralNetwork0001/004 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 4.86863 to nn_output_1/neuralNetwork0001/005 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 4.86863 to nn_output_1/neuralNetwork0001/006 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Done communicating forces from colvar "nn_output_1".
colvars: colvarmodule::analyze(), step = 4.
colvars: colvarmodule::write_traj_files()
colvars: Using colvarproxy_namd::output_stream()
colvars: colvarmodule::end_of_step(), step = 4.
colvars:   End of step for colvar "re1".
colvars:   End of step for colvar "re2".
colvars:   End of step for colvar "nn_output_1".
colvars: ----------------------------------------------------------------------
colvars: Step 4, atoms_new_colvar_forces = { (  4.81995764468608e-02 , -4.38967193847710e-01 ,  6.09379997743086e-02 ), ( -1.29976909899481e-01 ,  5.97199732491370e-01 , -1.20294622226645e-01 ), ( -8.12131388756387e-02 , -3.05920832759648e-01 ,  8.77575375517982e-02 ), (  2.45309078525405e-01 ,  1.75146567788164e-01 ,  1.91685212704562e-01 ), ( -2.43779228249407e-01 , -1.42434426746713e-01 , -3.35719206346272e-01 ), (  9.31021009660239e-02 ,  1.65050326631772e-01 ,  2.37377587872461e-01 ), ( -1.69552175876301e-02 , -4.32096333582562e-01 ,  8.37008786311947e-02 ), (  1.52144983161631e-01 ,  2.94487879532466e-01 , -2.83618079927286e-01 ), ( -6.40350077010303e-02 ,  1.25966184254985e-01 ,  1.45567577727684e-01 ), ( -6.69486400507292e-02 , -6.85087203081480e-02 , -1.98142131935949e-01 ), (  6.41524032639968e-02 ,  3.00768165460231e-02 ,  1.30747246174145e-01 ) }
colvars: ----------------------------------------------------------------------
colvars: Step 4, atom_groups_new_colvar_forces = 
colvars: ----------------------------------------------------------------------
colvars: Step 4, volmaps_new_colvar_forces = 
colvars: ----------------------------------------------------------------------
colvars: ----------------------------------------------------------------------
colvars: colvarproxy_namd, step no. 5
colvars: Updating atomic data arrays.
colvars: Updating positions arrays.
colvars: Updating group positions arrays.
colvars: Updating grid objects.
colvars: ----------------------------------------------------------------------
colvars: Step 5, atoms_ids[size = 11] = { 9, 11, 13, 19, 21, 23, 29, 31, 33, 39, 41 }
colvars: Step 5, atoms_refcount[size = 11] = { 1, 2, 2, 3, 3, 2, 3, 3, 2, 2, 1 }
colvars: Step 5, atoms_masses[size = 11] = { 12.011, 14.007, 12.011, 12.011, 14.007, 12.011, 12.011, 14.007, 12.011, 12.011, 14.007 }
colvars: Step 5, atoms_charges[size = 11] = { 0.51, -0.47, 0.07, 0.51, -0.47, 0.07, 0.51, -0.47, 0.07, 0.51, -0.47 }
colvars: Step 5, atoms_positions[size = 11] = { (  6.47496156216099e+00 ,  8.94047912819975e-01 ,  6.44350327633324e-01 ), (  7.12192887527187e+00 ,  1.12214537906216e+00 ,  1.80742159141135e+00 ), (  6.38842756099569e+00 ,  1.22113737847791e+00 ,  3.06490050881871e+00 ), (  5.33913313420184e+00 ,  2.38252304070471e+00 ,  3.08570295180158e+00 ), (  5.66373790487267e+00 ,  3.67081286326405e+00 ,  2.80360168168320e+00 ), (  4.80645331562478e+00 ,  4.80334424560873e+00 ,  2.87894767359989e+00 ), (  3.46643160357312e+00 ,  4.72363212115510e+00 ,  2.15786573156169e+00 ), (  3.47668658189942e+00 ,  4.09721387928306e+00 ,  9.87101454286433e-01 ), (  2.24089698271235e+00 ,  3.78625328254962e+00 ,  2.76725078081390e-01 ), (  1.41125326559306e+00 ,  2.69377888757568e+00 ,  9.38744145547113e-01 ), (  2.04446448333582e+00 ,  1.44981047856160e+00 ,  9.13258258856173e-01 ) }
colvars: Step 5, atoms_total_forces[size = 11] = { (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ) }
colvars: ----------------------------------------------------------------------
colvars: Step 5, atom_groups_ids[size = 0] = 
colvars: Step 5, atom_groups_refcount[size = 0] = 
colvars: Step 5, atom_groups_masses[size = 0] = 
colvars: Step 5, atom_groups_charges[size = 0] = 
colvars: Step 5, atom_groups_coms[size = 0] = 
colvars: Step 5, atom_groups_total_forces[size = 0] = 
colvars: ----------------------------------------------------------------------
colvars: Step 5, volmaps_ids[size = 0] = 
colvars: Step 5, volmaps_values[size = 0] = 
colvars: ----------------------------------------------------------------------
colvars: ----------------------------------------------------------------------
colvars: Collective variables module, step no. 5
colvars: Calculating collective variables.
colvars:   CVC psi_3 has value -66.2764
colvars: CVC psi_1 has value -54.272
colvars: CVC phi_3 has value -70.5483
colvars: Propagate a gradient of 0.0101916 to nn_output_1/neuralNetwork0001/004/psi_1
colvars: CVC phi_1 has value -60.394
colvars:   Propagate a gradient of 0.00702189 to nn_output_1/neuralNetwork0001/006/psi_3
colvars: Propagate a gradient of 0.0086225 to re1/phi_1
colvars:   CVC psi_2 has value -38.0242
colvars:   Propagate a gradient of 0.0137488 to nn_output_1/neuralNetwork0001/005/psi_2
colvars: CVC phi_2 has value -51.6744
colvars: Propagate a gradient of 0.00581215 to nn_output_1/neuralNetwork0001/003/phi_3
colvars: Propagate a gradient of 0.0108233 to re2/002/phi_2
colvars:   CVC 001 has value -0.869443
colvars:   CVC 002 has value -0.7845
colvars:   CVC 003 has value -0.942923
colvars:   CVC 004 has value -0.811798
colvars:   CVC 005 has value -0.615995
colvars:   CVC 006 has value -0.915497
colvars:   Propagate a gradient of -0.213785 to nn_output_1/neuralNetwork0001/001
colvars:   Propagate a gradient of -0.186936 to re2/002
colvars:   Propagate a gradient of 0.0122585 to nn_output_1/neuralNetwork0001/003
colvars:   Propagate a gradient of -0.110455 to nn_output_1/neuralNetwork0001/004
colvars:   Propagate a gradient of -0.131467 to nn_output_1/neuralNetwork0001/005
colvars:   Propagate a gradient of 0.09696 to nn_output_1/neuralNetwork0001/006
colvars:   Calculating colvar "re1"'s properties.
colvars:   Colvar "re1" has value -6.03940065884916e+01.
colvars:   Done calculating colvar "re1"'s properties.
colvars:   Calculating colvar "re2"'s properties.
colvars:   Colvar "re2" has value -7.84499763961354e-01.
colvars:   Done calculating colvar "re2"'s properties.
colvars:   Calculating colvar "nn_output_1"'s properties.
colvars:   Colvar "nn_output_1" has value  4.26348818295766e-01.
colvars:   Done calculating colvar "nn_output_1"'s properties.
colvars: Updating collective variable biases.
colvars:   [0/4]: calc_cv_biases_smp(), first = 0, last = 0, bias = abf1
colvars:   Updating ABF bias abf1
colvars: Collecting forces from all biases.
colvars:   Communicating a force to colvar "nn_output_1".
colvars:   Adding biasing force 0 to colvar "nn_output_1".
colvars: Adding total bias energy: 0
colvars: Updating the internal degrees of freedom of colvars (if they have any).
colvars:   Updating colvar "re1".
colvars:   Done updating colvar "re1".
colvars:   Updating colvar "re2".
colvars:   Done updating colvar "re2".
colvars:   Updating colvar "nn_output_1".
colvars:   Updating extended-Lagrangian degree of freedom.
colvars:   Done updating colvar "nn_output_1".
colvars: Adding total colvar energy: 0.00318452
colvars: Communicating forces from the colvars to the atoms.
colvars:   Communicating forces from colvar "nn_output_1".
colvars:   Force to be applied: 5.88355
colvars:   Propagate a force of 5.88355 to nn_output_1/neuralNetwork0001/001 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 5.88355 to re2/002 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 5.88355 to nn_output_1/neuralNetwork0001/003 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 5.88355 to nn_output_1/neuralNetwork0001/004 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 5.88355 to nn_output_1/neuralNetwork0001/005 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 5.88355 to nn_output_1/neuralNetwork0001/006 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Done communicating forces from colvar "nn_output_1".
colvars: colvarmodule::analyze(), step = 5.
colvars: colvarmodule::write_traj_files()
colvars: Using colvarproxy_namd::output_stream()
colvars: colvarmodule::end_of_step(), step = 5.
colvars:   End of step for colvar "re1".
colvars:   End of step for colvar "re2".
colvars:   End of step for colvar "nn_output_1".
colvars: ----------------------------------------------------------------------
colvars: Step 5, atoms_new_colvar_forces = { (  5.44175520937491e-02 , -5.28243240236350e-01 ,  7.33270349370304e-02 ), ( -1.48769592030121e-01 ,  7.17694076825432e-01 , -1.43277680777093e-01 ), ( -1.02757403208013e-01 , -3.68140456810522e-01 ,  1.03683354766135e-01 ), (  3.00525367477902e-01 ,  2.13285911427087e-01 ,  2.43257721594628e-01 ), ( -2.98617092441584e-01 , -1.72334732945480e-01 , -4.27626783004677e-01 ), (  1.08281836653417e-01 ,  1.94101724923640e-01 ,  3.05932093195442e-01 ), ( -1.43763103752402e-02 , -5.16013313593728e-01 ,  8.97530576529587e-02 ), (  1.81256067923480e-01 ,  3.54652457522961e-01 , -3.38188375085700e-01 ), ( -7.64550212153970e-02 ,  1.51644066236305e-01 ,  1.74509342910709e-01 ), ( -8.07156310997200e-02 , -8.27455924188239e-02 , -2.37701094973165e-01 ), (  7.72102262215281e-02 ,  3.60990990694790e-02 ,  1.56331328783731e-01 ) }
colvars: ----------------------------------------------------------------------
colvars: Step 5, atom_groups_new_colvar_forces = 
colvars: ----------------------------------------------------------------------
colvars: Step 5, volmaps_new_colvar_forces = 
colvars: ----------------------------------------------------------------------
colvars: ----------------------------------------------------------------------
colvars: colvarproxy_namd, step no. 6
colvars: Updating atomic data arrays.
colvars: Updating positions arrays.
colvars: Updating group positions arrays.
colvars: Updating grid objects.
colvars: ----------------------------------------------------------------------
colvars: Step 6, atoms_ids[size = 11] = { 9, 11, 13, 19, 21, 23, 29, 31, 33, 39, 41 }
colvars: Step 6, atoms_refcount[size = 11] = { 1, 2, 2, 3, 3, 2, 3, 3, 2, 2, 1 }
colvars: Step 6, atoms_masses[size = 11] = { 12.011, 14.007, 12.011, 12.011, 14.007, 12.011, 12.011, 14.007, 12.011, 12.011, 14.007 }
colvars: Step 6, atoms_charges[size = 11] = { 0.51, -0.47, 0.07, 0.51, -0.47, 0.07, 0.51, -0.47, 0.07, 0.51, -0.47 }
colvars: Step 6, atoms_positions[size = 11] = { (  6.47556338838935e+00 ,  8.94274823553300e-01 ,  6.42739875855197e-01 ), (  7.12523022310236e+00 ,  1.11876868144533e+00 ,  1.80642220876134e+00 ), (  6.38524700935318e+00 ,  1.22256843078867e+00 ,  3.06839141928302e+00 ), (  5.33548849703744e+00 ,  2.38277683527066e+00 ,  3.08731466502990e+00 ), (  5.66041116995988e+00 ,  3.67193631902045e+00 ,  2.80492819049374e+00 ), (  4.80676571747524e+00 ,  4.80428541318929e+00 ,  2.88022333852979e+00 ), (  3.46474817360379e+00 ,  4.72350467820595e+00 ,  2.15776281266499e+00 ), (  3.47839457173682e+00 ,  4.10078202692079e+00 ,  9.84004905367450e-01 ), (  2.24020135796924e+00 ,  3.78353085337265e+00 ,  2.76672910147925e-01 ), (  1.41275233959202e+00 ,  2.69706321460123e+00 ,  9.39778121488278e-01 ), (  2.04268977071106e+00 ,  1.44950405086160e+00 ,  9.15951470967483e-01 ) }
colvars: Step 6, atoms_total_forces[size = 11] = { (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ) }
colvars: ----------------------------------------------------------------------
colvars: Step 6, atom_groups_ids[size = 0] = 
colvars: Step 6, atom_groups_refcount[size = 0] = 
colvars: Step 6, atom_groups_masses[size = 0] = 
colvars: Step 6, atom_groups_charges[size = 0] = 
colvars: Step 6, atom_groups_coms[size = 0] = 
colvars: Step 6, atom_groups_total_forces[size = 0] = 
colvars: ----------------------------------------------------------------------
colvars: Step 6, volmaps_ids[size = 0] = 
colvars: Step 6, volmaps_values[size = 0] = 
colvars: ----------------------------------------------------------------------
colvars: ----------------------------------------------------------------------
colvars: Collective variables module, step no. 6
colvars: Calculating collective variables.
colvars:   CVC psi_3 has value -66.4851
colvars:   Propagate a gradient of 0.00696365 to nn_output_1/neuralNetwork0001/006/psi_3
colvars: CVC phi_3 has value -69.9556
colvars:   CVC phi_1 has value -60.0199
colvars:   Propagate a gradient of 0.00872139 to re1/phi_1
colvars: CVC psi_1 has value -54.3491
colvars: Propagate a gradient of 0.0101726 to nn_output_1/neuralNetwork0001/004/psi_1
colvars:   CVC phi_2 has value -51.6692
colvars: Propagate a gradient of 0.00598209 to nn_output_1/neuralNetwork0001/003/phi_3
colvars: CVC psi_2 has value -38.3582
colvars: Propagate a gradient of 0.0136859 to nn_output_1/neuralNetwork0001/005/psi_2
colvars:   Propagate a gradient of 0.0108245 to re2/002/phi_2
colvars:   CVC 001 has value -0.866199
colvars:   CVC 002 has value -0.784443
colvars:   CVC 003 has value -0.939427
colvars:   CVC 004 has value -0.812583
colvars:   CVC 005 has value -0.620577
colvars:   CVC 006 has value -0.916956
colvars:   Propagate a gradient of -0.210885 to nn_output_1/neuralNetwork0001/001
colvars:   Propagate a gradient of -0.189485 to re2/002
colvars:   Propagate a gradient of 0.0119735 to nn_output_1/neuralNetwork0001/003
colvars:   Propagate a gradient of -0.109836 to nn_output_1/neuralNetwork0001/004
colvars:   Propagate a gradient of -0.131037 to nn_output_1/neuralNetwork0001/005
colvars:   Propagate a gradient of 0.0969943 to nn_output_1/neuralNetwork0001/006
colvars:   Calculating colvar "re1"'s properties.
colvars:   Colvar "re1" has value -6.00199282650134e+01.
colvars:   Done calculating colvar "re1"'s properties.
colvars:   Calculating colvar "re2"'s properties.
colvars:   Colvar "re2" has value -7.84443110163427e-01.
colvars:   Done calculating colvar "re2"'s properties.
colvars:   Calculating colvar "nn_output_1"'s properties.
colvars:   Colvar "nn_output_1" has value  4.26238043055371e-01.
colvars:   Done calculating colvar "nn_output_1"'s properties.
colvars: Updating collective variable biases.
colvars:   [0/4]: calc_cv_biases_smp(), first = 0, last = 0, bias = abf1
colvars:   Updating ABF bias abf1
colvars: Collecting forces from all biases.
colvars:   Communicating a force to colvar "nn_output_1".
colvars:   Adding biasing force 0 to colvar "nn_output_1".
colvars: Adding total bias energy: 0
colvars: Updating the internal degrees of freedom of colvars (if they have any).
colvars:   Updating colvar "re1".
colvars:   Done updating colvar "re1".
colvars:   Updating colvar "re2".
colvars:   Done updating colvar "re2".
colvars:   Updating colvar "nn_output_1".
colvars:   Updating extended-Lagrangian degree of freedom.
colvars:   Done updating colvar "nn_output_1".
colvars: Adding total colvar energy: 0.00360839
colvars: Communicating forces from the colvars to the atoms.
colvars:   Communicating forces from colvar "nn_output_1".
colvars:   Force to be applied: 6.5341
colvars:   Propagate a force of 6.5341 to nn_output_1/neuralNetwork0001/001 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 6.5341 to re2/002 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 6.5341 to nn_output_1/neuralNetwork0001/003 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 6.5341 to nn_output_1/neuralNetwork0001/004 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 6.5341 to nn_output_1/neuralNetwork0001/005 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 6.5341 to nn_output_1/neuralNetwork0001/006 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Done communicating forces from colvar "nn_output_1".
colvars: colvarmodule::analyze(), step = 6.
colvars: colvarmodule::write_traj_files()
colvars: Using colvarproxy_namd::output_stream()
colvars: colvarmodule::end_of_step(), step = 6.
colvars:   End of step for colvar "re1".
colvars:   End of step for colvar "re2".
colvars:   End of step for colvar "nn_output_1".
colvars: ----------------------------------------------------------------------
colvars: Step 6, atoms_new_colvar_forces = { (  5.64621036581066e-02 , -5.84014802105826e-01 ,  8.11442926955583e-02 ), ( -1.56501499430778e-01 ,  7.92658818508905e-01 , -1.56966007989596e-01 ), ( -1.18911190444286e-01 , -4.07345490870895e-01 ,  1.12278410513230e-01 ), (  3.38222570102339e-01 ,  2.38730563851450e-01 ,  2.83523403551472e-01 ), ( -3.35679020978219e-01 , -1.91207825736050e-01 , -4.99909062151447e-01 ), (  1.14709032863824e-01 ,  2.08664471540895e-01 ,  3.62411965832239e-01 ), ( -8.25231637543297e-03 , -5.64838495134135e-01 ,  8.54083812874156e-02 ), (  1.97941299114987e-01 ,  3.91482663915299e-01 , -3.69950825426294e-01 ), ( -8.40442035223863e-02 ,  1.67939254144675e-01 ,  1.92297324508510e-01 ), ( -8.93860873851836e-02 , -9.19271022366405e-02 , -2.62157873285610e-01 ), (  8.54393123970290e-02 ,  3.98579441223220e-02 ,  1.71919990464522e-01 ) }
colvars: ----------------------------------------------------------------------
colvars: Step 6, atom_groups_new_colvar_forces = 
colvars: ----------------------------------------------------------------------
colvars: Step 6, volmaps_new_colvar_forces = 
colvars: ----------------------------------------------------------------------
colvars: ----------------------------------------------------------------------
colvars: colvarproxy_namd, step no. 7
colvars: Updating atomic data arrays.
colvars: Updating positions arrays.
colvars: Updating group positions arrays.
colvars: Updating grid objects.
colvars: ----------------------------------------------------------------------
colvars: Step 7, atoms_ids[size = 11] = { 9, 11, 13, 19, 21, 23, 29, 31, 33, 39, 41 }
colvars: Step 7, atoms_refcount[size = 11] = { 1, 2, 2, 3, 3, 2, 3, 3, 2, 2, 1 }
colvars: Step 7, atoms_masses[size = 11] = { 12.011, 14.007, 12.011, 12.011, 14.007, 12.011, 12.011, 14.007, 12.011, 12.011, 14.007 }
colvars: Step 7, atoms_charges[size = 11] = { 0.51, -0.47, 0.07, 0.51, -0.47, 0.07, 0.51, -0.47, 0.07, 0.51, -0.47 }
colvars: Step 7, atoms_positions[size = 11] = { (  6.47653204142189e+00 ,  8.94363046509811e-01 ,  6.41013670820181e-01 ), (  7.12831087617656e+00 ,  1.11563920572288e+00 ,  1.80519635701429e+00 ), (  6.38259554607802e+00 ,  1.22431522636014e+00 ,  3.07143456788240e+00 ), (  5.33100925618112e+00 ,  2.38292564859533e+00 ,  3.08906020876530e+00 ), (  5.65745238213575e+00 ,  3.67300799576334e+00 ,  2.80619426186285e+00 ), (  4.80690546389258e+00 ,  4.80545208071577e+00 ,  2.88169317986335e+00 ), (  3.46300596622035e+00 ,  4.72309181434840e+00 ,  2.15775158186148e+00 ), (  3.47995653962453e+00 ,  4.10418252385830e+00 ,  9.80560268870811e-01 ), (  2.23954847672499e+00 ,  3.78095247756757e+00 ,  2.76654758017209e-01 ), (  1.41380340690087e+00 ,  2.69971561608075e+00 ,  9.40588545830472e-01 ), (  2.04060291704000e+00 ,  1.44924051685248e+00 ,  9.18553627230282e-01 ) }
colvars: Step 7, atoms_total_forces[size = 11] = { (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ) }
colvars: ----------------------------------------------------------------------
colvars: Step 7, atom_groups_ids[size = 0] = 
colvars: Step 7, atom_groups_refcount[size = 0] = 
colvars: Step 7, atom_groups_masses[size = 0] = 
colvars: Step 7, atom_groups_charges[size = 0] = 
colvars: Step 7, atom_groups_coms[size = 0] = 
colvars: Step 7, atom_groups_total_forces[size = 0] = 
colvars: ----------------------------------------------------------------------
colvars: Step 7, volmaps_ids[size = 0] = 
colvars: Step 7, volmaps_values[size = 0] = 
colvars: ----------------------------------------------------------------------
colvars: ----------------------------------------------------------------------
colvars: Collective variables module, step no. 7
colvars: Calculating collective variables.
colvars:   CVC psi_3 has value -66.6515
colvars: CVC phi_3 has value -69.3761
colvars: Propagate a gradient of 0.00614761 to nn_output_1/neuralNetwork0001/003/phi_3
colvars: CVC phi_1 has value -59.622
colvars: CVC psi_1 has value -54.4609
colvars:   Propagate a gradient of 0.00691713 to nn_output_1/neuralNetwork0001/006/psi_3
colvars: Propagate a gradient of 0.0101449 to nn_output_1/neuralNetwork0001/004/psi_1
colvars: CVC psi_2 has value -38.6978
colvars: Propagate a gradient of 0.00882618 to re1/phi_1
colvars:   CVC phi_2 has value -51.6652
colvars:   Propagate a gradient of 0.0108255 to re2/002/phi_2
colvars: Propagate a gradient of 0.0136215 to nn_output_1/neuralNetwork0001/005/psi_2
colvars:   CVC 001 has value -0.862708
colvars:   CVC 002 has value -0.7844
colvars:   CVC 003 has value -0.935913
colvars:   CVC 004 has value -0.813719
colvars:   CVC 005 has value -0.625212
colvars:   CVC 006 has value -0.918111
colvars:   Propagate a gradient of -0.207805 to nn_output_1/neuralNetwork0001/001
colvars:   Propagate a gradient of -0.19209 to re2/002
colvars:   Propagate a gradient of 0.0116725 to nn_output_1/neuralNetwork0001/003
colvars:   Propagate a gradient of -0.109176 to nn_output_1/neuralNetwork0001/004
colvars:   Propagate a gradient of -0.130587 to nn_output_1/neuralNetwork0001/005
colvars:   Propagate a gradient of 0.0970066 to nn_output_1/neuralNetwork0001/006
colvars:   Calculating colvar "re1"'s properties.
colvars:   Colvar "re1" has value -5.96219679702364e+01.
colvars:   Done calculating colvar "re1"'s properties.
colvars:   Calculating colvar "re2"'s properties.
colvars:   Colvar "re2" has value -7.84400127923323e-01.
colvars:   Done calculating colvar "re2"'s properties.
colvars:   Calculating colvar "nn_output_1"'s properties.
colvars:   Colvar "nn_output_1" has value  4.26159193274459e-01.
colvars:   Done calculating colvar "nn_output_1"'s properties.
colvars: Updating collective variable biases.
colvars:   [0/4]: calc_cv_biases_smp(), first = 0, last = 0, bias = abf1
colvars:   Updating ABF bias abf1
colvars: Collecting forces from all biases.
colvars:   Communicating a force to colvar "nn_output_1".
colvars:   Adding biasing force 0 to colvar "nn_output_1".
colvars: Adding total bias energy: 0
colvars: Updating the internal degrees of freedom of colvars (if they have any).
colvars:   Updating colvar "re1".
colvars:   Done updating colvar "re1".
colvars:   Updating colvar "re2".
colvars:   Done updating colvar "re2".
colvars:   Updating colvar "nn_output_1".
colvars:   Updating extended-Lagrangian degree of freedom.
colvars:   Done updating colvar "nn_output_1".
colvars: Adding total colvar energy: 0.00455272
colvars: Communicating forces from the colvars to the atoms.
colvars:   Communicating forces from colvar "nn_output_1".
colvars:   Force to be applied: 7.02612
colvars:   Propagate a force of 7.02612 to nn_output_1/neuralNetwork0001/001 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 7.02612 to re2/002 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 7.02612 to nn_output_1/neuralNetwork0001/003 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 7.02612 to nn_output_1/neuralNetwork0001/004 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 7.02612 to nn_output_1/neuralNetwork0001/005 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 7.02612 to nn_output_1/neuralNetwork0001/006 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Done communicating forces from colvar "nn_output_1".
colvars: colvarmodule::analyze(), step = 7.
colvars: colvarmodule::write_traj_files()
colvars: Using colvarproxy_namd::output_stream()
colvars: colvarmodule::end_of_step(), step = 7.
colvars:   End of step for colvar "re1".
colvars:   End of step for colvar "re2".
colvars:   End of step for colvar "nn_output_1".
colvars: ----------------------------------------------------------------------
colvars: Step 7, atoms_new_colvar_forces = { (  5.67317712233771e-02 , -6.25190505881164e-01 ,  8.70681099954255e-02 ), ( -1.59112474158834e-01 ,  8.48294942227119e-01 , -1.66510478066807e-01 ), ( -1.32963066746978e-01 , -4.37279319168050e-01 ,  1.16942837550306e-01 ), (  3.68346115809685e-01 ,  2.58963704688171e-01 ,  3.20262531607447e-01 ), ( -3.64962907854229e-01 , -2.05254792405545e-01 , -5.64052073429928e-01 ), (  1.16943577596397e-01 ,  2.16810100949300e-01 ,  4.13392449220767e-01 ), ( -2.40006921175484e-04 , -5.98355339025112e-01 ,  7.61998524231581e-02 ), (  2.09175049924334e-01 ,  4.17945695255014e-01 , -3.91833443473935e-01 ), ( -8.97284587338569e-02 ,  1.80481542403194e-01 ,  2.05616148075660e-01 ), ( -9.57865545932611e-02 , -9.90967016410660e-02 , -2.80513336262513e-01 ), (  9.15969544545424e-02 ,  4.26806725981388e-02 ,  1.83427402360419e-01 ) }
colvars: ----------------------------------------------------------------------
colvars: Step 7, atom_groups_new_colvar_forces = 
colvars: ----------------------------------------------------------------------
colvars: Step 7, volmaps_new_colvar_forces = 
colvars: ----------------------------------------------------------------------
colvars: ----------------------------------------------------------------------
colvars: colvarproxy_namd, step no. 8
colvars: Updating atomic data arrays.
colvars: Updating positions arrays.
colvars: Updating group positions arrays.
colvars: Updating grid objects.
colvars: ----------------------------------------------------------------------
colvars: Step 8, atoms_ids[size = 11] = { 9, 11, 13, 19, 21, 23, 29, 31, 33, 39, 41 }
colvars: Step 8, atoms_refcount[size = 11] = { 1, 2, 2, 3, 3, 2, 3, 3, 2, 2, 1 }
colvars: Step 8, atoms_masses[size = 11] = { 12.011, 14.007, 12.011, 12.011, 14.007, 12.011, 12.011, 14.007, 12.011, 12.011, 14.007 }
colvars: Step 8, atoms_charges[size = 11] = { 0.51, -0.47, 0.07, 0.51, -0.47, 0.07, 0.51, -0.47, 0.07, 0.51, -0.47 }
colvars: Step 8, atoms_positions[size = 11] = { (  6.47781493951020e+00 ,  8.94470220152752e-01 ,  6.39286352444663e-01 ), (  7.13147751617633e+00 ,  1.11258965230579e+00 ,  1.80418104236807e+00 ), (  6.37983026557143e+00 ,  1.22630278420613e+00 ,  3.07409364241936e+00 ), (  5.32612570085605e+00 ,  2.38275761791524e+00 ,  3.09106970506714e+00 ), (  5.65436746495236e+00 ,  3.67407654616747e+00 ,  2.80772862548324e+00 ), (  4.80696896820503e+00 ,  4.80700611692579e+00 ,  2.88327012501661e+00 ), (  3.46110449499271e+00 ,  4.72244714128949e+00 ,  2.15816554340299e+00 ), (  3.48130529163118e+00 ,  4.10729764509350e+00 ,  9.76865914776932e-01 ), (  2.23932036953419e+00 ,  3.77849616603098e+00 ,  2.76390435944250e-01 ), (  1.41479678523089e+00 ,  2.70171084498044e+00 ,  9.41338808319249e-01 ), (  2.03855838322440e+00 ,  1.44942145784892e+00 ,  9.21202005776025e-01 ) }
colvars: Step 8, atoms_total_forces[size = 11] = { (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ) }
colvars: ----------------------------------------------------------------------
colvars: Step 8, atom_groups_ids[size = 0] = 
colvars: Step 8, atom_groups_refcount[size = 0] = 
colvars: Step 8, atom_groups_masses[size = 0] = 
colvars: Step 8, atom_groups_charges[size = 0] = 
colvars: Step 8, atom_groups_coms[size = 0] = 
colvars: Step 8, atom_groups_total_forces[size = 0] = 
colvars: ----------------------------------------------------------------------
colvars: Step 8, volmaps_ids[size = 0] = 
colvars: Step 8, volmaps_values[size = 0] = 
colvars: ----------------------------------------------------------------------
colvars: ----------------------------------------------------------------------
colvars: Collective variables module, step no. 8
colvars: Calculating collective variables.
colvars:   CVC psi_3 has value -66.7983
colvars: CVC psi_1 has value -54.5621
colvars: Propagate a gradient of 0.0101198 to nn_output_1/neuralNetwork0001/004/psi_1
colvars: CVC phi_3 has value -68.8033
colvars:   Propagate a gradient of 0.00687607 to nn_output_1/neuralNetwork0001/006/psi_3
colvars: Propagate a gradient of 0.00631061 to nn_output_1/neuralNetwork0001/003/phi_3
colvars:   CVC phi_2 has value -51.624
colvars:   Propagate a gradient of 0.0108353 to re2/002/phi_2
colvars: CVC phi_1 has value -59.2145
colvars: CVC psi_2 has value -39.0843
colvars: Propagate a gradient of 0.00893304 to re1/phi_1
colvars: Propagate a gradient of 0.0135476 to nn_output_1/neuralNetwork0001/005/psi_2
colvars:   CVC 001 has value -0.859089
colvars:   CVC 002 has value -0.783954
colvars:   CVC 003 has value -0.932345
colvars:   CVC 004 has value -0.814744
colvars:   CVC 005 has value -0.630464
colvars:   CVC 006 has value -0.919123
colvars:   Propagate a gradient of -0.204793 to nn_output_1/neuralNetwork0001/001
colvars:   Propagate a gradient of -0.194701 to re2/002
colvars:   Propagate a gradient of 0.0113664 to nn_output_1/neuralNetwork0001/003
colvars:   Propagate a gradient of -0.108491 to nn_output_1/neuralNetwork0001/004
colvars:   Propagate a gradient of -0.130007 to nn_output_1/neuralNetwork0001/005
colvars:   Propagate a gradient of 0.0970936 to nn_output_1/neuralNetwork0001/006
colvars:   Calculating colvar "re1"'s properties.
colvars:   Colvar "re1" has value -5.92145017890831e+01.
colvars:   Done calculating colvar "re1"'s properties.
colvars:   Calculating colvar "re2"'s properties.
colvars:   Colvar "re2" has value -7.83954022402982e-01.
colvars:   Done calculating colvar "re2"'s properties.
colvars:   Calculating colvar "nn_output_1"'s properties.
colvars:   Colvar "nn_output_1" has value  4.26065217585930e-01.
colvars:   Done calculating colvar "nn_output_1"'s properties.
colvars: Updating collective variable biases.
colvars:   [0/4]: calc_cv_biases_smp(), first = 0, last = 0, bias = abf1
colvars:   Updating ABF bias abf1
colvars: Collecting forces from all biases.
colvars:   Communicating a force to colvar "nn_output_1".
colvars:   Adding biasing force 0 to colvar "nn_output_1".
colvars: Adding total bias energy: 0
colvars: Updating the internal degrees of freedom of colvars (if they have any).
colvars:   Updating colvar "re1".
colvars:   Done updating colvar "re1".
colvars:   Updating colvar "re2".
colvars:   Done updating colvar "re2".
colvars:   Updating colvar "nn_output_1".
colvars:   Updating extended-Lagrangian degree of freedom.
colvars:   Done updating colvar "nn_output_1".
colvars: Adding total colvar energy: 0.00501104
colvars: Communicating forces from the colvars to the atoms.
colvars:   Communicating forces from colvar "nn_output_1".
colvars:   Force to be applied: 7.59243
colvars:   Propagate a force of 7.59243 to nn_output_1/neuralNetwork0001/001 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 7.59243 to re2/002 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 7.59243 to nn_output_1/neuralNetwork0001/003 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 7.59243 to nn_output_1/neuralNetwork0001/004 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 7.59243 to nn_output_1/neuralNetwork0001/005 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 7.59243 to nn_output_1/neuralNetwork0001/006 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Done communicating forces from colvar "nn_output_1".
colvars: colvarmodule::analyze(), step = 8.
colvars: colvarmodule::write_traj_files()
colvars: Using colvarproxy_namd::output_stream()
colvars: colvarmodule::end_of_step(), step = 8.
colvars:   End of step for colvar "re1".
colvars:   End of step for colvar "re2".
colvars:   End of step for colvar "nn_output_1".
colvars: ----------------------------------------------------------------------
colvars: Step 8, atoms_new_colvar_forces = { (  5.69918071760451e-02 , -6.72599734567632e-01 ,  9.39601335549249e-02 ), ( -1.61804002182506e-01 ,  9.12666774535551e-01 , -1.77493892636442e-01 ), ( -1.49373474382053e-01 , -4.72232408439793e-01 ,  1.21950350889324e-01 ), (  4.02993490576896e-01 ,  2.82588527369671e-01 ,  3.63774722676312e-01 ), ( -3.98198899606184e-01 , -2.21086077157561e-01 , -6.40266522629788e-01 ), (  1.18441909132793e-01 ,  2.25176757156087e-01 ,  4.74772375305124e-01 ), (  1.02033684564167e-02 , -6.35216192440250e-01 ,  6.36327324338624e-02 ), (  2.21703385959051e-01 ,  4.46914682708090e-01 , -4.16534130736208e-01 ), ( -9.65555913463315e-02 ,  1.95285163369657e-01 ,  2.21248694497724e-01 ), ( -1.03219886533203e-01 , -1.07548929446359e-01 , -3.02150283668895e-01 ), (  9.88178927490762e-02 ,  4.60514369125397e-02 ,  1.97105820314062e-01 ) }
colvars: ----------------------------------------------------------------------
colvars: Step 8, atom_groups_new_colvar_forces = 
colvars: ----------------------------------------------------------------------
colvars: Step 8, volmaps_new_colvar_forces = 
colvars: ----------------------------------------------------------------------
colvars: ----------------------------------------------------------------------
colvars: colvarproxy_namd, step no. 9
colvars: Updating atomic data arrays.
colvars: Updating positions arrays.
colvars: Updating group positions arrays.
colvars: Updating grid objects.
colvars: ----------------------------------------------------------------------
colvars: Step 9, atoms_ids[size = 11] = { 9, 11, 13, 19, 21, 23, 29, 31, 33, 39, 41 }
colvars: Step 9, atoms_refcount[size = 11] = { 1, 2, 2, 3, 3, 2, 3, 3, 2, 2, 1 }
colvars: Step 9, atoms_masses[size = 11] = { 12.011, 14.007, 12.011, 12.011, 14.007, 12.011, 12.011, 14.007, 12.011, 12.011, 14.007 }
colvars: Step 9, atoms_charges[size = 11] = { 0.51, -0.47, 0.07, 0.51, -0.47, 0.07, 0.51, -0.47, 0.07, 0.51, -0.47 }
colvars: Step 9, atoms_positions[size = 11] = { (  6.47948109660441e+00 ,  8.93959962327701e-01 ,  6.37370159521386e-01 ), (  7.13454339273474e+00 ,  1.10928697670386e+00 ,  1.80359953233487e+00 ), (  6.37711694622111e+00 ,  1.22874789508480e+00 ,  3.07610317546921e+00 ), (  5.32112774485640e+00 ,  2.38254668072914e+00 ,  3.09315943556306e+00 ), (  5.65171208676358e+00 ,  3.67522029161678e+00 ,  2.80936542172331e+00 ), (  4.80694546334582e+00 ,  4.80899805021753e+00 ,  2.88469712792622e+00 ), (  3.45917510360601e+00 ,  4.72102184219941e+00 ,  2.15916916433244e+00 ), (  3.48280314632001e+00 ,  4.11050670023573e+00 ,  9.73108965213408e-01 ), (  2.23917395151528e+00 ,  3.77587604063861e+00 ,  2.76361494851650e-01 ), (  1.41585903720514e+00 ,  2.70323966882243e+00 ,  9.42480213282589e-01 ), (  2.03645105971959e+00 ,  1.44971746891600e+00 ,  9.23986474108877e-01 ) }
colvars: Step 9, atoms_total_forces[size = 11] = { (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ) }
colvars: ----------------------------------------------------------------------
colvars: Step 9, atom_groups_ids[size = 0] = 
colvars: Step 9, atom_groups_refcount[size = 0] = 
colvars: Step 9, atom_groups_masses[size = 0] = 
colvars: Step 9, atom_groups_charges[size = 0] = 
colvars: Step 9, atom_groups_coms[size = 0] = 
colvars: Step 9, atom_groups_total_forces[size = 0] = 
colvars: ----------------------------------------------------------------------
colvars: Step 9, volmaps_ids[size = 0] = 
colvars: Step 9, volmaps_values[size = 0] = 
colvars: ----------------------------------------------------------------------
colvars: ----------------------------------------------------------------------
colvars: Collective variables module, step no. 9
colvars: Calculating collective variables.
colvars:   CVC psi_3 has value -66.9528
colvars: CVC phi_3 has value -68.176
colvars: CVC psi_1 has value -54.6675
colvars:   Propagate a gradient of 0.00683279 to nn_output_1/neuralNetwork0001/006/psi_3
colvars:   CVC phi_1 has value -58.7958
colvars: CVC psi_2 has value -39.5714
colvars: Propagate a gradient of 0.0100936 to nn_output_1/neuralNetwork0001/004/psi_1
colvars: Propagate a gradient of 0.00648837 to nn_output_1/neuralNetwork0001/003/phi_3
colvars:   Propagate a gradient of 0.00904237 to re1/phi_1
colvars: Propagate a gradient of 0.0134536 to nn_output_1/neuralNetwork0001/005/psi_2
colvars: CVC phi_2 has value -51.5174
colvars: Propagate a gradient of 0.0108608 to re2/002/phi_2
colvars:   CVC 001 has value -0.855326
colvars:   CVC 002 has value -0.782798
colvars:   CVC 003 has value -0.92833
colvars:   CVC 004 has value -0.81581
colvars:   CVC 005 has value -0.637039
colvars:   CVC 006 has value -0.920182
colvars:   Propagate a gradient of -0.201969 to nn_output_1/neuralNetwork0001/001
colvars:   Propagate a gradient of -0.197367 to re2/002
colvars:   Propagate a gradient of 0.0110459 to nn_output_1/neuralNetwork0001/003
colvars:   Propagate a gradient of -0.107731 to nn_output_1/neuralNetwork0001/004
colvars:   Propagate a gradient of -0.129143 to nn_output_1/neuralNetwork0001/005
colvars:   Propagate a gradient of 0.0973364 to nn_output_1/neuralNetwork0001/006
colvars:   Calculating colvar "re1"'s properties.
colvars:   Colvar "re1" has value -5.87958229340519e+01.
colvars:   Done calculating colvar "re1"'s properties.
colvars:   Calculating colvar "re2"'s properties.
colvars:   Colvar "re2" has value -7.82797623190361e-01.
colvars:   Done calculating colvar "re2"'s properties.
colvars:   Calculating colvar "nn_output_1"'s properties.
colvars:   Colvar "nn_output_1" has value  4.25982411875574e-01.
colvars:   Done calculating colvar "nn_output_1"'s properties.
colvars: Updating collective variable biases.
colvars:   [0/4]: calc_cv_biases_smp(), first = 0, last = 0, bias = abf1
colvars:   Updating ABF bias abf1
colvars: Collecting forces from all biases.
colvars:   Communicating a force to colvar "nn_output_1".
colvars:   Adding biasing force 0 to colvar "nn_output_1".
colvars: Adding total bias energy: 0
colvars: Updating the internal degrees of freedom of colvars (if they have any).
colvars:   Updating colvar "re1".
colvars:   Done updating colvar "re1".
colvars:   Updating colvar "re2".
colvars:   Done updating colvar "re2".
colvars:   Updating colvar "nn_output_1".
colvars:   Updating extended-Lagrangian degree of freedom.
colvars:   Done updating colvar "nn_output_1".
colvars: Adding total colvar energy: 0.00689569
colvars: Communicating forces from the colvars to the atoms.
colvars:   Communicating forces from colvar "nn_output_1".
colvars:   Force to be applied: 8.04182
colvars:   Propagate a force of 8.04182 to nn_output_1/neuralNetwork0001/001 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 8.04182 to re2/002 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 8.04182 to nn_output_1/neuralNetwork0001/003 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 8.04182 to nn_output_1/neuralNetwork0001/004 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 8.04182 to nn_output_1/neuralNetwork0001/005 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 8.04182 to nn_output_1/neuralNetwork0001/006 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Done communicating forces from colvar "nn_output_1".
colvars: colvarmodule::analyze(), step = 9.
colvars: colvarmodule::write_traj_files()
colvars: Using colvarproxy_namd::output_stream()
colvars: colvarmodule::end_of_step(), step = 9.
colvars:   End of step for colvar "re1".
colvars:   End of step for colvar "re2".
colvars:   End of step for colvar "nn_output_1".
colvars: ----------------------------------------------------------------------
colvars: Step 9, atoms_new_colvar_forces = { (  5.56782957731020e-02 , -7.09758132038066e-01 ,  9.97722660221587e-02 ), ( -1.59895741601592e-01 ,  9.64300451181605e-01 , -1.85701221479584e-01 ), ( -1.65281692091947e-01 , -5.01755801666617e-01 ,  1.23829204714850e-01 ), (  4.32415213994369e-01 ,  3.03084655132258e-01 ,  4.06368086534301e-01 ), ( -4.24305738814520e-01 , -2.32641601196077e-01 , -7.15002711893533e-01 ), (  1.14410994243004e-01 ,  2.26555633273335e-01 ,  5.37731086237995e-01 ), (  2.44565981823289e-02 , -6.57710414529334e-01 ,  4.34871838122343e-02 ), (  2.29040002924637e-01 ,  4.66304292739574e-01 , -4.32591419959336e-01 ), ( -1.02019818051808e-01 ,  2.07435477329972e-01 ,  2.33646886548220e-01 ), ( -1.09194381916846e-01 , -1.14579779608647e-01 , -3.19468281532754e-01 ), (  1.04696267359272e-01 ,  4.87652193819981e-02 ,  2.07928920995448e-01 ) }
colvars: ----------------------------------------------------------------------
colvars: Step 9, atom_groups_new_colvar_forces = 
colvars: ----------------------------------------------------------------------
colvars: Step 9, volmaps_new_colvar_forces = 
colvars: ----------------------------------------------------------------------
colvars: ----------------------------------------------------------------------
colvars: colvarproxy_namd, step no. 10
colvars: Updating atomic data arrays.
colvars: Updating positions arrays.
colvars: Updating group positions arrays.
colvars: Updating grid objects.
colvars: ----------------------------------------------------------------------
colvars: Step 10, atoms_ids[size = 11] = { 9, 11, 13, 19, 21, 23, 29, 31, 33, 39, 41 }
colvars: Step 10, atoms_refcount[size = 11] = { 1, 2, 2, 3, 3, 2, 3, 3, 2, 2, 1 }
colvars: Step 10, atoms_masses[size = 11] = { 12.011, 14.007, 12.011, 12.011, 14.007, 12.011, 12.011, 14.007, 12.011, 12.011, 14.007 }
colvars: Step 10, atoms_charges[size = 11] = { 0.51, -0.47, 0.07, 0.51, -0.47, 0.07, 0.51, -0.47, 0.07, 0.51, -0.47 }
colvars: Step 10, atoms_positions[size = 11] = { (  6.48104205403921e+00 ,  8.93143994951332e-01 ,  6.35127383926254e-01 ), (  7.13751910338526e+00 ,  1.10575510723129e+00 ,  1.80295290757669e+00 ), (  6.37467711407382e+00 ,  1.23143808842324e+00 ,  3.07772977628166e+00 ), (  5.31582781947181e+00 ,  2.38223566873262e+00 ,  3.09550906384507e+00 ), (  5.64950548611726e+00 ,  3.67622292675665e+00 ,  2.81106065833904e+00 ), (  4.80699425746276e+00 ,  4.81186251712240e+00 ,  2.88632688173134e+00 ), (  3.45710504070783e+00 ,  4.71935744693409e+00 ,  2.16094917566308e+00 ), (  3.48438564367779e+00 ,  4.11350009163899e+00 ,  9.69312841633829e-01 ), (  2.23884370739630e+00 ,  3.77342745241415e+00 ,  2.76230378266172e-01 ), (  1.41663955723148e+00 ,  2.70387711764056e+00 ,  9.43732608971487e-01 ), (  2.03445419235762e+00 ,  1.45010694759972e+00 ,  9.26613534551218e-01 ) }
colvars: Step 10, atoms_total_forces[size = 11] = { (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ) }
colvars: ----------------------------------------------------------------------
colvars: Step 10, atom_groups_ids[size = 0] = 
colvars: Step 10, atom_groups_refcount[size = 0] = 
colvars: Step 10, atom_groups_masses[size = 0] = 
colvars: Step 10, atom_groups_charges[size = 0] = 
colvars: Step 10, atom_groups_coms[size = 0] = 
colvars: Step 10, atom_groups_total_forces[size = 0] = 
colvars: ----------------------------------------------------------------------
colvars: Step 10, volmaps_ids[size = 0] = 
colvars: Step 10, volmaps_values[size = 0] = 
colvars: ----------------------------------------------------------------------
colvars: ----------------------------------------------------------------------
colvars: Collective variables module, step no. 10
colvars: Calculating collective variables.
colvars:   CVC psi_3 has value -67.0757
colvars: CVC psi_1 has value -54.7859
colvars: CVC phi_3 has value -67.5726
colvars: Propagate a gradient of 0.00665864 to nn_output_1/neuralNetwork0001/003/phi_3
colvars: CVC phi_1 has value -58.3466
colvars:   Propagate a gradient of 0.00679832 to nn_output_1/neuralNetwork0001/006/psi_3
colvars: Propagate a gradient of 0.0100642 to nn_output_1/neuralNetwork0001/004/psi_1
colvars: CVC phi_2 has value -51.3741
colvars: Propagate a gradient of 0.0108949 to re2/002/phi_2
colvars: Propagate a gradient of 0.00915913 to re1/phi_1
colvars:   CVC psi_2 has value -40.1211
colvars:   Propagate a gradient of 0.0133463 to nn_output_1/neuralNetwork0001/005/psi_2
colvars:   CVC 001 has value -0.851238
colvars:   CVC 002 has value -0.781239
colvars:   CVC 003 has value -0.924364
colvars:   CVC 004 has value -0.817003
colvars:   CVC 005 has value -0.644405
colvars:   CVC 006 has value -0.92102
colvars:   Propagate a gradient of -0.199051 to nn_output_1/neuralNetwork0001/001
colvars:   Propagate a gradient of -0.200136 to re2/002
colvars:   Propagate a gradient of 0.0107043 to nn_output_1/neuralNetwork0001/003
colvars:   Propagate a gradient of -0.106911 to nn_output_1/neuralNetwork0001/004
colvars:   Propagate a gradient of -0.128122 to nn_output_1/neuralNetwork0001/005
colvars:   Propagate a gradient of 0.0976476 to nn_output_1/neuralNetwork0001/006
colvars:   Calculating colvar "re1"'s properties.
colvars:   Colvar "re1" has value -5.83465821423875e+01.
colvars:   Done calculating colvar "re1"'s properties.
colvars:   Calculating colvar "re2"'s properties.
colvars:   Colvar "re2" has value -7.81238911319785e-01.
colvars:   Done calculating colvar "re2"'s properties.
colvars:   Calculating colvar "nn_output_1"'s properties.
colvars:   Colvar "nn_output_1" has value  4.25889928078528e-01.
colvars:   Done calculating colvar "nn_output_1"'s properties.
colvars: Updating collective variable biases.
colvars:   [0/4]: calc_cv_biases_smp(), first = 0, last = 0, bias = abf1
colvars:   Updating ABF bias abf1
colvars: Collecting forces from all biases.
colvars:   Communicating a force to colvar "nn_output_1".
colvars:   Adding biasing force 0 to colvar "nn_output_1".
colvars: Adding total bias energy: 0
colvars: Updating the internal degrees of freedom of colvars (if they have any).
colvars:   Updating colvar "re1".
colvars:   Done updating colvar "re1".
colvars:   Updating colvar "re2".
colvars:   Done updating colvar "re2".
colvars:   Updating colvar "nn_output_1".
colvars:   Updating extended-Lagrangian degree of freedom.
colvars:   Done updating colvar "nn_output_1".
colvars: Adding total colvar energy: 0.00715441
colvars: Communicating forces from the colvars to the atoms.
colvars:   Communicating forces from colvar "nn_output_1".
colvars:   Force to be applied: 8.53253
colvars:   Propagate a force of 8.53253 to nn_output_1/neuralNetwork0001/001 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 8.53253 to re2/002 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 8.53253 to nn_output_1/neuralNetwork0001/003 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 8.53253 to nn_output_1/neuralNetwork0001/004 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 8.53253 to nn_output_1/neuralNetwork0001/005 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 8.53253 to nn_output_1/neuralNetwork0001/006 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Done communicating forces from colvar "nn_output_1".
colvars: colvarmodule::analyze(), step = 10.
colvars: colvarmodule::write_traj_files()
colvars: Using colvarproxy_namd::output_stream()
colvars: Synchronizing (emptying the buffer of) trajectory file "test.colvars.traj".
colvars: Saving collective variables state to "test.colvars.state".
colvars: Using colvarproxy_namd::output_stream()
colvars:   Writing formatted state for bias "abf1"
colvars:   ABF bias trying to write gradients and samples to disk
colvars:   Using colvarproxy_namd::output_stream()
colvars:   Using colvarproxy_namd::output_stream()
colvars:   Using colvarproxy_namd::output_stream()
colvars:   Using colvarproxy_namd::output_stream()
colvars:   Using colvarproxy_namd::output_stream()
colvars:   Using colvarproxy_namd::output_stream()
colvars:   Using colvarproxy_namd::output_stream()
colvars: colvarmodule::end_of_step(), step = 10.
colvars:   End of step for colvar "re1".
colvars:   End of step for colvar "re2".
colvars:   End of step for colvar "nn_output_1".
colvars: ----------------------------------------------------------------------
colvars: Step 10, atoms_new_colvar_forces = { (  5.39526439040467e-02 , -7.50189513064033e-01 ,  1.06248709080194e-01 ), ( -1.56866550384639e-01 ,  1.02121881371819e+00 , -1.94555002053965e-01 ), ( -1.83368730541742e-01 , -5.35006443216604e-01 ,  1.25095655180359e-01 ), (  4.65115144866204e-01 ,  3.26080750863389e-01 ,  4.55509729810886e-01 ), ( -4.52536317534699e-01 , -2.44739081727289e-01 , -8.00411519035601e-01 ), (  1.08158714782765e-01 ,  2.26134517638736e-01 ,  6.10635725610410e-01 ), (  4.21974626237271e-02 , -6.79243104401244e-01 ,  1.78808433962107e-02 ), (  2.36138760161627e-01 ,  4.85240976347686e-01 , -4.49254752988497e-01 ), ( -1.08258651039794e-01 ,  2.21188092287906e-01 ,  2.47693353488187e-01 ), ( -1.15883001639214e-01 , -1.22547292018866e-01 , -3.39099963525997e-01 ), (  1.11350524801719e-01 ,  5.18622835721257e-02 ,  2.20257221037813e-01 ) }
colvars: ----------------------------------------------------------------------
colvars: Step 10, atom_groups_new_colvar_forces = 
colvars: ----------------------------------------------------------------------
colvars: Step 10, volmaps_new_colvar_forces = 
colvars: ----------------------------------------------------------------------
colvars: ----------------------------------------------------------------------
colvars: colvarproxy_namd, step no. 11
colvars: Updating atomic data arrays.
colvars: Updating positions arrays.
colvars: Updating group positions arrays.
colvars: Updating grid objects.
colvars: ----------------------------------------------------------------------
colvars: Step 11, atoms_ids[size = 11] = { 9, 11, 13, 19, 21, 23, 29, 31, 33, 39, 41 }
colvars: Step 11, atoms_refcount[size = 11] = { 1, 2, 2, 3, 3, 2, 3, 3, 2, 2, 1 }
colvars: Step 11, atoms_masses[size = 11] = { 12.011, 14.007, 12.011, 12.011, 14.007, 12.011, 12.011, 14.007, 12.011, 12.011, 14.007 }
colvars: Step 11, atoms_charges[size = 11] = { 0.51, -0.47, 0.07, 0.51, -0.47, 0.07, 0.51, -0.47, 0.07, 0.51, -0.47 }
colvars: Step 11, atoms_positions[size = 11] = { (  6.48293691231926e+00 ,  8.92164802168897e-01 ,  6.33162992106518e-01 ), (  7.14006245049808e+00 ,  1.10192700951491e+00 ,  1.80233470182320e+00 ), (  6.37206679258908e+00 ,  1.23430810128642e+00 ,  3.07875861767969e+00 ), (  5.31013068496160e+00 ,  2.38188519245303e+00 ,  3.09774889455628e+00 ), (  5.64736401658246e+00 ,  3.67722486904309e+00 ,  2.81288498921552e+00 ), (  4.80666568483835e+00 ,  4.81513607858925e+00 ,  2.88801781567824e+00 ), (  3.45517813727068e+00 ,  4.71731414849432e+00 ,  2.16316831300760e+00 ), (  3.48562620372312e+00 ,  4.11670766725684e+00 ,  9.65146096450096e-01 ), (  2.23852020337254e+00 ,  3.77130806449505e+00 ,  2.75606639296076e-01 ), (  1.41723995468808e+00 ,  2.70352709462407e+00 ,  9.44704631546630e-01 ), (  2.03280090699404e+00 ,  1.45070161292306e+00 ,  9.29259464380635e-01 ) }
colvars: Step 11, atoms_total_forces[size = 11] = { (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ) }
colvars: ----------------------------------------------------------------------
colvars: Step 11, atom_groups_ids[size = 0] = 
colvars: Step 11, atom_groups_refcount[size = 0] = 
colvars: Step 11, atom_groups_masses[size = 0] = 
colvars: Step 11, atom_groups_charges[size = 0] = 
colvars: Step 11, atom_groups_coms[size = 0] = 
colvars: Step 11, atom_groups_total_forces[size = 0] = 
colvars: ----------------------------------------------------------------------
colvars: Step 11, volmaps_ids[size = 0] = 
colvars: Step 11, volmaps_values[size = 0] = 
colvars: ----------------------------------------------------------------------
colvars: ----------------------------------------------------------------------
colvars: Collective variables module, step no. 11
colvars: Calculating collective variables.
colvars:   CVC psi_3 has value -67.1581
colvars: CVC psi_1 has value -54.9261
colvars:   Propagate a gradient of 0.00677519 to nn_output_1/neuralNetwork0001/006/psi_3
colvars: CVC phi_1 has value -57.8749
colvars: CVC phi_3 has value -66.9609
colvars: Propagate a gradient of 0.00683051 to nn_output_1/neuralNetwork0001/003/phi_3
colvars: CVC phi_2 has value -51.1931
colvars:   CVC psi_2 has value -40.7264
colvars: Propagate a gradient of 0.0109379 to re2/002/phi_2
colvars: Propagate a gradient of 0.00928114 to re1/phi_1
colvars: Propagate a gradient of 0.0100292 to nn_output_1/neuralNetwork0001/004/psi_1
colvars:   Propagate a gradient of 0.0132267 to nn_output_1/neuralNetwork0001/005/psi_2
colvars:   CVC 001 has value -0.846889
colvars:   CVC 002 has value -0.779262
colvars:   CVC 003 has value -0.920238
colvars:   CVC 004 has value -0.818412
colvars:   CVC 005 has value -0.652447
colvars:   CVC 006 has value -0.921579
colvars:   Propagate a gradient of -0.196133 to nn_output_1/neuralNetwork0001/001
colvars:   Propagate a gradient of -0.202918 to re2/002
colvars:   Propagate a gradient of 0.0103485 to nn_output_1/neuralNetwork0001/003
colvars:   Propagate a gradient of -0.10604 to nn_output_1/neuralNetwork0001/004
colvars:   Propagate a gradient of -0.126934 to nn_output_1/neuralNetwork0001/005
colvars:   Propagate a gradient of 0.0980293 to nn_output_1/neuralNetwork0001/006
colvars:   Calculating colvar "re1"'s properties.
colvars:   Colvar "re1" has value -5.78748770405068e+01.
colvars:   Done calculating colvar "re1"'s properties.
colvars:   Calculating colvar "re2"'s properties.
colvars:   Colvar "re2" has value -7.79262158981625e-01.
colvars:   Done calculating colvar "re2"'s properties.
colvars:   Calculating colvar "nn_output_1"'s properties.
colvars:   Colvar "nn_output_1" has value  4.25796519562366e-01.
colvars:   Done calculating colvar "nn_output_1"'s properties.
colvars: Updating collective variable biases.
colvars:   [0/4]: calc_cv_biases_smp(), first = 0, last = 0, bias = abf1
colvars:   Updating ABF bias abf1
colvars: Collecting forces from all biases.
colvars:   Communicating a force to colvar "nn_output_1".
colvars:   Adding biasing force 0 to colvar "nn_output_1".
colvars: Adding total bias energy: 0
colvars: Updating the internal degrees of freedom of colvars (if they have any).
colvars:   Updating colvar "re1".
colvars:   Done updating colvar "re1".
colvars:   Updating colvar "re2".
colvars:   Done updating colvar "re2".
colvars:   Updating colvar "nn_output_1".
colvars:   Updating extended-Lagrangian degree of freedom.
colvars:   Done updating colvar "nn_output_1".
colvars: Adding total colvar energy: 0.00842534
colvars: Communicating forces from the colvars to the atoms.
colvars:   Communicating forces from colvar "nn_output_1".
colvars:   Force to be applied: 9.02745
colvars:   Propagate a force of 9.02745 to nn_output_1/neuralNetwork0001/001 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 9.02745 to re2/002 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 9.02745 to nn_output_1/neuralNetwork0001/003 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 9.02745 to nn_output_1/neuralNetwork0001/004 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 9.02745 to nn_output_1/neuralNetwork0001/005 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 9.02745 to nn_output_1/neuralNetwork0001/006 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Done communicating forces from colvar "nn_output_1".
colvars: colvarmodule::analyze(), step = 11.
colvars: colvarmodule::write_traj_files()
colvars: Using colvarproxy_namd::output_stream()
colvars: colvarmodule::end_of_step(), step = 11.
colvars:   End of step for colvar "re1".
colvars:   End of step for colvar "re2".
colvars:   End of step for colvar "nn_output_1".
colvars: ----------------------------------------------------------------------
colvars: Step 11, atoms_new_colvar_forces = { (  5.14729416574707e-02 , -7.91299432874814e-01 ,  1.13037742980609e-01 ), ( -1.51712975014883e-01 ,  1.08007466065562e+00 , -2.03299519547236e-01 ), ( -2.03255517450832e-01 , -5.70199477577795e-01 ,  1.25181649642824e-01 ), (  4.98905070519987e-01 ,  3.50247929121763e-01 ,  5.09370375615151e-01 ), ( -4.80261128941188e-01 , -2.56209269663085e-01 , -8.93619698362083e-01 ), (  9.88938941580628e-02 ,  2.23200345075562e-01 ,  6.91215685290381e-01 ), (  6.31863405375716e-02 , -6.97364561763290e-01 , -1.33506330646597e-02 ), (  2.42235220217286e-01 ,  5.01667923228310e-01 , -4.64511780062305e-01 ), ( -1.15020145867978e-01 ,  2.35748565958415e-01 ,  2.62502520925607e-01 ), ( -1.22748082797031e-01 , -1.31116928495316e-01 , -3.59909519725688e-01 ), (  1.18304382981534e-01 ,  5.52502463346309e-02 ,  2.33383176307400e-01 ) }
colvars: ----------------------------------------------------------------------
colvars: Step 11, atom_groups_new_colvar_forces = 
colvars: ----------------------------------------------------------------------
colvars: Step 11, volmaps_new_colvar_forces = 
colvars: ----------------------------------------------------------------------
colvars: ----------------------------------------------------------------------
colvars: colvarproxy_namd, step no. 12
colvars: Updating atomic data arrays.
colvars: Updating positions arrays.
colvars: Updating group positions arrays.
colvars: Updating grid objects.
colvars: ----------------------------------------------------------------------
colvars: Step 12, atoms_ids[size = 11] = { 9, 11, 13, 19, 21, 23, 29, 31, 33, 39, 41 }
colvars: Step 12, atoms_refcount[size = 11] = { 1, 2, 2, 3, 3, 2, 3, 3, 2, 2, 1 }
colvars: Step 12, atoms_masses[size = 11] = { 12.011, 14.007, 12.011, 12.011, 14.007, 12.011, 12.011, 14.007, 12.011, 12.011, 14.007 }
colvars: Step 12, atoms_charges[size = 11] = { 0.51, -0.47, 0.07, 0.51, -0.47, 0.07, 0.51, -0.47, 0.07, 0.51, -0.47 }
colvars: Step 12, atoms_positions[size = 11] = { (  6.48526681414947e+00 ,  8.90475006505439e-01 ,  6.30956474933687e-01 ), (  7.14252294180814e+00 ,  1.09848870338764e+00 ,  1.80180455157555e+00 ), (  6.36982984625236e+00 ,  1.23707518214758e+00 ,  3.07949762873432e+00 ), (  5.30410363058271e+00 ,  2.38149277967362e+00 ,  3.10008434135938e+00 ), (  5.64539182765211e+00 ,  3.67823960454914e+00 ,  2.81474155310534e+00 ), (  4.80593633893827e+00 ,  4.81863285211483e+00 ,  2.88982084122691e+00 ), (  3.45341669663388e+00 ,  4.71477727496796e+00 ,  2.16563361200475e+00 ), (  3.48644459850387e+00 ,  4.12008865509418e+00 ,  9.60746517055200e-01 ), (  2.23803784390756e+00 ,  3.76949405354122e+00 ,  2.75188972981322e-01 ), (  1.41777183879372e+00 ,  2.70226161438616e+00 ,  9.45483044338041e-01 ), (  2.03107281201497e+00 ,  1.45138802432464e+00 ,  9.32208992163128e-01 ) }
colvars: Step 12, atoms_total_forces[size = 11] = { (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ) }
colvars: ----------------------------------------------------------------------
colvars: Step 12, atom_groups_ids[size = 0] = 
colvars: Step 12, atom_groups_refcount[size = 0] = 
colvars: Step 12, atom_groups_masses[size = 0] = 
colvars: Step 12, atom_groups_charges[size = 0] = 
colvars: Step 12, atom_groups_coms[size = 0] = 
colvars: Step 12, atom_groups_total_forces[size = 0] = 
colvars: ----------------------------------------------------------------------
colvars: Step 12, volmaps_ids[size = 0] = 
colvars: Step 12, volmaps_values[size = 0] = 
colvars: ----------------------------------------------------------------------
colvars: ----------------------------------------------------------------------
colvars: Collective variables module, step no. 12
colvars: Calculating collective variables.
colvars:   CVC psi_3 has value -67.1754
colvars: CVC psi_1 has value -55.0647
colvars: Propagate a gradient of 0.00999465 to nn_output_1/neuralNetwork0001/004/psi_1
colvars: CVC psi_2 has value -41.3635
colvars:   Propagate a gradient of 0.00677034 to nn_output_1/neuralNetwork0001/006/psi_3
colvars: CVC phi_1 has value -57.4559
colvars: Propagate a gradient of 0.0130993 to nn_output_1/neuralNetwork0001/005/psi_2
colvars: Propagate a gradient of 0.00938897 to re1/phi_1
colvars: CVC phi_3 has value -66.3625
colvars:   CVC phi_2 has value -51.0066
colvars:   Propagate a gradient of 0.0109822 to re2/002/phi_2
colvars: Propagate a gradient of 0.00699787 to nn_output_1/neuralNetwork0001/003/phi_3
colvars:   CVC 001 has value -0.842978
colvars:   CVC 002 has value -0.777218
colvars:   CVC 003 has value -0.916101
colvars:   CVC 004 has value -0.819799
colvars:   CVC 005 has value -0.660834
colvars:   CVC 006 has value -0.921696
colvars:   Propagate a gradient of -0.193677 to nn_output_1/neuralNetwork0001/001
colvars:   Propagate a gradient of -0.205473 to re2/002
colvars:   Propagate a gradient of 0.0100164 to nn_output_1/neuralNetwork0001/003
colvars:   Propagate a gradient of -0.105174 to nn_output_1/neuralNetwork0001/004
colvars:   Propagate a gradient of -0.125698 to nn_output_1/neuralNetwork0001/005
colvars:   Propagate a gradient of 0.0984531 to nn_output_1/neuralNetwork0001/006
colvars:   Calculating colvar "re1"'s properties.
colvars:   Colvar "re1" has value -5.74559110007995e+01.
colvars:   Done calculating colvar "re1"'s properties.
colvars:   Calculating colvar "re2"'s properties.
colvars:   Colvar "re2" has value -7.77218463303311e-01.
colvars:   Done calculating colvar "re2"'s properties.
colvars:   Calculating colvar "nn_output_1"'s properties.
colvars:   Colvar "nn_output_1" has value  4.25853460937317e-01.
colvars:   Done calculating colvar "nn_output_1"'s properties.
colvars: Updating collective variable biases.
colvars:   [0/4]: calc_cv_biases_smp(), first = 0, last = 0, bias = abf1
colvars:   Updating ABF bias abf1
colvars: Collecting forces from all biases.
colvars:   Communicating a force to colvar "nn_output_1".
colvars:   Adding biasing force 0 to colvar "nn_output_1".
colvars: Adding total bias energy: 0
colvars: Updating the internal degrees of freedom of colvars (if they have any).
colvars:   Updating colvar "re1".
colvars:   Done updating colvar "re1".
colvars:   Updating colvar "re2".
colvars:   Done updating colvar "re2".
colvars:   Updating colvar "nn_output_1".
colvars:   Updating extended-Lagrangian degree of freedom.
colvars:   Done updating colvar "nn_output_1".
colvars: Adding total colvar energy: 0.00751772
colvars: Communicating forces from the colvars to the atoms.
colvars:   Communicating forces from colvar "nn_output_1".
colvars:   Force to be applied: 8.62307
colvars:   Propagate a force of 8.62307 to nn_output_1/neuralNetwork0001/001 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 8.62307 to re2/002 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 8.62307 to nn_output_1/neuralNetwork0001/003 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 8.62307 to nn_output_1/neuralNetwork0001/004 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 8.62307 to nn_output_1/neuralNetwork0001/005 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 8.62307 to nn_output_1/neuralNetwork0001/006 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Done communicating forces from colvar "nn_output_1".
colvars: colvarmodule::analyze(), step = 12.
colvars: colvarmodule::write_traj_files()
colvars: Using colvarproxy_namd::output_stream()
colvars: colvarmodule::end_of_step(), step = 12.
colvars:   End of step for colvar "re1".
colvars:   End of step for colvar "re2".
colvars:   End of step for colvar "nn_output_1".
colvars: ----------------------------------------------------------------------
colvars: Step 12, atoms_new_colvar_forces = { (  4.47372141888072e-02 , -7.53937797977193e-01 ,  1.08831865515771e-01 ), ( -1.32704021218702e-01 ,  1.03242770102382e+00 , -1.92237091206194e-01 ), ( -2.02608802197116e-01 , -5.49610403052389e-01 ,  1.12600118541776e-01 ), (  4.82581384840567e-01 ,  3.39622882416751e-01 ,  5.11766919495190e-01 ), ( -4.59204196594133e-01 , -2.41849425898539e-01 , -8.95485461345936e-01 ), (  7.95014927535770e-02 ,  1.98363822468125e-01 ,  7.01485926251524e-01 ), (  7.81294365017316e-02 , -6.46141996993429e-01 , -4.34007934939057e-02 ), (  2.24238251604885e-01 ,  4.67324577384066e-01 , -4.33724265336408e-01 ), ( -1.10823407537133e-01 ,  2.27600487104139e-01 ,  2.52373981109729e-01 ), ( -1.17608453820409e-01 , -1.27197184525359e-01 , -3.46443729701369e-01 ), (  1.13761101477926e-01 ,  5.33973380500115e-02 ,  2.24232530169824e-01 ) }
colvars: ----------------------------------------------------------------------
colvars: Step 12, atom_groups_new_colvar_forces = 
colvars: ----------------------------------------------------------------------
colvars: Step 12, volmaps_new_colvar_forces = 
colvars: ----------------------------------------------------------------------
colvars: ----------------------------------------------------------------------
colvars: colvarproxy_namd, step no. 13
colvars: Updating atomic data arrays.
colvars: Updating positions arrays.
colvars: Updating group positions arrays.
colvars: Updating grid objects.
colvars: ----------------------------------------------------------------------
colvars: Step 13, atoms_ids[size = 11] = { 9, 11, 13, 19, 21, 23, 29, 31, 33, 39, 41 }
colvars: Step 13, atoms_refcount[size = 11] = { 1, 2, 2, 3, 3, 2, 3, 3, 2, 2, 1 }
colvars: Step 13, atoms_masses[size = 11] = { 12.011, 14.007, 12.011, 12.011, 14.007, 12.011, 12.011, 14.007, 12.011, 12.011, 14.007 }
colvars: Step 13, atoms_charges[size = 11] = { 0.51, -0.47, 0.07, 0.51, -0.47, 0.07, 0.51, -0.47, 0.07, 0.51, -0.47 }
colvars: Step 13, atoms_positions[size = 11] = { (  6.48764369009089e+00 ,  8.88715807088213e-01 ,  6.29326162398069e-01 ), (  7.14441050154981e+00 ,  1.09546836824876e+00 ,  1.80137650277913e+00 ), (  6.36757882203482e+00 ,  1.24023810384016e+00 ,  3.07977541372043e+00 ), (  5.29811814833632e+00 ,  2.38117469698421e+00 ,  3.10239500611426e+00 ), (  5.64362764897138e+00 ,  3.67936017811349e+00 ,  2.81667866727733e+00 ), (  4.80527559808450e+00 ,  4.82236426436806e+00 ,  2.89178258475028e+00 ), (  3.45188550432469e+00 ,  4.71191742585432e+00 ,  2.16847668713027e+00 ), (  3.48723053213700e+00 ,  4.12336556593291e+00 ,  9.56519633080960e-01 ), (  2.23792870924102e+00 ,  3.76782027097090e+00 ,  2.74644041941778e-01 ), (  1.41813958820224e+00 ,  2.70038765650955e+00 ,  9.46328434128758e-01 ), (  2.02922481656949e+00 ,  1.45215979281950e+00 ,  9.35793317781177e-01 ) }
colvars: Step 13, atoms_total_forces[size = 11] = { (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ) }
colvars: ----------------------------------------------------------------------
colvars: Step 13, atom_groups_ids[size = 0] = 
colvars: Step 13, atom_groups_refcount[size = 0] = 
colvars: Step 13, atom_groups_masses[size = 0] = 
colvars: Step 13, atom_groups_charges[size = 0] = 
colvars: Step 13, atom_groups_coms[size = 0] = 
colvars: Step 13, atom_groups_total_forces[size = 0] = 
colvars: ----------------------------------------------------------------------
colvars: Step 13, volmaps_ids[size = 0] = 
colvars: Step 13, volmaps_values[size = 0] = 
colvars: ----------------------------------------------------------------------
colvars: ----------------------------------------------------------------------
colvars: Collective variables module, step no. 13
colvars: Calculating collective variables.
colvars:   CVC psi_3 has value -67.1645
colvars: CVC phi_3 has value -65.7665
colvars: CVC psi_1 has value -55.2113
colvars: Propagate a gradient of 0.00716382 to nn_output_1/neuralNetwork0001/003/phi_3
colvars: CVC psi_2 has value -42.0206
colvars:   Propagate a gradient of 0.00677339 to nn_output_1/neuralNetwork0001/006/psi_3
colvars: Propagate a gradient of 0.0129661 to nn_output_1/neuralNetwork0001/005/psi_2
colvars: CVC phi_1 has value -57.0608
colvars:   CVC phi_2 has value -50.8039
colvars: Propagate a gradient of 0.0094902 to re1/phi_1
colvars: Propagate a gradient of 0.00995801 to nn_output_1/neuralNetwork0001/004/psi_1
colvars:   Propagate a gradient of 0.0110301 to re2/002/phi_2
colvars:   CVC 001 has value -0.839248
colvars:   CVC 002 has value -0.774987
colvars:   CVC 003 has value -0.91188
colvars:   CVC 004 has value -0.821262
colvars:   CVC 005 has value -0.669398
colvars:   CVC 006 has value -0.921623
colvars:   Propagate a gradient of -0.191506 to nn_output_1/neuralNetwork0001/001
colvars:   Propagate a gradient of -0.207852 to re2/002
colvars:   Propagate a gradient of 0.00969905 to nn_output_1/neuralNetwork0001/003
colvars:   Propagate a gradient of -0.104315 to nn_output_1/neuralNetwork0001/004
colvars:   Propagate a gradient of -0.124387 to nn_output_1/neuralNetwork0001/005
colvars:   Propagate a gradient of 0.0989221 to nn_output_1/neuralNetwork0001/006
colvars:   Calculating colvar "re1"'s properties.
colvars:   Colvar "re1" has value -5.70608281969374e+01.
colvars:   Done calculating colvar "re1"'s properties.
colvars:   Calculating colvar "re2"'s properties.
colvars:   Colvar "re2" has value -7.74987346380529e-01.
colvars:   Done calculating colvar "re2"'s properties.
colvars:   Calculating colvar "nn_output_1"'s properties.
colvars:   Colvar "nn_output_1" has value  4.25947005263650e-01.
colvars:   Done calculating colvar "nn_output_1"'s properties.
colvars: Updating collective variable biases.
colvars:   [0/4]: calc_cv_biases_smp(), first = 0, last = 0, bias = abf1
colvars:   Updating ABF bias abf1
colvars: Collecting forces from all biases.
colvars:   Communicating a force to colvar "nn_output_1".
colvars:   Adding biasing force 0 to colvar "nn_output_1".
colvars: Adding total bias energy: 0
colvars: Updating the internal degrees of freedom of colvars (if they have any).
colvars:   Updating colvar "re1".
colvars:   Done updating colvar "re1".
colvars:   Updating colvar "re2".
colvars:   Done updating colvar "re2".
colvars:   Updating colvar "nn_output_1".
colvars:   Updating extended-Lagrangian degree of freedom.
colvars:   Done updating colvar "nn_output_1".
colvars: Adding total colvar energy: 0.00878976
colvars: Communicating forces from the colvars to the atoms.
colvars:   Communicating forces from colvar "nn_output_1".
colvars:   Force to be applied: 7.98434
colvars:   Propagate a force of 7.98434 to nn_output_1/neuralNetwork0001/001 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 7.98434 to re2/002 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 7.98434 to nn_output_1/neuralNetwork0001/003 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 7.98434 to nn_output_1/neuralNetwork0001/004 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 7.98434 to nn_output_1/neuralNetwork0001/005 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 7.98434 to nn_output_1/neuralNetwork0001/006 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Done communicating forces from colvar "nn_output_1".
colvars: colvarmodule::analyze(), step = 13.
colvars: colvarmodule::write_traj_files()
colvars: Using colvarproxy_namd::output_stream()
colvars: colvarmodule::end_of_step(), step = 13.
colvars:   End of step for colvar "re1".
colvars:   End of step for colvar "re2".
colvars:   End of step for colvar "nn_output_1".
colvars: ----------------------------------------------------------------------
colvars: Step 13, atoms_new_colvar_forces = { (  3.76932998749661e-02 , -6.97067722445555e-01 ,  1.01842748927416e-01 ), ( -1.12003316631571e-01 ,  9.58100297573354e-01 , -1.76558075408323e-01 ), ( -1.95640085228908e-01 , -5.14528770816959e-01 ,  9.77956694452126e-02 ), (  4.52395724989361e-01 ,  3.19362112514751e-01 ,  4.96815976672313e-01 ), ( -4.25181140560541e-01 , -2.21096836354824e-01 , -8.66991977345348e-01 ), (  5.97676140236440e-02 ,  1.69990599058699e-01 ,  6.87196283164103e-01 ), (  8.88083251897354e-02 , -5.79411881276761e-01 , -6.86396611146681e-02 ), (  2.01082275981191e-01 ,  4.20984701825152e-01 , -3.92448456052872e-01 ), ( -1.03774958966849e-01 ,  2.13333577888907e-01 ,  2.35541777261643e-01 ), ( -1.09287028138694e-01 , -1.19861258108030e-01 , -3.23866588808698e-01 ), (  1.06139289467666e-01 ,  5.01951801412658e-02 ,  2.09312303259223e-01 ) }
colvars: ----------------------------------------------------------------------
colvars: Step 13, atom_groups_new_colvar_forces = 
colvars: ----------------------------------------------------------------------
colvars: Step 13, volmaps_new_colvar_forces = 
colvars: ----------------------------------------------------------------------
colvars: ----------------------------------------------------------------------
colvars: colvarproxy_namd, step no. 14
colvars: Updating atomic data arrays.
colvars: Updating positions arrays.
colvars: Updating group positions arrays.
colvars: Updating grid objects.
colvars: ----------------------------------------------------------------------
colvars: Step 14, atoms_ids[size = 11] = { 9, 11, 13, 19, 21, 23, 29, 31, 33, 39, 41 }
colvars: Step 14, atoms_refcount[size = 11] = { 1, 2, 2, 3, 3, 2, 3, 3, 2, 2, 1 }
colvars: Step 14, atoms_masses[size = 11] = { 12.011, 14.007, 12.011, 12.011, 14.007, 12.011, 12.011, 14.007, 12.011, 12.011, 14.007 }
colvars: Step 14, atoms_charges[size = 11] = { 0.51, -0.47, 0.07, 0.51, -0.47, 0.07, 0.51, -0.47, 0.07, 0.51, -0.47 }
colvars: Step 14, atoms_positions[size = 11] = { (  6.49047412438846e+00 ,  8.86596964482305e-01 ,  6.27402193862135e-01 ), (  7.14607911503397e+00 ,  1.09247378358221e+00 ,  1.80118050925829e+00 ), (  6.36561318363457e+00 ,  1.24338203796721e+00 ,  3.07949046097691e+00 ), (  5.29239410397462e+00 ,  2.38091661054255e+00 ,  3.10502149006606e+00 ), (  5.64178453509155e+00 ,  3.68013919807743e+00 ,  2.81897285188047e+00 ), (  4.80454550898050e+00 ,  4.82592126024227e+00 ,  2.89332613476508e+00 ), (  3.45055053158242e+00 ,  4.70911669527358e+00 ,  2.17130259837238e+00 ), (  3.48782165977164e+00 ,  4.12652004364690e+00 ,  9.52502519955726e-01 ), (  2.23808435490329e+00 ,  3.76674582731046e+00 ,  2.73846150709914e-01 ), (  1.41823735621725e+00 ,  2.69770140783688e+00 ,  9.47063522511336e-01 ), (  2.02756946829382e+00 ,  1.45304575552696e+00 ,  9.39509473177838e-01 ) }
colvars: Step 14, atoms_total_forces[size = 11] = { (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ) }
colvars: ----------------------------------------------------------------------
colvars: Step 14, atom_groups_ids[size = 0] = 
colvars: Step 14, atom_groups_refcount[size = 0] = 
colvars: Step 14, atom_groups_masses[size = 0] = 
colvars: Step 14, atom_groups_charges[size = 0] = 
colvars: Step 14, atom_groups_coms[size = 0] = 
colvars: Step 14, atom_groups_total_forces[size = 0] = 
colvars: ----------------------------------------------------------------------
colvars: Step 14, volmaps_ids[size = 0] = 
colvars: Step 14, volmaps_values[size = 0] = 
colvars: ----------------------------------------------------------------------
colvars: ----------------------------------------------------------------------
colvars: Collective variables module, step no. 14
colvars: Calculating collective variables.
colvars:   CVC psi_3 has value -67.1056
colvars: CVC psi_1 has value -55.3329
colvars: CVC phi_3 has value -65.2352
colvars: Propagate a gradient of 0.00992755 to nn_output_1/neuralNetwork0001/004/psi_1
colvars: CVC psi_2 has value -42.692
colvars: Propagate a gradient of 0.0128283 to nn_output_1/neuralNetwork0001/005/psi_2
colvars: Propagate a gradient of 0.00731109 to nn_output_1/neuralNetwork0001/003/phi_3
colvars: CVC phi_2 has value -50.5672
colvars: Propagate a gradient of 0.0110859 to re2/002/phi_2
colvars: CVC phi_1 has value -56.6933
colvars:   Propagate a gradient of 0.00678992 to nn_output_1/neuralNetwork0001/006/psi_3
colvars: Propagate a gradient of 0.00958397 to re1/phi_1
colvars:   CVC 001 has value -0.835743
colvars:   CVC 002 has value -0.77237
colvars:   CVC 003 has value -0.908035
colvars:   CVC 004 has value -0.822471
colvars:   CVC 005 has value -0.678057
colvars:   CVC 006 has value -0.921224
colvars:   Propagate a gradient of -0.18971 to nn_output_1/neuralNetwork0001/001
colvars:   Propagate a gradient of -0.209945 to re2/002
colvars:   Propagate a gradient of 0.00940951 to nn_output_1/neuralNetwork0001/003
colvars:   Propagate a gradient of -0.103512 to nn_output_1/neuralNetwork0001/004
colvars:   Propagate a gradient of -0.123006 to nn_output_1/neuralNetwork0001/005
colvars:   Propagate a gradient of 0.0994565 to nn_output_1/neuralNetwork0001/006
colvars:   Calculating colvar "re1"'s properties.
colvars:   Colvar "re1" has value -5.66932781536531e+01.
colvars:   Done calculating colvar "re1"'s properties.
colvars:   Calculating colvar "re2"'s properties.
colvars:   Colvar "re2" has value -7.72370167131764e-01.
colvars:   Done calculating colvar "re2"'s properties.
colvars:   Calculating colvar "nn_output_1"'s properties.
colvars:   Colvar "nn_output_1" has value  4.26005311535346e-01.
colvars:   Done calculating colvar "nn_output_1"'s properties.
colvars: Updating collective variable biases.
colvars:   [0/4]: calc_cv_biases_smp(), first = 0, last = 0, bias = abf1
colvars:   Updating ABF bias abf1
colvars: Collecting forces from all biases.
colvars:   Communicating a force to colvar "nn_output_1".
colvars:   Adding biasing force 0 to colvar "nn_output_1".
colvars: Adding total bias energy: 0
colvars: Updating the internal degrees of freedom of colvars (if they have any).
colvars:   Updating colvar "re1".
colvars:   Done updating colvar "re1".
colvars:   Updating colvar "re2".
colvars:   Done updating colvar "re2".
colvars:   Updating colvar "nn_output_1".
colvars:   Updating extended-Lagrangian degree of freedom.
colvars:   Done updating colvar "nn_output_1".
colvars: Adding total colvar energy: 0.00733241
colvars: Communicating forces from the colvars to the atoms.
colvars:   Communicating forces from colvar "nn_output_1".
colvars:   Force to be applied: 7.543
colvars:   Propagate a force of 7.543 to nn_output_1/neuralNetwork0001/001 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 7.543 to re2/002 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 7.543 to nn_output_1/neuralNetwork0001/003 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 7.543 to nn_output_1/neuralNetwork0001/004 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 7.543 to nn_output_1/neuralNetwork0001/005 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 7.543 to nn_output_1/neuralNetwork0001/006 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Done communicating forces from colvar "nn_output_1".
colvars: colvarmodule::analyze(), step = 14.
colvars: colvarmodule::write_traj_files()
colvars: Using colvarproxy_namd::output_stream()
colvars: colvarmodule::end_of_step(), step = 14.
colvars:   End of step for colvar "re1".
colvars:   End of step for colvar "re2".
colvars:   End of step for colvar "nn_output_1".
colvars: ----------------------------------------------------------------------
colvars: Step 14, atoms_new_colvar_forces = { (  3.22900209696462e-02 , -6.58308399695299e-01 ,  9.74297607309857e-02 ), ( -9.58699021682919e-02 ,  9.08868834817444e-01 , -1.65827545605181e-01 ), ( -1.92439922932790e-01 , -4.92513286981100e-01 ,  8.65872341313480e-02 ), (  4.31941534483542e-01 ,  3.06624666321997e-01 ,  4.90424932760672e-01 ), ( -4.00526346379447e-01 , -2.06338737573637e-01 , -8.54642555656098e-01 ), (  4.33376785749941e-02 ,  1.47970239680998e-01 ,  6.84934392612077e-01 ), (  9.89203080544784e-02 , -5.29323000097373e-01 , -9.14166019979950e-02 ), (  1.84389715533955e-01 ,  3.85744873215843e-01 , -3.62627583237849e-01 ), ( -9.95062603618096e-02 ,  2.04445422195926e-01 ,  2.24891784092954e-01 ), ( -1.03751368733692e-01 , -1.15507145229604e-01 , -3.09769958438375e-01 ), (  1.01214542959415e-01 ,  4.83365333448059e-02 ,  2.00016140607461e-01 ) }
colvars: ----------------------------------------------------------------------
colvars: Step 14, atom_groups_new_colvar_forces = 
colvars: ----------------------------------------------------------------------
colvars: Step 14, volmaps_new_colvar_forces = 
colvars: ----------------------------------------------------------------------
colvars: ----------------------------------------------------------------------
colvars: colvarproxy_namd, step no. 15
colvars: Updating atomic data arrays.
colvars: Updating positions arrays.
colvars: Updating group positions arrays.
colvars: Updating grid objects.
colvars: ----------------------------------------------------------------------
colvars: Step 15, atoms_ids[size = 11] = { 9, 11, 13, 19, 21, 23, 29, 31, 33, 39, 41 }
colvars: Step 15, atoms_refcount[size = 11] = { 1, 2, 2, 3, 3, 2, 3, 3, 2, 2, 1 }
colvars: Step 15, atoms_masses[size = 11] = { 12.011, 14.007, 12.011, 12.011, 14.007, 12.011, 12.011, 14.007, 12.011, 12.011, 14.007 }
colvars: Step 15, atoms_charges[size = 11] = { 0.51, -0.47, 0.07, 0.51, -0.47, 0.07, 0.51, -0.47, 0.07, 0.51, -0.47 }
colvars: Step 15, atoms_positions[size = 11] = { (  6.49304843820391e+00 ,  8.84298555581180e-01 ,  6.25371924189614e-01 ), (  7.14756316798270e+00 ,  1.08953635499779e+00 ,  1.80083955092679e+00 ), (  6.36390000869298e+00 ,  1.24642044346019e+00 ,  3.07846532199832e+00 ), (  5.28690853485596e+00 ,  2.38078553333691e+00 ,  3.10742898566206e+00 ), (  5.64016319001970e+00 ,  3.68081569919693e+00 ,  2.82113265320470e+00 ), (  4.80358140554196e+00 ,  4.82950757933239e+00 ,  2.89457865841522e+00 ), (  3.44949475185662e+00 ,  4.70668189508583e+00 ,  2.17409016191387e+00 ), (  3.48839922321972e+00 ,  4.12963903177785e+00 ,  9.48680963093154e-01 ), (  2.23835400122368e+00 ,  3.76595567628454e+00 ,  2.72526295764039e-01 ), (  1.41788808777725e+00 ,  2.69440484881935e+00 ,  9.47877655526502e-01 ), (  2.02567962874118e+00 ,  1.45374969819627e+00 ,  9.43202775851535e-01 ) }
colvars: Step 15, atoms_total_forces[size = 11] = { (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ) }
colvars: ----------------------------------------------------------------------
colvars: Step 15, atom_groups_ids[size = 0] = 
colvars: Step 15, atom_groups_refcount[size = 0] = 
colvars: Step 15, atom_groups_masses[size = 0] = 
colvars: Step 15, atom_groups_charges[size = 0] = 
colvars: Step 15, atom_groups_coms[size = 0] = 
colvars: Step 15, atom_groups_total_forces[size = 0] = 
colvars: ----------------------------------------------------------------------
colvars: Step 15, volmaps_ids[size = 0] = 
colvars: Step 15, volmaps_values[size = 0] = 
colvars: ----------------------------------------------------------------------
colvars: ----------------------------------------------------------------------
colvars: Collective variables module, step no. 15
colvars: Calculating collective variables.
colvars:   CVC psi_3 has value -67.0516
colvars:   Propagate a gradient of 0.00680508 to nn_output_1/neuralNetwork0001/006/psi_3
colvars:   CVC phi_1 has value -56.351
colvars: CVC phi_3 has value -64.7411
colvars:   Propagate a gradient of 0.00967093 to re1/phi_1
colvars: Propagate a gradient of 0.00744747 to nn_output_1/neuralNetwork0001/003/phi_3
colvars: CVC psi_1 has value -55.4416
colvars: Propagate a gradient of 0.00990031 to nn_output_1/neuralNetwork0001/004/psi_1
colvars: CVC phi_2 has value -50.3275
colvars: Propagate a gradient of 0.0111421 to re2/002/phi_2
colvars: CVC psi_2 has value -43.329
colvars: Propagate a gradient of 0.012696 to nn_output_1/neuralNetwork0001/005/psi_2
colvars:   CVC 001 has value -0.832448
colvars:   CVC 002 has value -0.769706
colvars:   CVC 003 has value -0.904389
colvars:   CVC 004 has value -0.823548
colvars:   CVC 005 has value -0.686186
colvars:   CVC 006 has value -0.920856
colvars:   Propagate a gradient of -0.18813 to nn_output_1/neuralNetwork0001/001
colvars:   Propagate a gradient of -0.211805 to re2/002
colvars:   Propagate a gradient of 0.00914737 to nn_output_1/neuralNetwork0001/003
colvars:   Propagate a gradient of -0.102779 to nn_output_1/neuralNetwork0001/004
colvars:   Propagate a gradient of -0.121655 to nn_output_1/neuralNetwork0001/005
colvars:   Propagate a gradient of 0.0999903 to nn_output_1/neuralNetwork0001/006
colvars:   Calculating colvar "re1"'s properties.
colvars:   Colvar "re1" has value -5.63509965062035e+01.
colvars:   Done calculating colvar "re1"'s properties.
colvars:   Calculating colvar "re2"'s properties.
colvars:   Colvar "re2" has value -7.69706367636336e-01.
colvars:   Done calculating colvar "re2"'s properties.
colvars:   Calculating colvar "nn_output_1"'s properties.
colvars:   Colvar "nn_output_1" has value  4.25997078773281e-01.
colvars:   Done calculating colvar "nn_output_1"'s properties.
colvars: Updating collective variable biases.
colvars:   [0/4]: calc_cv_biases_smp(), first = 0, last = 0, bias = abf1
colvars:   Updating ABF bias abf1
colvars: Collecting forces from all biases.
colvars:   Communicating a force to colvar "nn_output_1".
colvars:   Adding biasing force 0 to colvar "nn_output_1".
colvars: Adding total bias energy: 0
colvars: Updating the internal degrees of freedom of colvars (if they have any).
colvars:   Updating colvar "re1".
colvars:   Done updating colvar "re1".
colvars:   Updating colvar "re2".
colvars:   Done updating colvar "re2".
colvars:   Updating colvar "nn_output_1".
colvars:   Updating extended-Lagrangian degree of freedom.
colvars:   Done updating colvar "nn_output_1".
colvars: Adding total colvar energy: 0.00736677
colvars: Communicating forces from the colvars to the atoms.
colvars:   Communicating forces from colvar "nn_output_1".
colvars:   Force to be applied: 7.50459
colvars:   Propagate a force of 7.50459 to nn_output_1/neuralNetwork0001/001 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 7.50459 to re2/002 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 7.50459 to nn_output_1/neuralNetwork0001/003 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 7.50459 to nn_output_1/neuralNetwork0001/004 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 7.50459 to nn_output_1/neuralNetwork0001/005 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 7.50459 to nn_output_1/neuralNetwork0001/006 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Done communicating forces from colvar "nn_output_1".
colvars: colvarmodule::analyze(), step = 15.
colvars: colvarmodule::write_traj_files()
colvars: Using colvarproxy_namd::output_stream()
colvars: colvarmodule::end_of_step(), step = 15.
colvars:   End of step for colvar "re1".
colvars:   End of step for colvar "re2".
colvars:   End of step for colvar "nn_output_1".
colvars: ----------------------------------------------------------------------
colvars: Step 15, atoms_new_colvar_forces = { (  2.89915666248149e-02 , -6.54838291922118e-01 ,  9.81925490648385e-02 ), ( -8.59062692697580e-02 ,  9.08155687253551e-01 , -1.64208299727317e-01 ), ( -1.98744386098830e-01 , -4.96420530964756e-01 ,  8.06910873518123e-02 ), (  4.33528527587600e-01 ,  3.09751576257085e-01 ,  5.07434706839159e-01 ), ( -3.96609020054904e-01 , -2.02875347386380e-01 , -8.83066469344938e-01 ), (  3.06003574253676e-02 ,  1.35420554661338e-01 ,  7.14682896050316e-01 ), (  1.12275527272645e-01 , -5.09438332102791e-01 , -1.15861749752898e-01 ), (  1.78398642098461e-01 ,  3.72216580977933e-01 , -3.53185665304143e-01 ), ( -1.00415564995164e-01 ,  2.06042314997340e-01 ,  2.25810934005946e-01 ), ( -1.03748173966626e-01 , -1.17043357191616e-01 , -3.11748460303622e-01 ), (  1.01628793376394e-01 ,  4.90291454204141e-02 ,  2.01258471120845e-01 ) }
colvars: ----------------------------------------------------------------------
colvars: Step 15, atom_groups_new_colvar_forces = 
colvars: ----------------------------------------------------------------------
colvars: Step 15, volmaps_new_colvar_forces = 
colvars: ----------------------------------------------------------------------
colvars: ----------------------------------------------------------------------
colvars: colvarproxy_namd, step no. 16
colvars: Updating atomic data arrays.
colvars: Updating positions arrays.
colvars: Updating group positions arrays.
colvars: Updating grid objects.
colvars: ----------------------------------------------------------------------
colvars: Step 16, atoms_ids[size = 11] = { 9, 11, 13, 19, 21, 23, 29, 31, 33, 39, 41 }
colvars: Step 16, atoms_refcount[size = 11] = { 1, 2, 2, 3, 3, 2, 3, 3, 2, 2, 1 }
colvars: Step 16, atoms_masses[size = 11] = { 12.011, 14.007, 12.011, 12.011, 14.007, 12.011, 12.011, 14.007, 12.011, 12.011, 14.007 }
colvars: Step 16, atoms_charges[size = 11] = { 0.51, -0.47, 0.07, 0.51, -0.47, 0.07, 0.51, -0.47, 0.07, 0.51, -0.47 }
colvars: Step 16, atoms_positions[size = 11] = { (  6.49550569797101e+00 ,  8.81763276587804e-01 ,  6.22988949998759e-01 ), (  7.14900294083708e+00 ,  1.08646644844104e+00 ,  1.80056518412840e+00 ), (  6.36211767114649e+00 ,  1.24965713349667e+00 ,  3.07652627749156e+00 ), (  5.28201269308153e+00 ,  2.38075079191017e+00 ,  3.10971608161711e+00 ), (  5.63824632468142e+00 ,  3.68127651056629e+00 ,  2.82350630096817e+00 ), (  4.80255947009591e+00 ,  4.83305772273233e+00 ,  2.89607231604776e+00 ), (  3.44855891366526e+00 ,  4.70399184303848e+00 ,  2.17704761307943e+00 ), (  3.48840247421974e+00 ,  4.13275147503817e+00 ,  9.45119455212352e-01 ), (  2.23876512439585e+00 ,  3.76553268291601e+00 ,  2.71095634269294e-01 ), (  1.41736195256858e+00 ,  2.69017024477647e+00 ,  9.48639161347244e-01 ), (  2.02355651454295e+00 ,  1.45435245596013e+00 ,  9.47271308657926e-01 ) }
colvars: Step 16, atoms_total_forces[size = 11] = { (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ) }
colvars: ----------------------------------------------------------------------
colvars: Step 16, atom_groups_ids[size = 0] = 
colvars: Step 16, atom_groups_refcount[size = 0] = 
colvars: Step 16, atom_groups_masses[size = 0] = 
colvars: Step 16, atom_groups_charges[size = 0] = 
colvars: Step 16, atom_groups_coms[size = 0] = 
colvars: Step 16, atom_groups_total_forces[size = 0] = 
colvars: ----------------------------------------------------------------------
colvars: Step 16, volmaps_ids[size = 0] = 
colvars: Step 16, volmaps_values[size = 0] = 
colvars: ----------------------------------------------------------------------
colvars: ----------------------------------------------------------------------
colvars: Collective variables module, step no. 16
colvars: Calculating collective variables.
colvars:   CVC psi_3 has value -66.9655
colvars: CVC psi_1 has value -55.5213
colvars: CVC phi_3 has value -64.276
colvars: CVC phi_1 has value -56.0283
colvars: Propagate a gradient of 0.00757537 to nn_output_1/neuralNetwork0001/003/phi_3
colvars: Propagate a gradient of 0.00988032 to nn_output_1/neuralNetwork0001/004/psi_1
colvars: Propagate a gradient of 0.00975261 to re1/phi_1
colvars: CVC psi_2 has value -43.9749
colvars: Propagate a gradient of 0.0125602 to nn_output_1/neuralNetwork0001/005/psi_2
colvars:   Propagate a gradient of 0.0068292 to nn_output_1/neuralNetwork0001/006/psi_3
colvars: CVC phi_2 has value -50.0908
colvars: Propagate a gradient of 0.0111976 to re2/002/phi_2
colvars:   CVC 001 has value -0.829314
colvars:   CVC 002 has value -0.767062
colvars:   CVC 003 has value -0.900895
colvars:   CVC 004 has value -0.824336
colvars:   CVC 005 has value -0.694343
colvars:   CVC 006 has value -0.92027
colvars:   Propagate a gradient of -0.186694 to nn_output_1/neuralNetwork0001/001
colvars:   Propagate a gradient of -0.213581 to re2/002
colvars:   Propagate a gradient of 0.00889993 to nn_output_1/neuralNetwork0001/003
colvars:   Propagate a gradient of -0.102074 to nn_output_1/neuralNetwork0001/004
colvars:   Propagate a gradient of -0.120329 to nn_output_1/neuralNetwork0001/005
colvars:   Propagate a gradient of 0.100525 to nn_output_1/neuralNetwork0001/006
colvars:   Calculating colvar "re1"'s properties.
colvars:   Colvar "re1" has value -5.60283119737676e+01.
colvars:   Done calculating colvar "re1"'s properties.
colvars:   Calculating colvar "re2"'s properties.
colvars:   Colvar "re2" has value -7.67061796381563e-01.
colvars:   Done calculating colvar "re2"'s properties.
colvars:   Calculating colvar "nn_output_1"'s properties.
colvars:   Colvar "nn_output_1" has value  4.26005236400443e-01.
colvars:   Done calculating colvar "nn_output_1"'s properties.
colvars: Updating collective variable biases.
colvars:   [0/4]: calc_cv_biases_smp(), first = 0, last = 0, bias = abf1
colvars:   Updating ABF bias abf1
colvars: Collecting forces from all biases.
colvars:   Communicating a force to colvar "nn_output_1".
colvars:   Adding biasing force 0 to colvar "nn_output_1".
colvars: Adding total bias energy: 0
colvars: Updating the internal degrees of freedom of colvars (if they have any).
colvars:   Updating colvar "re1".
colvars:   Done updating colvar "re1".
colvars:   Updating colvar "re2".
colvars:   Done updating colvar "re2".
colvars:   Updating colvar "nn_output_1".
colvars:   Updating extended-Lagrangian degree of freedom.
colvars:   Done updating colvar "nn_output_1".
colvars: Adding total colvar energy: 0.00747726
colvars: Communicating forces from the colvars to the atoms.
colvars:   Communicating forces from colvar "nn_output_1".
colvars:   Force to be applied: 7.36546
colvars:   Propagate a force of 7.36546 to nn_output_1/neuralNetwork0001/001 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 7.36546 to re2/002 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 7.36546 to nn_output_1/neuralNetwork0001/003 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 7.36546 to nn_output_1/neuralNetwork0001/004 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 7.36546 to nn_output_1/neuralNetwork0001/005 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 7.36546 to nn_output_1/neuralNetwork0001/006 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Done communicating forces from colvar "nn_output_1".
colvars: colvarmodule::analyze(), step = 16.
colvars: colvarmodule::write_traj_files()
colvars: Using colvarproxy_namd::output_stream()
colvars: colvarmodule::end_of_step(), step = 16.
colvars:   End of step for colvar "re1".
colvars:   End of step for colvar "re2".
colvars:   End of step for colvar "nn_output_1".
colvars: ----------------------------------------------------------------------
colvars: Step 16, atoms_new_colvar_forces = { (  2.51840941511290e-02 , -6.42321109143591e-01 ,  9.76815164609326e-02 ), ( -7.47146038710490e-02 ,  8.94997101328266e-01 , -1.60543305255125e-01 ), ( -2.02252072620317e-01 , -4.93443830575089e-01 ,  7.42916416533949e-02 ), (  4.29004216238968e-01 ,  3.08428840026397e-01 ,  5.16599548081546e-01 ), ( -3.87766104252526e-01 , -1.97065067940211e-01 , -8.98782484236416e-01 ), (  1.84686875993654e-02 ,  1.22167319835793e-01 ,  7.33751367913601e-01 ), (  1.23400363505296e-01 , -4.83837118253563e-01 , -1.37510345082059e-01 ), (  1.70531359110719e-01 ,  3.54025289400624e-01 , -3.39662204702355e-01 ), ( -1.00176969057297e-01 ,  2.04987487160413e-01 ,  2.24038890609594e-01 ), ( -1.02427768269125e-01 , -1.17136694915255e-01 , -3.10089148789039e-01 ), (  1.00748797464836e-01 ,  4.91977830762160e-02 ,  2.00224523345925e-01 ) }
colvars: ----------------------------------------------------------------------
colvars: Step 16, atom_groups_new_colvar_forces = 
colvars: ----------------------------------------------------------------------
colvars: Step 16, volmaps_new_colvar_forces = 
colvars: ----------------------------------------------------------------------
colvars: ----------------------------------------------------------------------
colvars: colvarproxy_namd, step no. 17
colvars: Updating atomic data arrays.
colvars: Updating positions arrays.
colvars: Updating group positions arrays.
colvars: Updating grid objects.
colvars: ----------------------------------------------------------------------
colvars: Step 17, atoms_ids[size = 11] = { 9, 11, 13, 19, 21, 23, 29, 31, 33, 39, 41 }
colvars: Step 17, atoms_refcount[size = 11] = { 1, 2, 2, 3, 3, 2, 3, 3, 2, 2, 1 }
colvars: Step 17, atoms_masses[size = 11] = { 12.011, 14.007, 12.011, 12.011, 14.007, 12.011, 12.011, 14.007, 12.011, 12.011, 14.007 }
colvars: Step 17, atoms_charges[size = 11] = { 0.51, -0.47, 0.07, 0.51, -0.47, 0.07, 0.51, -0.47, 0.07, 0.51, -0.47 }
colvars: Step 17, atoms_positions[size = 11] = { (  6.49831793567210e+00 ,  8.78834947121682e-01 ,  6.20868270111351e-01 ), (  7.15018733942168e+00 ,  1.08365464435883e+00 ,  1.80036854765900e+00 ), (  6.36097677102287e+00 ,  1.25252002969532e+00 ,  3.07395372374302e+00 ), (  5.27756257462535e+00 ,  2.38074876151565e+00 ,  3.11190148495131e+00 ), (  5.63648696107308e+00 ,  3.68152627543755e+00 ,  2.82577683588340e+00 ), (  4.80145274776850e+00 ,  4.83651033920092e+00 ,  2.89788761645987e+00 ), (  3.44783947909335e+00 ,  4.70124151532555e+00 ,  2.17996910042420e+00 ), (  3.48806456153718e+00 ,  4.13569664394942e+00 ,  9.41485648315256e-01 ), (  2.23897279657368e+00 ,  3.76528784684735e+00 ,  2.69659647472592e-01 ), (  1.41656406502618e+00 ,  2.68583221382171e+00 ,  9.49207920031526e-01 ), (  2.02153602986434e+00 ,  1.45476820399811e+00 ,  9.51870658279773e-01 ) }
colvars: Step 17, atoms_total_forces[size = 11] = { (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ) }
colvars: ----------------------------------------------------------------------
colvars: Step 17, atom_groups_ids[size = 0] = 
colvars: Step 17, atom_groups_refcount[size = 0] = 
colvars: Step 17, atom_groups_masses[size = 0] = 
colvars: Step 17, atom_groups_charges[size = 0] = 
colvars: Step 17, atom_groups_coms[size = 0] = 
colvars: Step 17, atom_groups_total_forces[size = 0] = 
colvars: ----------------------------------------------------------------------
colvars: Step 17, volmaps_ids[size = 0] = 
colvars: Step 17, volmaps_values[size = 0] = 
colvars: ----------------------------------------------------------------------
colvars: ----------------------------------------------------------------------
colvars: Collective variables module, step no. 17
colvars: Calculating collective variables.
colvars:   CVC psi_3 has value -66.8248
colvars: CVC psi_1 has value -55.5807
colvars: CVC phi_1 has value -55.7629
colvars: Propagate a gradient of 0.00981955 to re1/phi_1
colvars:   Propagate a gradient of 0.00686864 to nn_output_1/neuralNetwork0001/006/psi_3
colvars: CVC phi_3 has value -63.8373
colvars: Propagate a gradient of 0.00769554 to nn_output_1/neuralNetwork0001/003/phi_3
colvars: CVC phi_2 has value -49.898
colvars: Propagate a gradient of 0.0112426 to re2/002/phi_2
colvars: CVC psi_2 has value -44.5811
colvars: Propagate a gradient of 0.0124312 to nn_output_1/neuralNetwork0001/005/psi_2
colvars: Propagate a gradient of 0.00986539 to nn_output_1/neuralNetwork0001/004/psi_1
colvars:   CVC 001 has value -0.826717
colvars:   CVC 002 has value -0.764899
colvars:   CVC 003 has value -0.897545
colvars:   CVC 004 has value -0.824923
colvars:   CVC 005 has value -0.701918
colvars:   CVC 006 has value -0.919306
colvars:   Propagate a gradient of -0.185545 to nn_output_1/neuralNetwork0001/001
colvars:   Propagate a gradient of -0.215154 to re2/002
colvars:   Propagate a gradient of 0.00868474 to nn_output_1/neuralNetwork0001/003
colvars:   Propagate a gradient of -0.101427 to nn_output_1/neuralNetwork0001/004
colvars:   Propagate a gradient of -0.119178 to nn_output_1/neuralNetwork0001/005
colvars:   Propagate a gradient of 0.100985 to nn_output_1/neuralNetwork0001/006
colvars:   Calculating colvar "re1"'s properties.
colvars:   Colvar "re1" has value -5.57629072841305e+01.
colvars:   Done calculating colvar "re1"'s properties.
colvars:   Calculating colvar "re2"'s properties.
colvars:   Colvar "re2" has value -7.64898584723930e-01.
colvars:   Done calculating colvar "re2"'s properties.
colvars:   Calculating colvar "nn_output_1"'s properties.
colvars:   Colvar "nn_output_1" has value  4.26151479874847e-01.
colvars:   Done calculating colvar "nn_output_1"'s properties.
colvars: Updating collective variable biases.
colvars:   [0/4]: calc_cv_biases_smp(), first = 0, last = 0, bias = abf1
colvars:   Updating ABF bias abf1
colvars: Collecting forces from all biases.
colvars:   Communicating a force to colvar "nn_output_1".
colvars:   Adding biasing force 0 to colvar "nn_output_1".
colvars: Adding total bias energy: 0
colvars: Updating the internal degrees of freedom of colvars (if they have any).
colvars:   Updating colvar "re1".
colvars:   Done updating colvar "re1".
colvars:   Updating colvar "re2".
colvars:   Done updating colvar "re2".
colvars:   Updating colvar "nn_output_1".
colvars:   Updating extended-Lagrangian degree of freedom.
colvars:   Done updating colvar "nn_output_1".
colvars: Adding total colvar energy: 0.00685023
colvars: Communicating forces from the colvars to the atoms.
colvars:   Communicating forces from colvar "nn_output_1".
colvars:   Force to be applied: 6.39702
colvars:   Propagate a force of 6.39702 to nn_output_1/neuralNetwork0001/001 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 6.39702 to re2/002 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 6.39702 to nn_output_1/neuralNetwork0001/003 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 6.39702 to nn_output_1/neuralNetwork0001/004 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 6.39702 to nn_output_1/neuralNetwork0001/005 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 6.39702 to nn_output_1/neuralNetwork0001/006 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Done communicating forces from colvar "nn_output_1".
colvars: colvarmodule::analyze(), step = 17.
colvars: colvarmodule::write_traj_files()
colvars: Using colvarproxy_namd::output_stream()
colvars: colvarmodule::end_of_step(), step = 17.
colvars:   End of step for colvar "re1".
colvars:   End of step for colvar "re2".
colvars:   End of step for colvar "nn_output_1".
colvars: ----------------------------------------------------------------------
colvars: Step 17, atoms_new_colvar_forces = { (  1.95349593553931e-02 , -5.57774515357542e-01 ,  8.60609929366926e-02 ), ( -5.75744848756068e-02 ,  7.80993689540952e-01 , -1.39229943621729e-01 ), ( -1.81200822062877e-01 , -4.34005461749531e-01 ,  6.07330572898238e-02 ), (  3.75179626206900e-01 ,  2.71229239768965e-01 ,  4.62836620638122e-01 ), ( -3.35852522577626e-01 , -1.69663820702020e-01 , -8.04405592930970e-01 ), (  7.41271151024520e-03 ,  9.82520951729339e-02 ,  6.61316026199579e-01 ), (  1.17478282383721e-01 , -4.08018870372006e-01 , -1.37770445923143e-01 ), (  1.44693272287151e-01 ,  2.98415890791116e-01 , -2.89784672661881e-01 ), ( -8.85830193468539e-02 ,  1.80715512718929e-01 ,  1.97098451045978e-01 ), ( -8.94680952516184e-02 , -1.03957570638086e-01 , -2.73412405642873e-01 ), (  8.83800923711705e-02 ,  4.38138108262882e-02 ,  1.76557912670400e-01 ) }
colvars: ----------------------------------------------------------------------
colvars: Step 17, atom_groups_new_colvar_forces = 
colvars: ----------------------------------------------------------------------
colvars: Step 17, volmaps_new_colvar_forces = 
colvars: ----------------------------------------------------------------------
colvars: ----------------------------------------------------------------------
colvars: colvarproxy_namd, step no. 18
colvars: Updating atomic data arrays.
colvars: Updating positions arrays.
colvars: Updating group positions arrays.
colvars: Updating grid objects.
colvars: ----------------------------------------------------------------------
colvars: Step 18, atoms_ids[size = 11] = { 9, 11, 13, 19, 21, 23, 29, 31, 33, 39, 41 }
colvars: Step 18, atoms_refcount[size = 11] = { 1, 2, 2, 3, 3, 2, 3, 3, 2, 2, 1 }
colvars: Step 18, atoms_masses[size = 11] = { 12.011, 14.007, 12.011, 12.011, 14.007, 12.011, 12.011, 14.007, 12.011, 12.011, 14.007 }
colvars: Step 18, atoms_charges[size = 11] = { 0.51, -0.47, 0.07, 0.51, -0.47, 0.07, 0.51, -0.47, 0.07, 0.51, -0.47 }
colvars: Step 18, atoms_positions[size = 11] = { (  6.50100264232129e+00 ,  8.75596786972450e-01 ,  6.19164307045852e-01 ), (  7.15139937180717e+00 ,  1.08112060517181e+00 ,  1.80020453676590e+00 ), (  6.36018246077899e+00 ,  1.25503047656163e+00 ,  3.07108191581080e+00 ), (  5.27357974911548e+00 ,  2.38063538161503e+00 ,  3.11427839681860e+00 ), (  5.63482187544930e+00 ,  3.68174158952395e+00 ,  2.82825886000379e+00 ), (  4.80050245825732e+00 ,  4.83967047679322e+00 ,  2.89936356772746e+00 ), (  3.44751858646760e+00 ,  4.69827560017466e+00 ,  2.18211379546332e+00 ), (  3.48759713622727e+00 ,  4.13831903177721e+00 ,  9.37644863868899e-01 ), (  2.23929975614647e+00 ,  3.76531079432342e+00 ,  2.68138936728780e-01 ), (  1.41595031567800e+00 ,  2.68127302835015e+00 ,  9.49600960321403e-01 ), (  2.01901004759902e+00 ,  1.45553126916154e+00 ,  9.56567664013296e-01 ) }
colvars: Step 18, atoms_total_forces[size = 11] = { (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ) }
colvars: ----------------------------------------------------------------------
colvars: Step 18, atom_groups_ids[size = 0] = 
colvars: Step 18, atom_groups_refcount[size = 0] = 
colvars: Step 18, atom_groups_masses[size = 0] = 
colvars: Step 18, atom_groups_charges[size = 0] = 
colvars: Step 18, atom_groups_coms[size = 0] = 
colvars: Step 18, atom_groups_total_forces[size = 0] = 
colvars: ----------------------------------------------------------------------
colvars: Step 18, volmaps_ids[size = 0] = 
colvars: Step 18, volmaps_values[size = 0] = 
colvars: ----------------------------------------------------------------------
colvars: ----------------------------------------------------------------------
colvars: Collective variables module, step no. 18
colvars: Calculating collective variables.
colvars:   CVC psi_3 has value -66.6538
colvars: CVC psi_1 has value -55.6092
colvars: CVC phi_3 has value -63.4504
colvars:   Propagate a gradient of 0.00691649 to nn_output_1/neuralNetwork0001/006/psi_3
colvars: Propagate a gradient of 0.00780113 to nn_output_1/neuralNetwork0001/003/phi_3
colvars:   CVC psi_2 has value -45.1713
colvars: CVC phi_1 has value -55.5617
colvars:   Propagate a gradient of 0.0123044 to nn_output_1/neuralNetwork0001/005/psi_2
colvars:   CVC phi_2 has value -49.7068
colvars:   Propagate a gradient of 0.011287 to re2/002/phi_2
colvars: Propagate a gradient of 0.00987015 to re1/phi_1
colvars: Propagate a gradient of 0.00985822 to nn_output_1/neuralNetwork0001/004/psi_1
colvars:   CVC 001 has value -0.824736
colvars:   CVC 002 has value -0.762745
colvars:   CVC 003 has value -0.894548
colvars:   CVC 004 has value -0.825204
colvars:   CVC 005 has value -0.709217
colvars:   CVC 006 has value -0.918127
colvars:   Propagate a gradient of -0.184922 to nn_output_1/neuralNetwork0001/001
colvars:   Propagate a gradient of -0.216388 to re2/002
colvars:   Propagate a gradient of 0.00851242 to nn_output_1/neuralNetwork0001/003
colvars:   Propagate a gradient of -0.100857 to nn_output_1/neuralNetwork0001/004
colvars:   Propagate a gradient of -0.118077 to nn_output_1/neuralNetwork0001/005
colvars:   Propagate a gradient of 0.101461 to nn_output_1/neuralNetwork0001/006
colvars:   Calculating colvar "re1"'s properties.
colvars:   Colvar "re1" has value -5.55617363567288e+01.
colvars:   Done calculating colvar "re1"'s properties.
colvars:   Calculating colvar "re2"'s properties.
colvars:   Colvar "re2" has value -7.62745027094128e-01.
colvars:   Done calculating colvar "re2"'s properties.
colvars:   Calculating colvar "nn_output_1"'s properties.
colvars:   Colvar "nn_output_1" has value  4.26359335262689e-01.
colvars:   Done calculating colvar "nn_output_1"'s properties.
colvars: Updating collective variable biases.
colvars:   [0/4]: calc_cv_biases_smp(), first = 0, last = 0, bias = abf1
colvars:   Updating ABF bias abf1
colvars: Collecting forces from all biases.
colvars:   Communicating a force to colvar "nn_output_1".
colvars:   Adding biasing force 0 to colvar "nn_output_1".
colvars: Adding total bias energy: 0
colvars: Updating the internal degrees of freedom of colvars (if they have any).
colvars:   Updating colvar "re1".
colvars:   Done updating colvar "re1".
colvars:   Updating colvar "re2".
colvars:   Done updating colvar "re2".
colvars:   Updating colvar "nn_output_1".
colvars:   Updating extended-Lagrangian degree of freedom.
colvars:   Done updating colvar "nn_output_1".
colvars: Adding total colvar energy: 0.00465674
colvars: Communicating forces from the colvars to the atoms.
colvars:   Communicating forces from colvar "nn_output_1".
colvars:   Force to be applied: 5.06472
colvars:   Propagate a force of 5.06472 to nn_output_1/neuralNetwork0001/001 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 5.06472 to re2/002 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 5.06472 to nn_output_1/neuralNetwork0001/003 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 5.06472 to nn_output_1/neuralNetwork0001/004 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 5.06472 to nn_output_1/neuralNetwork0001/005 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 5.06472 to nn_output_1/neuralNetwork0001/006 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Done communicating forces from colvar "nn_output_1".
colvars: colvarmodule::analyze(), step = 18.
colvars: colvarmodule::write_traj_files()
colvars: Using colvarproxy_namd::output_stream()
colvars: colvarmodule::end_of_step(), step = 18.
colvars:   End of step for colvar "re1".
colvars:   End of step for colvar "re2".
colvars:   End of step for colvar "nn_output_1".
colvars: ----------------------------------------------------------------------
colvars: Step 18, atoms_new_colvar_forces = { (  1.40055649612170e-02 , -4.42003933583445e-01 ,  6.92043847339598e-02 ), ( -4.04636559950239e-02 ,  6.21823049878584e-01 , -1.10283413528244e-01 ), ( -1.47716172540925e-01 , -3.48118834859371e-01 ,  4.52636667205553e-02 ), (  2.98578042525309e-01 ,  2.17426228563403e-01 ,  3.76414163040855e-01 ), ( -2.64608997233487e-01 , -1.33372571592830e-01 , -6.53787289732116e-01 ), ( -4.61233226451668e-04 ,  7.24741174845542e-02 ,  5.40855262883146e-01 ), (  1.00473595821307e-01 , -3.14374047098409e-01 , -1.22209773086761e-01 ), (  1.12247687825022e-01 ,  2.29353718446163e-01 , -2.25876816501694e-01 ), ( -7.14263391419674e-02 ,  1.45347744536251e-01 ,  1.58418930115297e-01 ), ( -7.14313467945452e-02 , -8.41986429681081e-02 , -2.20243334243450e-01 ), (  7.08028537995450e-02 ,  3.56431711932085e-02 ,  1.42244219598453e-01 ) }
colvars: ----------------------------------------------------------------------
colvars: Step 18, atom_groups_new_colvar_forces = 
colvars: ----------------------------------------------------------------------
colvars: Step 18, volmaps_new_colvar_forces = 
colvars: ----------------------------------------------------------------------
colvars: ----------------------------------------------------------------------
colvars: colvarproxy_namd, step no. 19
colvars: Updating atomic data arrays.
colvars: Updating positions arrays.
colvars: Updating group positions arrays.
colvars: Updating grid objects.
colvars: ----------------------------------------------------------------------
colvars: Step 19, atoms_ids[size = 11] = { 9, 11, 13, 19, 21, 23, 29, 31, 33, 39, 41 }
colvars: Step 19, atoms_refcount[size = 11] = { 1, 2, 2, 3, 3, 2, 3, 3, 2, 2, 1 }
colvars: Step 19, atoms_masses[size = 11] = { 12.011, 14.007, 12.011, 12.011, 14.007, 12.011, 12.011, 14.007, 12.011, 12.011, 14.007 }
colvars: Step 19, atoms_charges[size = 11] = { 0.51, -0.47, 0.07, 0.51, -0.47, 0.07, 0.51, -0.47, 0.07, 0.51, -0.47 }
colvars: Step 19, atoms_positions[size = 11] = { (  6.50368937141032e+00 ,  8.72084463931873e-01 ,  6.17196014137433e-01 ), (  7.15240885733766e+00 ,  1.07858766077019e+00 ,  1.79977903867395e+00 ), (  6.35950173337204e+00 ,  1.25751736161713e+00 ,  3.06758561933677e+00 ), (  5.27023063418315e+00 ,  2.38069873566474e+00 ,  3.11716085033550e+00 ), (  5.63338350594674e+00 ,  3.68211613110215e+00 ,  2.83124353837110e+00 ), (  4.79967726183162e+00 ,  4.84274443557523e+00 ,  2.90106021814517e+00 ), (  3.44756034595327e+00 ,  4.69523849790792e+00 ,  2.18417209971951e+00 ), (  3.48697960001587e+00 ,  4.14059668830546e+00 ,  9.33604677840329e-01 ), (  2.23951766477251e+00 ,  3.76554784175052e+00 ,  2.66414070633557e-01 ), (  1.41536583580827e+00 ,  2.67664943142773e+00 ,  9.49933015143284e-01 ), (  2.01637501753689e+00 ,  1.45598476350370e+00 ,  9.61680758450122e-01 ) }
colvars: Step 19, atoms_total_forces[size = 11] = { (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ) }
colvars: ----------------------------------------------------------------------
colvars: Step 19, atom_groups_ids[size = 0] = 
colvars: Step 19, atom_groups_refcount[size = 0] = 
colvars: Step 19, atom_groups_masses[size = 0] = 
colvars: Step 19, atom_groups_charges[size = 0] = 
colvars: Step 19, atom_groups_coms[size = 0] = 
colvars: Step 19, atom_groups_total_forces[size = 0] = 
colvars: ----------------------------------------------------------------------
colvars: Step 19, volmaps_ids[size = 0] = 
colvars: Step 19, volmaps_values[size = 0] = 
colvars: ----------------------------------------------------------------------
colvars: ----------------------------------------------------------------------
colvars: Collective variables module, step no. 19
colvars: Calculating collective variables.
colvars:   CVC psi_3 has value -66.4496
colvars: CVC psi_1 has value -55.5975
colvars:   Propagate a gradient of 0.00697356 to nn_output_1/neuralNetwork0001/006/psi_3
colvars: CVC phi_1 has value -55.4062
colvars: Propagate a gradient of 0.00986116 to nn_output_1/neuralNetwork0001/004/psi_1
colvars: CVC psi_2 has value -45.7439
colvars:   CVC phi_2 has value -49.5259
colvars: Propagate a gradient of 0.0121801 to nn_output_1/neuralNetwork0001/005/psi_2
colvars: CVC phi_3 has value -63.0997
colvars:   Propagate a gradient of 0.011329 to re2/002/phi_2
colvars: Propagate a gradient of 0.00789656 to nn_output_1/neuralNetwork0001/003/phi_3
colvars: Propagate a gradient of 0.0099092 to re1/phi_1
colvars:   CVC 001 has value -0.823197
colvars:   CVC 002 has value -0.760699
colvars:   CVC 003 has value -0.891795
colvars:   CVC 004 has value -0.825089
colvars:   CVC 005 has value -0.716227
colvars:   CVC 006 has value -0.916709
colvars:   Propagate a gradient of -0.18463 to nn_output_1/neuralNetwork0001/001
colvars:   Propagate a gradient of -0.217403 to re2/002
colvars:   Propagate a gradient of 0.00837262 to nn_output_1/neuralNetwork0001/003
colvars:   Propagate a gradient of -0.100354 to nn_output_1/neuralNetwork0001/004
colvars:   Propagate a gradient of -0.117061 to nn_output_1/neuralNetwork0001/005
colvars:   Propagate a gradient of 0.101926 to nn_output_1/neuralNetwork0001/006
colvars:   Calculating colvar "re1"'s properties.
colvars:   Colvar "re1" has value -5.54061637764065e+01.
colvars:   Done calculating colvar "re1"'s properties.
colvars:   Calculating colvar "re2"'s properties.
colvars:   Colvar "re2" has value -7.60699012228543e-01.
colvars:   Done calculating colvar "re2"'s properties.
colvars:   Calculating colvar "nn_output_1"'s properties.
colvars:   Colvar "nn_output_1" has value  4.26611349581861e-01.
colvars:   Done calculating colvar "nn_output_1"'s properties.
colvars: Updating collective variable biases.
colvars:   [0/4]: calc_cv_biases_smp(), first = 0, last = 0, bias = abf1
colvars:   Updating ABF bias abf1
colvars: Collecting forces from all biases.
colvars:   Communicating a force to colvar "nn_output_1".
colvars:   Adding biasing force 0 to colvar "nn_output_1".
colvars: Adding total bias energy: 0
colvars: Updating the internal degrees of freedom of colvars (if they have any).
colvars:   Updating colvar "re1".
colvars:   Done updating colvar "re1".
colvars:   Updating colvar "re2".
colvars:   Done updating colvar "re2".
colvars:   Updating colvar "nn_output_1".
colvars:   Updating extended-Lagrangian degree of freedom.
colvars:   Done updating colvar "nn_output_1".
colvars: Adding total colvar energy: 0.00321322
colvars: Communicating forces from the colvars to the atoms.
colvars:   Communicating forces from colvar "nn_output_1".
colvars:   Force to be applied: 3.47909
colvars:   Propagate a force of 3.47909 to nn_output_1/neuralNetwork0001/001 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 3.47909 to re2/002 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 3.47909 to nn_output_1/neuralNetwork0001/003 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 3.47909 to nn_output_1/neuralNetwork0001/004 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 3.47909 to nn_output_1/neuralNetwork0001/005 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 3.47909 to nn_output_1/neuralNetwork0001/006 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Done communicating forces from colvar "nn_output_1".
colvars: colvarmodule::analyze(), step = 19.
colvars: colvarmodule::write_traj_files()
colvars: Using colvarproxy_namd::output_stream()
colvars: colvarmodule::end_of_step(), step = 19.
colvars:   End of step for colvar "re1".
colvars:   End of step for colvar "re2".
colvars:   End of step for colvar "nn_output_1".
colvars: ----------------------------------------------------------------------
colvars: Step 19, atoms_new_colvar_forces = { (  8.67450716428212e-03 , -3.04106787970189e-01 ,  4.83447680894948e-02 ), ( -2.43892647551164e-02 ,  4.29927092515242e-01 , -7.59304686461192e-02 ), ( -1.04362250288609e-01 , -2.42349841113259e-01 ,  2.93484889066462e-02 ), (  2.05767707705704e-01 ,  1.51134344043228e-01 ,  2.64587372876227e-01 ), ( -1.80568032350306e-01 , -9.11395529349995e-02 , -4.59484507157452e-01 ), ( -4.32295692875856e-03 ,  4.66911612672827e-02 ,  3.82260616908136e-01 ), (  7.37563394384415e-02 , -2.10577587953896e-01 , -9.21688305840688e-02 ), (  7.57174527677899e-02 ,  1.52952858891818e-01 , -1.53028925163406e-01 ), ( -4.99553054318607e-02 ,  1.01489478945358e-01 ,  1.10653492251119e-01 ), ( -4.95754582966306e-02 , -5.92316955485324e-02 , -1.54136186855798e-01 ), (  4.92572609750645e-02 ,  2.52105298579471e-02 ,  9.95541793752198e-02 ) }
colvars: ----------------------------------------------------------------------
colvars: Step 19, atom_groups_new_colvar_forces = 
colvars: ----------------------------------------------------------------------
colvars: Step 19, volmaps_new_colvar_forces = 
colvars: ----------------------------------------------------------------------
colvars: ----------------------------------------------------------------------
colvars: colvarproxy_namd, step no. 20
colvars: Updating atomic data arrays.
colvars: Updating positions arrays.
colvars: Updating group positions arrays.
colvars: Updating grid objects.
colvars: ----------------------------------------------------------------------
colvars: Step 20, atoms_ids[size = 11] = { 9, 11, 13, 19, 21, 23, 29, 31, 33, 39, 41 }
colvars: Step 20, atoms_refcount[size = 11] = { 1, 2, 2, 3, 3, 2, 3, 3, 2, 2, 1 }
colvars: Step 20, atoms_masses[size = 11] = { 12.011, 14.007, 12.011, 12.011, 14.007, 12.011, 12.011, 14.007, 12.011, 12.011, 14.007 }
colvars: Step 20, atoms_charges[size = 11] = { 0.51, -0.47, 0.07, 0.51, -0.47, 0.07, 0.51, -0.47, 0.07, 0.51, -0.47 }
colvars: Step 20, atoms_positions[size = 11] = { (  6.50614665887394e+00 ,  8.68099995119150e-01 ,  6.15352036965641e-01 ), (  7.15328950713778e+00 ,  1.07632865957589e+00 ,  1.79901057686268e+00 ), (  6.35909753329329e+00 ,  1.26027628784289e+00 ,  3.06357639390504e+00 ), (  5.26742608374087e+00 ,  2.38103049010377e+00 ,  3.11995875126124e+00 ), (  5.63184196689833e+00 ,  3.68225883324109e+00 ,  2.83416475724685e+00 ), (  4.79868533105527e+00 ,  4.84576843973025e+00 ,  2.90267720082788e+00 ), (  3.44804642307142e+00 ,  4.69213055331163e+00 ,  2.18613968579986e+00 ), (  3.48616397047497e+00 ,  4.14255716985090e+00 ,  9.30078733802751e-01 ), (  2.23946993789489e+00 ,  3.76622272802264e+00 ,  2.64341060726112e-01 ), (  1.41478805117584e+00 ,  2.67143990350900e+00 ,  9.50065491890933e-01 ), (  2.01378274502757e+00 ,  1.45601667038065e+00 ,  9.66642251204790e-01 ) }
colvars: Step 20, atoms_total_forces[size = 11] = { (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ), (  0.00000000000000e+00 ,  0.00000000000000e+00 ,  0.00000000000000e+00 ) }
colvars: ----------------------------------------------------------------------
colvars: Step 20, atom_groups_ids[size = 0] = 
colvars: Step 20, atom_groups_refcount[size = 0] = 
colvars: Step 20, atom_groups_masses[size = 0] = 
colvars: Step 20, atom_groups_charges[size = 0] = 
colvars: Step 20, atom_groups_coms[size = 0] = 
colvars: Step 20, atom_groups_total_forces[size = 0] = 
colvars: ----------------------------------------------------------------------
colvars: Step 20, volmaps_ids[size = 0] = 
colvars: Step 20, volmaps_values[size = 0] = 
colvars: ----------------------------------------------------------------------
colvars: ----------------------------------------------------------------------
colvars: Collective variables module, step no. 20
colvars: Calculating collective variables.
colvars:   CVC psi_3 has value -66.2204
colvars: CVC psi_1 has value -55.5731
colvars: CVC phi_3 has value -62.8282
colvars: Propagate a gradient of 0.00797021 to nn_output_1/neuralNetwork0001/003/phi_3
colvars: Propagate a gradient of 0.0098673 to nn_output_1/neuralNetwork0001/004/psi_1
colvars:   Propagate a gradient of 0.0070375 to nn_output_1/neuralNetwork0001/006/psi_3
colvars: CVC phi_1 has value -55.2965
colvars: Propagate a gradient of 0.00993667 to re1/phi_1
colvars: CVC psi_2 has value -46.288
colvars:   CVC phi_2 has value -49.3669
colvars:   Propagate a gradient of 0.0113658 to re2/002/phi_2
colvars: Propagate a gradient of 0.0120608 to nn_output_1/neuralNetwork0001/005/psi_2
colvars:   CVC 001 has value -0.822109
colvars:   CVC 002 has value -0.758895
colvars:   CVC 003 has value -0.889642
colvars:   CVC 004 has value -0.824848
colvars:   CVC 005 has value -0.722823
colvars:   CVC 006 has value -0.915104
colvars:   Propagate a gradient of -0.184606 to nn_output_1/neuralNetwork0001/001
colvars:   Propagate a gradient of -0.21823 to re2/002
colvars:   Propagate a gradient of 0.00825923 to nn_output_1/neuralNetwork0001/003
colvars:   Propagate a gradient of -0.0999057 to nn_output_1/neuralNetwork0001/004
colvars:   Propagate a gradient of -0.116155 to nn_output_1/neuralNetwork0001/005
colvars:   Propagate a gradient of 0.102355 to nn_output_1/neuralNetwork0001/006
colvars:   Calculating colvar "re1"'s properties.
colvars:   Colvar "re1" has value -5.52965158188627e+01.
colvars:   Done calculating colvar "re1"'s properties.
colvars:   Calculating colvar "re2"'s properties.
colvars:   Colvar "re2" has value -7.58895464929744e-01.
colvars:   Done calculating colvar "re2"'s properties.
colvars:   Calculating colvar "nn_output_1"'s properties.
colvars:   Colvar "nn_output_1" has value  4.26944443559188e-01.
colvars:   Done calculating colvar "nn_output_1"'s properties.
colvars: Updating collective variable biases.
colvars:   [0/4]: calc_cv_biases_smp(), first = 0, last = 0, bias = abf1
colvars:   Updating ABF bias abf1
colvars: Collecting forces from all biases.
colvars:   Communicating a force to colvar "nn_output_1".
colvars:   Adding biasing force 0 to colvar "nn_output_1".
colvars: Adding total bias energy: 0
colvars: Updating the internal degrees of freedom of colvars (if they have any).
colvars:   Updating colvar "re1".
colvars:   Done updating colvar "re1".
colvars:   Updating colvar "re2".
colvars:   Done updating colvar "re2".
colvars:   Updating colvar "nn_output_1".
colvars:   Updating extended-Lagrangian degree of freedom.
colvars:   Done updating colvar "nn_output_1".
colvars: Adding total colvar energy: 0.001166
colvars: Communicating forces from the colvars to the atoms.
colvars:   Communicating forces from colvar "nn_output_1".
colvars:   Force to be applied: 1.42593
colvars:   Propagate a force of 1.42593 to nn_output_1/neuralNetwork0001/001 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 1.42593 to re2/002 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 1.42593 to nn_output_1/neuralNetwork0001/003 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 1.42593 to nn_output_1/neuralNetwork0001/004 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 1.42593 to nn_output_1/neuralNetwork0001/005 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Propagate a force of 1.42593 to nn_output_1/neuralNetwork0001/006 from nn_output_1/neuralNetwork0001
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Communicating a colvar force from atom group to the MD engine.
colvars:   Done communicating forces from colvar "nn_output_1".
colvars: colvarmodule::analyze(), step = 20.
colvars: colvarmodule::write_traj_files()
colvars: Using colvarproxy_namd::output_stream()
colvars: Synchronizing (emptying the buffer of) trajectory file "test.colvars.traj".
colvars: Saving collective variables state to "test.colvars.state".
colvars: Using colvarproxy_namd::output_stream()
colvars:   Writing formatted state for bias "abf1"
colvars:   ABF bias trying to write gradients and samples to disk
colvars:   Using colvarproxy_namd::output_stream()
colvars:   Using colvarproxy_namd::output_stream()
colvars:   Using colvarproxy_namd::output_stream()
colvars:   Using colvarproxy_namd::output_stream()
colvars:   Using colvarproxy_namd::output_stream()
colvars:   Using colvarproxy_namd::output_stream()
colvars:   Using colvarproxy_namd::output_stream()
colvars: colvarmodule::end_of_step(), step = 20.
colvars:   End of step for colvar "re1".
colvars:   End of step for colvar "re2".
colvars:   End of step for colvar "nn_output_1".
colvars: ----------------------------------------------------------------------
colvars: Step 20, atoms_new_colvar_forces = { (  3.23762916101569e-03 , -1.24881776986568e-01 ,  2.01990323003927e-02 ), ( -8.71203892057738e-03 ,  1.77405382682748e-01 , -3.12773999105414e-02 ), ( -4.39272890547429e-02 , -1.00659328409817e-01 ,  1.13956540105042e-02 ), (  8.45700955016938e-02 ,  6.26603624390882e-02 ,  1.10657037367572e-01 ), ( -7.35721408246236e-02 , -3.72477779472533e-02 , -1.92094546139430e-01 ), ( -3.21013456594086e-03 ,  1.81329898207820e-02 ,  1.60544597500117e-01 ), (  3.20020992221107e-02 , -8.44241776173331e-02 , -4.07689844095718e-02 ), (  3.05440523966280e-02 ,  6.09744522103062e-02 , -6.20035804074073e-02 ), ( -2.08203324745280e-02 ,  4.22335684600559e-02 ,  4.61435396352395e-02 ), ( -2.05716658763244e-02 , -2.48443249192733e-02 , -6.44052018987816e-02 ), (  2.04597254352890e-02 ,  1.06506302672644e-02 ,  4.16098519519072e-02 ) }
colvars: ----------------------------------------------------------------------
colvars: Step 20, atom_groups_new_colvar_forces = 
colvars: ----------------------------------------------------------------------
colvars: Step 20, volmaps_new_colvar_forces = 
colvars: ----------------------------------------------------------------------
colvars: Saving collective variables state to "test.colvars.state".
colvars: Using colvarproxy_namd::output_stream()
colvars:   Writing formatted state for bias "abf1"
