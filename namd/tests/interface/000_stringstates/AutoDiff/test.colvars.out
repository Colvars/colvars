colvars: ----------------------------------------------------------------------
colvars: Please cite Fiorin et al, Mol Phys 2013:
colvars:   https://doi.org/10.1080/00268976.2013.813594
colvars: as well as all other papers listed below for individual features used.
colvars: SMP parallelism is enabled; if needed, use "smp off" to override this.
colvars: This version was built with the C++11 standard or higher.
colvars: Redefining the Tcl "cv" command to the new script interface.
colvars: The restart output state file will be "test.tmp.colvars.state".
colvars: The final output state file will be "test.colvars.state".
colvars: ----------------------------------------------------------------------
colvars: Reading new configuration from file "test.in":
colvars: # units = "" [default]
colvars: # indexFile = "index.ndx"
colvars: The following index groups are currently defined:
colvars:   Protein (104 atoms)
colvars:   Protein_noH (51 atoms)
colvars:   Protein_Backbone (40 atoms)
colvars:   Protein_C-alpha (10 atoms)
colvars:   RMSD_atoms (10 atoms)
colvars:   Protein_C-alpha_1_2 (2 atoms)
colvars:   Protein_C-alpha_9_10 (2 atoms)
colvars:   Protein_C-alpha_1 (1 atoms)
colvars:   group1 (4 atoms)
colvars:   Protein_C-alpha_2 (1 atoms)
colvars:   group2 (4 atoms)
colvars:   Protein_C-alpha_3 (1 atoms)
colvars:   group3 (4 atoms)
colvars:   Protein_C-alpha_4 (1 atoms)
colvars:   group4 (4 atoms)
colvars:   Protein_C-alpha_5 (1 atoms)
colvars:   group5 (4 atoms)
colvars:   Protein_C-alpha_6 (1 atoms)
colvars:   group6 (4 atoms)
colvars:   Protein_C-alpha_7 (1 atoms)
colvars:   group7 (4 atoms)
colvars:   Protein_C-alpha_8 (1 atoms)
colvars:   group8 (4 atoms)
colvars:   Protein_C-alpha_9 (1 atoms)
colvars:   group9 (4 atoms)
colvars:   Protein_C-alpha_10 (1 atoms)
colvars:   group10 (4 atoms)
colvars:   heavy_atoms (51 atoms)
colvars: # smp = on [default]
colvars: # colvarsTrajFrequency = 1
colvars: # colvarsRestartFrequency = 10
colvars: # scriptedColvarForces = off [default]
colvars: # scriptingAfterBiases = off [default]
colvars: # sourceTclFile = "" [default]
colvars: ----------------------------------------------------------------------
colvars:   Initializing a new collective variable.
colvars:   # name = "one"
colvars:   Initializing a new "distanceZ" component.
colvars:     # name = "" [default]
colvars:     # componentCoeff = 1 [default]
colvars:     # componentExp = 1 [default]
colvars:     # period = 0 [default]
colvars:     # wrapAround = 0 [default]
colvars:     # forceNoPBC = off [default]
colvars:     # scalable = on [default]
colvars:       Initializing atom group "main".
colvars:       # name = "" [default]
colvars:       # centerToOrigin = off [default]
colvars:       # centerToReference = off [default]
colvars:       # rotateToReference = off [default]
colvars:       # atomsOfGroup = "" [default]
colvars:       # indexGroup = "group3"
colvars:       # psfSegID =  [default]
colvars:       # atomsFile = "" [default]
colvars:       # dummyAtom = ( 0 , 0 , 0 ) [default]
colvars:       # enableFitGradients = on [default]
colvars:       Enabling scalable calculation for group "main".
colvars:       # printAtomIDs = off [default]
colvars:       Atom group "main" defined with 4 atoms requested: total mass = 54.028, total charge = -0.4.
colvars:       Initializing atom group "ref".
colvars:       # name = "" [default]
colvars:       # centerToOrigin = off [default]
colvars:       # centerToReference = off [default]
colvars:       # rotateToReference = off [default]
colvars:       # atomsOfGroup = "" [default]
colvars:       # indexGroup = "group4"
colvars:       # psfSegID =  [default]
colvars:       # atomsFile = "" [default]
colvars:       # dummyAtom = ( 0 , 0 , 0 ) [default]
colvars:       # enableFitGradients = on [default]
colvars:       Enabling scalable calculation for group "ref".
colvars:       # printAtomIDs = off [default]
colvars:       Atom group "ref" defined with 4 atoms requested: total mass = 54.028, total charge = -0.4.
colvars:     # axis = ( 0 , 0 , 1 ) [default]
colvars:     # oneSiteSystemForce = off [default]
colvars:     # oneSiteTotalForce = off [default]
colvars:   All components initialized.
colvars:   # timeStepFactor = 1 [default]
colvars:   # width = 0.5
colvars:   # lowerBoundary = -10
colvars:   # upperBoundary = 10
colvars:   # hardLowerBoundary = off [default]
colvars:   # hardUpperBoundary = off [default]
colvars:   # expandBoundaries = off [default]
colvars:   # extendedLagrangian = off [default]
colvars:   # outputValue = on [default]
colvars:   # outputVelocity = off [default]
colvars:   # outputTotalForce = off [default]
colvars:   # outputAppliedForce = on
colvars:   # subtractAppliedForce = off [default]
colvars:   # runAve = off [default]
colvars:   # corrFunc = off [default]
colvars: ----------------------------------------------------------------------
colvars: Collective variables initialized, 1 in total.
colvars: ----------------------------------------------------------------------
colvars:   Initializing a new "abf" instance.
colvars:   # name = "abf1" [default]
colvars:   # colvars = { one }
colvars:   # stepZeroData = off [default]
colvars:   # outputEnergy = off [default]
colvars:   # outputFreq = 10 [default]
colvars:   # timeStepFactor = 1 [default]
colvars:   WARNING: ABF should not be run without a thermostat or at 0 Kelvin!
colvars:   # applyBias = on [default]
colvars:   # hideJacobian = off [default]
colvars:   Jacobian (geometric) forces will be included in reported free energy gradients.
colvars:   # fullSamples = 1
colvars:   # minSamples = 0 [default]
colvars:   # inputPrefix =  [default]
colvars:   # historyFreq = 0 [default]
colvars:   # shared = off [default]
colvars:   # updateBias = on [default]
colvars:   # maxForce =  [default]
colvars:   # integrate = on [default]
colvars:   Finished ABF setup.
colvars: ----------------------------------------------------------------------
colvars: Collective variables biases initialized, 1 in total.
colvars: ----------------------------------------------------------------------
colvars: Collective variables module (re)initialized.
colvars: ----------------------------------------------------------------------
colvars: Updating NAMD interface:
colvars: updating atomic data (0 atoms).
colvars: updating group data (2 scalable groups, 8 atoms in total).
colvars: updating grid object data (0 grid objects in total).
colvars: 
colvars: SUMMARY OF COLVARS FEATURES USED SO FAR AND THEIR CITATIONS:
colvars: 
colvars: - Colvars module:
colvars: - Colvars-NAMD interface:
colvars: - Optimal rotation via flexible fitting:
colvars: - distanceZ colvar component:
colvars:   Fiorin2013 https://doi.org/10.1080/00268976.2013.813594
colvars: 
colvars: - ABF colvar bias implementation:
colvars: - Internal-forces free energy estimator:
colvars:   Henin2010 https://doi.org/10.1021/ct9004432
colvars: 
colvars: - NAMD engine:
colvars: - Scalable center-of-mass computation (NAMD):
colvars:   Phillips2020 https://doi.org/10.1063/5.0014475
colvars: 
colvars: updating target temperature (T = 0 K).
colvars: Updating NAMD interface:
colvars: updating atomic data (0 atoms).
colvars: updating group data (2 scalable groups, 8 atoms in total).
colvars: updating grid object data (0 grid objects in total).
colvars: updating target temperature (T = 0 K).
colvars: Current simulation parameters: initial step = 0, integration timestep = 1
colvars: Updating atomic parameters (masses, charges, etc).
colvars: Re-initialized atom group for variable "one":0/0. 4 atoms: total mass = 54.028, total charge = -0.4.
colvars: Re-initialized atom group for variable "one":0/1. 4 atoms: total mass = 54.028, total charge = -0.4.
colvars: The restart output state file will be "test.tmp.colvars.state".
colvars: Synchronizing (emptying the buffer of) trajectory file "test.colvars.traj".
colvars: Synchronizing (emptying the buffer of) trajectory file "test.colvars.traj".
colvars: Saving collective variables state to "test.tmp.colvars.state".
colvars: Synchronizing (emptying the buffer of) trajectory file "test.colvars.traj".
colvars: Saving collective variables state to "test.tmp.colvars.state".
colvars: Saving collective variables state to "test.colvars.state".
colvars: Saving state to output buffer.
colvars: Resetting the Collective Variables module.
colvars: ----------------------------------------------------------------------
colvars: Reading new configuration from file "test.in":
colvars: # units = "" [default]
colvars: # indexFile = "index.ndx"
colvars: The following index groups are currently defined:
colvars:   Protein (104 atoms)
colvars:   Protein_noH (51 atoms)
colvars:   Protein_Backbone (40 atoms)
colvars:   Protein_C-alpha (10 atoms)
colvars:   RMSD_atoms (10 atoms)
colvars:   Protein_C-alpha_1_2 (2 atoms)
colvars:   Protein_C-alpha_9_10 (2 atoms)
colvars:   Protein_C-alpha_1 (1 atoms)
colvars:   group1 (4 atoms)
colvars:   Protein_C-alpha_2 (1 atoms)
colvars:   group2 (4 atoms)
colvars:   Protein_C-alpha_3 (1 atoms)
colvars:   group3 (4 atoms)
colvars:   Protein_C-alpha_4 (1 atoms)
colvars:   group4 (4 atoms)
colvars:   Protein_C-alpha_5 (1 atoms)
colvars:   group5 (4 atoms)
colvars:   Protein_C-alpha_6 (1 atoms)
colvars:   group6 (4 atoms)
colvars:   Protein_C-alpha_7 (1 atoms)
colvars:   group7 (4 atoms)
colvars:   Protein_C-alpha_8 (1 atoms)
colvars:   group8 (4 atoms)
colvars:   Protein_C-alpha_9 (1 atoms)
colvars:   group9 (4 atoms)
colvars:   Protein_C-alpha_10 (1 atoms)
colvars:   group10 (4 atoms)
colvars:   heavy_atoms (51 atoms)
colvars: # smp = on [default]
colvars: # colvarsTrajFrequency = 1
colvars: # colvarsRestartFrequency = 10
colvars: # scriptedColvarForces = off [default]
colvars: # scriptingAfterBiases = off [default]
colvars: # sourceTclFile = "" [default]
colvars: ----------------------------------------------------------------------
colvars:   Initializing a new collective variable.
colvars:   # name = "one"
colvars:   Initializing a new "distanceZ" component.
colvars:     # name = "" [default]
colvars:     # componentCoeff = 1 [default]
colvars:     # componentExp = 1 [default]
colvars:     # period = 0 [default]
colvars:     # wrapAround = 0 [default]
colvars:     # forceNoPBC = off [default]
colvars:     # scalable = on [default]
colvars:       Initializing atom group "main".
colvars:       # name = "" [default]
colvars:       # centerToOrigin = off [default]
colvars:       # centerToReference = off [default]
colvars:       # rotateToReference = off [default]
colvars:       # atomsOfGroup = "" [default]
colvars:       # indexGroup = "group3"
colvars:       # psfSegID =  [default]
colvars:       # atomsFile = "" [default]
colvars:       # dummyAtom = ( 0 , 0 , 0 ) [default]
colvars:       # enableFitGradients = on [default]
colvars:       Enabling scalable calculation for group "main".
colvars:       # printAtomIDs = off [default]
colvars:       Atom group "main" defined with 4 atoms requested.
colvars:       Initializing atom group "ref".
colvars:       # name = "" [default]
colvars:       # centerToOrigin = off [default]
colvars:       # centerToReference = off [default]
colvars:       # rotateToReference = off [default]
colvars:       # atomsOfGroup = "" [default]
colvars:       # indexGroup = "group4"
colvars:       # psfSegID =  [default]
colvars:       # atomsFile = "" [default]
colvars:       # dummyAtom = ( 0 , 0 , 0 ) [default]
colvars:       # enableFitGradients = on [default]
colvars:       Enabling scalable calculation for group "ref".
colvars:       # printAtomIDs = off [default]
colvars:       Atom group "ref" defined with 4 atoms requested.
colvars:     # axis = ( 0 , 0 , 1 ) [default]
colvars:     # oneSiteSystemForce = off [default]
colvars:     # oneSiteTotalForce = off [default]
colvars:   All components initialized.
colvars:   # timeStepFactor = 1 [default]
colvars:   # width = 0.5
colvars:   # lowerBoundary = -10
colvars:   # upperBoundary = 10
colvars:   # hardLowerBoundary = off [default]
colvars:   # hardUpperBoundary = off [default]
colvars:   # expandBoundaries = off [default]
colvars:   # extendedLagrangian = off [default]
colvars:   # outputValue = on [default]
colvars:   # outputVelocity = off [default]
colvars:   # outputTotalForce = off [default]
colvars:   # outputAppliedForce = on
colvars:   # subtractAppliedForce = off [default]
colvars:   # runAve = off [default]
colvars:   # corrFunc = off [default]
colvars: ----------------------------------------------------------------------
colvars: Collective variables initialized, 1 in total.
colvars: ----------------------------------------------------------------------
colvars:   Initializing a new "abf" instance.
colvars:   # name = "abf1" [default]
colvars:   # colvars = { one }
colvars:   # stepZeroData = off [default]
colvars:   # outputEnergy = off [default]
colvars:   # outputFreq = 10 [default]
colvars:   # timeStepFactor = 1 [default]
colvars:   WARNING: ABF should not be run without a thermostat or at 0 Kelvin!
colvars:   # applyBias = on [default]
colvars:   # hideJacobian = off [default]
colvars:   Jacobian (geometric) forces will be included in reported free energy gradients.
colvars:   # fullSamples = 1
colvars:   # minSamples = 0 [default]
colvars:   # inputPrefix =  [default]
colvars:   # historyFreq = 0 [default]
colvars:   # shared = off [default]
colvars:   # updateBias = on [default]
colvars:   # maxForce =  [default]
colvars:   # integrate = on [default]
colvars:   Finished ABF setup.
colvars: ----------------------------------------------------------------------
colvars: Collective variables biases initialized, 1 in total.
colvars: ----------------------------------------------------------------------
colvars: Collective variables module (re)initialized.
colvars: ----------------------------------------------------------------------
colvars: Updating NAMD interface:
colvars: updating atomic data (0 atoms).
colvars: updating group data (2 scalable groups, 8 atoms in total).
colvars: updating grid object data (0 grid objects in total).
colvars: updating target temperature (T = 0 K).
colvars: The restart output state file will be "test.tmp.colvars.state".
colvars: Synchronizing (emptying the buffer of) trajectory file "test.colvars.traj".
colvars: Saving collective variables state to "test.tmp.colvars.state".
colvars: Synchronizing (emptying the buffer of) trajectory file "test.colvars.traj".
colvars: Saving collective variables state to "test.tmp.colvars.state".
colvars: Synchronizing (emptying the buffer of) trajectory file "test.colvars.traj".
colvars: Saving collective variables state to "test.tmp.colvars.state".
colvars: Saving collective variables state to "test.colvars.state".
colvars: Resetting the Collective Variables module.
colvars: ----------------------------------------------------------------------
colvars: Reading new configuration from file "test.in":
colvars: # units = "" [default]
colvars: # indexFile = "index.ndx"
colvars: The following index groups are currently defined:
colvars:   Protein (104 atoms)
colvars:   Protein_noH (51 atoms)
colvars:   Protein_Backbone (40 atoms)
colvars:   Protein_C-alpha (10 atoms)
colvars:   RMSD_atoms (10 atoms)
colvars:   Protein_C-alpha_1_2 (2 atoms)
colvars:   Protein_C-alpha_9_10 (2 atoms)
colvars:   Protein_C-alpha_1 (1 atoms)
colvars:   group1 (4 atoms)
colvars:   Protein_C-alpha_2 (1 atoms)
colvars:   group2 (4 atoms)
colvars:   Protein_C-alpha_3 (1 atoms)
colvars:   group3 (4 atoms)
colvars:   Protein_C-alpha_4 (1 atoms)
colvars:   group4 (4 atoms)
colvars:   Protein_C-alpha_5 (1 atoms)
colvars:   group5 (4 atoms)
colvars:   Protein_C-alpha_6 (1 atoms)
colvars:   group6 (4 atoms)
colvars:   Protein_C-alpha_7 (1 atoms)
colvars:   group7 (4 atoms)
colvars:   Protein_C-alpha_8 (1 atoms)
colvars:   group8 (4 atoms)
colvars:   Protein_C-alpha_9 (1 atoms)
colvars:   group9 (4 atoms)
colvars:   Protein_C-alpha_10 (1 atoms)
colvars:   group10 (4 atoms)
colvars:   heavy_atoms (51 atoms)
colvars: # smp = on [default]
colvars: # colvarsTrajFrequency = 1
colvars: # colvarsRestartFrequency = 10
colvars: # scriptedColvarForces = off [default]
colvars: # scriptingAfterBiases = off [default]
colvars: # sourceTclFile = "" [default]
colvars: ----------------------------------------------------------------------
colvars:   Initializing a new collective variable.
colvars:   # name = "one"
colvars:   Initializing a new "distanceZ" component.
colvars:     # name = "" [default]
colvars:     # componentCoeff = 1 [default]
colvars:     # componentExp = 1 [default]
colvars:     # period = 0 [default]
colvars:     # wrapAround = 0 [default]
colvars:     # forceNoPBC = off [default]
colvars:     # scalable = on [default]
colvars:       Initializing atom group "main".
colvars:       # name = "" [default]
colvars:       # centerToOrigin = off [default]
colvars:       # centerToReference = off [default]
colvars:       # rotateToReference = off [default]
colvars:       # atomsOfGroup = "" [default]
colvars:       # indexGroup = "group3"
colvars:       # psfSegID =  [default]
colvars:       # atomsFile = "" [default]
colvars:       # dummyAtom = ( 0 , 0 , 0 ) [default]
colvars:       # enableFitGradients = on [default]
colvars:       Enabling scalable calculation for group "main".
colvars:       # printAtomIDs = off [default]
colvars:       Atom group "main" defined with 4 atoms requested.
colvars:       Initializing atom group "ref".
colvars:       # name = "" [default]
colvars:       # centerToOrigin = off [default]
colvars:       # centerToReference = off [default]
colvars:       # rotateToReference = off [default]
colvars:       # atomsOfGroup = "" [default]
colvars:       # indexGroup = "group4"
colvars:       # psfSegID =  [default]
colvars:       # atomsFile = "" [default]
colvars:       # dummyAtom = ( 0 , 0 , 0 ) [default]
colvars:       # enableFitGradients = on [default]
colvars:       Enabling scalable calculation for group "ref".
colvars:       # printAtomIDs = off [default]
colvars:       Atom group "ref" defined with 4 atoms requested.
colvars:     # axis = ( 0 , 0 , 1 ) [default]
colvars:     # oneSiteSystemForce = off [default]
colvars:     # oneSiteTotalForce = off [default]
colvars:   All components initialized.
colvars:   # timeStepFactor = 1 [default]
colvars:   # width = 0.5
colvars:   # lowerBoundary = -10
colvars:   # upperBoundary = 10
colvars:   # hardLowerBoundary = off [default]
colvars:   # hardUpperBoundary = off [default]
colvars:   # expandBoundaries = off [default]
colvars:   # extendedLagrangian = off [default]
colvars:   # outputValue = on [default]
colvars:   # outputVelocity = off [default]
colvars:   # outputTotalForce = off [default]
colvars:   # outputAppliedForce = on
colvars:   # subtractAppliedForce = off [default]
colvars:   # runAve = off [default]
colvars:   # corrFunc = off [default]
colvars: ----------------------------------------------------------------------
colvars: Collective variables initialized, 1 in total.
colvars: ----------------------------------------------------------------------
colvars:   Initializing a new "abf" instance.
colvars:   # name = "abf1" [default]
colvars:   # colvars = { one }
colvars:   # stepZeroData = off [default]
colvars:   # outputEnergy = off [default]
colvars:   # outputFreq = 10 [default]
colvars:   # timeStepFactor = 1 [default]
colvars:   WARNING: ABF should not be run without a thermostat or at 0 Kelvin!
colvars:   # applyBias = on [default]
colvars:   # hideJacobian = off [default]
colvars:   Jacobian (geometric) forces will be included in reported free energy gradients.
colvars:   # fullSamples = 1
colvars:   # minSamples = 0 [default]
colvars:   # inputPrefix =  [default]
colvars:   # historyFreq = 0 [default]
colvars:   # shared = off [default]
colvars:   # updateBias = on [default]
colvars:   # maxForce =  [default]
colvars:   # integrate = on [default]
colvars:   Finished ABF setup.
colvars: ----------------------------------------------------------------------
colvars: Collective variables biases initialized, 1 in total.
colvars: ----------------------------------------------------------------------
colvars: Collective variables module (re)initialized.
colvars: ----------------------------------------------------------------------
colvars: Updating NAMD interface:
colvars: updating atomic data (0 atoms).
colvars: updating group data (2 scalable groups, 8 atoms in total).
colvars: updating grid object data (0 grid objects in total).
colvars: updating target temperature (T = 0 K).
colvars: ----------------------------------------------------------------------
colvars: Loading state from formatted string.
colvars:   Restarting collective variable "one" from value: 2.12037
colvars:   Restarted abf bias "abf1" with step number 20.
colvars: ----------------------------------------------------------------------
colvars: The restart output state file will be "test.tmp.colvars.state".
colvars: Synchronizing (emptying the buffer of) trajectory file "test.colvars.traj".
colvars: Synchronizing (emptying the buffer of) trajectory file "test.colvars.traj".
colvars: Saving collective variables state to "test.tmp.colvars.state".
colvars: Synchronizing (emptying the buffer of) trajectory file "test.colvars.traj".
colvars: Saving collective variables state to "test.tmp.colvars.state".
colvars: Saving collective variables state to "test.colvars.state".
colvars: Resetting the Collective Variables module.
colvars: ----------------------------------------------------------------------
colvars: Reading new configuration from file "test.in":
colvars: # units = "" [default]
colvars: # indexFile = "index.ndx"
colvars: The following index groups are currently defined:
colvars:   Protein (104 atoms)
colvars:   Protein_noH (51 atoms)
colvars:   Protein_Backbone (40 atoms)
colvars:   Protein_C-alpha (10 atoms)
colvars:   RMSD_atoms (10 atoms)
colvars:   Protein_C-alpha_1_2 (2 atoms)
colvars:   Protein_C-alpha_9_10 (2 atoms)
colvars:   Protein_C-alpha_1 (1 atoms)
colvars:   group1 (4 atoms)
colvars:   Protein_C-alpha_2 (1 atoms)
colvars:   group2 (4 atoms)
colvars:   Protein_C-alpha_3 (1 atoms)
colvars:   group3 (4 atoms)
colvars:   Protein_C-alpha_4 (1 atoms)
colvars:   group4 (4 atoms)
colvars:   Protein_C-alpha_5 (1 atoms)
colvars:   group5 (4 atoms)
colvars:   Protein_C-alpha_6 (1 atoms)
colvars:   group6 (4 atoms)
colvars:   Protein_C-alpha_7 (1 atoms)
colvars:   group7 (4 atoms)
colvars:   Protein_C-alpha_8 (1 atoms)
colvars:   group8 (4 atoms)
colvars:   Protein_C-alpha_9 (1 atoms)
colvars:   group9 (4 atoms)
colvars:   Protein_C-alpha_10 (1 atoms)
colvars:   group10 (4 atoms)
colvars:   heavy_atoms (51 atoms)
colvars: # smp = on [default]
colvars: # colvarsTrajFrequency = 1
colvars: # colvarsRestartFrequency = 10
colvars: # scriptedColvarForces = off [default]
colvars: # scriptingAfterBiases = off [default]
colvars: # sourceTclFile = "" [default]
colvars: ----------------------------------------------------------------------
colvars:   Initializing a new collective variable.
colvars:   # name = "one"
colvars:   Initializing a new "distanceZ" component.
colvars:     # name = "" [default]
colvars:     # componentCoeff = 1 [default]
colvars:     # componentExp = 1 [default]
colvars:     # period = 0 [default]
colvars:     # wrapAround = 0 [default]
colvars:     # forceNoPBC = off [default]
colvars:     # scalable = on [default]
colvars:       Initializing atom group "main".
colvars:       # name = "" [default]
colvars:       # centerToOrigin = off [default]
colvars:       # centerToReference = off [default]
colvars:       # rotateToReference = off [default]
colvars:       # atomsOfGroup = "" [default]
colvars:       # indexGroup = "group3"
colvars:       # psfSegID =  [default]
colvars:       # atomsFile = "" [default]
colvars:       # dummyAtom = ( 0 , 0 , 0 ) [default]
colvars:       # enableFitGradients = on [default]
colvars:       Enabling scalable calculation for group "main".
colvars:       # printAtomIDs = off [default]
colvars:       Atom group "main" defined with 4 atoms requested.
colvars:       Initializing atom group "ref".
colvars:       # name = "" [default]
colvars:       # centerToOrigin = off [default]
colvars:       # centerToReference = off [default]
colvars:       # rotateToReference = off [default]
colvars:       # atomsOfGroup = "" [default]
colvars:       # indexGroup = "group4"
colvars:       # psfSegID =  [default]
colvars:       # atomsFile = "" [default]
colvars:       # dummyAtom = ( 0 , 0 , 0 ) [default]
colvars:       # enableFitGradients = on [default]
colvars:       Enabling scalable calculation for group "ref".
colvars:       # printAtomIDs = off [default]
colvars:       Atom group "ref" defined with 4 atoms requested.
colvars:     # axis = ( 0 , 0 , 1 ) [default]
colvars:     # oneSiteSystemForce = off [default]
colvars:     # oneSiteTotalForce = off [default]
colvars:   All components initialized.
colvars:   # timeStepFactor = 1 [default]
colvars:   # width = 0.5
colvars:   # lowerBoundary = -10
colvars:   # upperBoundary = 10
colvars:   # hardLowerBoundary = off [default]
colvars:   # hardUpperBoundary = off [default]
colvars:   # expandBoundaries = off [default]
colvars:   # extendedLagrangian = off [default]
colvars:   # outputValue = on [default]
colvars:   # outputVelocity = off [default]
colvars:   # outputTotalForce = off [default]
colvars:   # outputAppliedForce = on
colvars:   # subtractAppliedForce = off [default]
colvars:   # runAve = off [default]
colvars:   # corrFunc = off [default]
colvars: ----------------------------------------------------------------------
colvars: Collective variables initialized, 1 in total.
colvars: ----------------------------------------------------------------------
colvars:   Initializing a new "abf" instance.
colvars:   # name = "abf1" [default]
colvars:   # colvars = { one }
colvars:   # stepZeroData = off [default]
colvars:   # outputEnergy = off [default]
colvars:   # outputFreq = 10 [default]
colvars:   # timeStepFactor = 1 [default]
colvars:   WARNING: ABF should not be run without a thermostat or at 0 Kelvin!
colvars:   # applyBias = on [default]
colvars:   # hideJacobian = off [default]
colvars:   Jacobian (geometric) forces will be included in reported free energy gradients.
colvars:   # fullSamples = 1
colvars:   # minSamples = 0 [default]
colvars:   # inputPrefix =  [default]
colvars:   # historyFreq = 0 [default]
colvars:   # shared = off [default]
colvars:   # updateBias = on [default]
colvars:   # maxForce =  [default]
colvars:   # integrate = on [default]
colvars:   Finished ABF setup.
colvars: ----------------------------------------------------------------------
colvars: Collective variables biases initialized, 1 in total.
colvars: ----------------------------------------------------------------------
colvars: Collective variables module (re)initialized.
colvars: ----------------------------------------------------------------------
colvars: Updating NAMD interface:
colvars: updating atomic data (0 atoms).
colvars: updating group data (2 scalable groups, 8 atoms in total).
colvars: updating grid object data (0 grid objects in total).
colvars: updating target temperature (T = 0 K).
colvars: Restarted abf bias "abf1" with step number 40.
colvars: The restart output state file will be "test.tmp.colvars.state".
colvars: Synchronizing (emptying the buffer of) trajectory file "test.colvars.traj".
colvars: Saving collective variables state to "test.tmp.colvars.state".
colvars: Synchronizing (emptying the buffer of) trajectory file "test.colvars.traj".
colvars: Saving collective variables state to "test.tmp.colvars.state".
colvars: Synchronizing (emptying the buffer of) trajectory file "test.colvars.traj".
colvars: Saving collective variables state to "test.tmp.colvars.state".
colvars: Saving collective variables state to "test.colvars.state".
