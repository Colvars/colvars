# -*- tcl -*-

# Note: see also test.restart.namd, test.legacy.namd, test.restart.legacy.namd

source ../Common/common.namd

colvars                 on

run 0

set output [open "test.output.dat" "w"]

puts ${output} ======================================================================
puts ${output} "General commands"
puts ${output} ""
puts ${output} [cv help]

puts ${output} ======================================================================
puts ${output} "Colvar commands"
puts ${output} ""
puts ${output} [cv help colvar]

puts ${output} ======================================================================
puts ${output} "Bias commands"
puts ${output} ""
puts ${output} [cv help bias]

puts ${output} ======================================================================
puts ${output} "Detailed help for all script functions"
puts ${output} ""

foreach cmd [lsort [cv listcommands]] {
    if { (${cmd} == "cv_colvar") || (${cmd} == "cv_bias") } {
        # Skip the prefixes
        continue
    }
    puts ${output} ======================================================================
    puts ${output} "Help for script function \"${cmd}\":"
    puts ${output} ""
    if { [string range ${cmd} 0 2] == "cv_" } {
        set subcmd [string range ${cmd} 3 end]
        puts -nonewline ${output} "[cv help ${subcmd}]"
    } elseif { [string range ${cmd} 0 4] == "bias_" } {
        set subcmd [string range ${cmd} 5 end]
        puts -nonewline ${output} "[cv bias name help ${subcmd}]"
    } elseif { [string range ${cmd} 0 6] == "colvar_" } {
        set subcmd [string range ${cmd} 7 end]
        puts -nonewline ${output} "[cv colvar name help ${subcmd}]"
    }
}
puts ${output} ======================================================================
close ${output}

set git_top_dir [exec git rev-parse --show-toplevel]
set output [open ${git_top_dir}/doc/cvscript-tcl.tex "w"]
source ${git_top_dir}/doc/gen_cvscript_doc.tcl

source ../Common/delete_tmp_files.tcl
